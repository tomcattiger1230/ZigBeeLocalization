###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.20.2.41139 for 8051             09/Apr/2016  13:40:17 #
# Copyright 2004-2013 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#                                                                             #
#    Source file        =  F:\myCloud\ZigbeeTest\Projects\zstack\Samples\Samp #
#                          leApp\Source\algorithmandfilter.c                  #
#    Command line       =  -f F:\myCloud\ZigbeeTest\Projects\zstack\Samples\S #
#                          ampleApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wCoord #
#                          .cfg (-DCPU32MHZ -DROOT=__near_func                #
#                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE                   #
#                          -DZDO_COORDINATOR -DRTR_NWK -DBLINK_LEDS) -f       #
#                          F:\myCloud\ZigbeeTest\Projects\zstack\Samples\Samp #
#                          leApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.c #
#                          fg (-DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR   #
#                          -DDEFAULT_CHANLIST=0x00000800                      #
#                          -DZDAPP_CONFIG_PAN_ID=0xFFF1                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116 "-DCONST=const __code"    #
#                          -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=TRUE      #
#                          -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100            #
#                          -DRESPONSE_POLL_RATE=100) -DREJOIN_POLL_RATE=440   #
#                          F:\myCloud\ZigbeeTest\Projects\zstack\Samples\Samp #
#                          leApp\Source\algorithmandfilter.c -D ZIGBEEPRO -D  #
#                          ZTOOL_P1 -D xMT_TASK -D xMT_SYS_FUNC -D            #
#                          xMT_ZDO_FUNC -D LCD_SUPPORTED=DEBUG -lC            #
#                          F:\myCloud\ZigbeeTest\Projects\zstack\Samples\Samp #
#                          leApp\CC2530DB\PCCoordinatorEBPro\List\ -lA        #
#                          F:\myCloud\ZigbeeTest\Projects\zstack\Samples\Samp #
#                          leApp\CC2530DB\PCCoordinatorEBPro\List\            #
#                          --diag_suppress Pe001,Pa010 -o                     #
#                          F:\myCloud\ZigbeeTest\Projects\zstack\Samples\Samp #
#                          leApp\CC2530DB\PCCoordinatorEBPro\Obj\ -e          #
#                          --no_cse --no_unroll --no_inline --no_code_motion  #
#                          --no_tbaa --debug --core=plain --dptr=16,1         #
#                          --data_model=large --code_model=banked             #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data_rom --nr_virtual_regs 16    #
#                          -I F:\myCloud\ZigbeeTest\Projects\zstack\Samples\S #
#                          ampleApp\CC2530DB\ -I F:\myCloud\ZigbeeTest\Projec #
#                          ts\zstack\Samples\SampleApp\CC2530DB\..\SOURCE\    #
#                          -I F:\myCloud\ZigbeeTest\Projects\zstack\Samples\S #
#                          ampleApp\CC2530DB\..\..\..\ZMAIN\TI2530DB\ -I      #
#                          F:\myCloud\ZigbeeTest\Projects\zstack\Samples\Samp #
#                          leApp\CC2530DB\..\..\..\..\..\COMPONENTS\MT\ -I    #
#                          F:\myCloud\ZigbeeTest\Projects\zstack\Samples\Samp #
#                          leApp\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\INCLU #
#                          DE\ -I F:\myCloud\ZigbeeTest\Projects\zstack\Sampl #
#                          es\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\HA #
#                          L\TARGET\CC2530EB\ -I F:\myCloud\ZigbeeTest\Projec #
#                          ts\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\. #
#                          .\COMPONENTS\OSAL\MCU\CCSOC\ -I                    #
#                          F:\myCloud\ZigbeeTest\Projects\zstack\Samples\Samp #
#                          leApp\CC2530DB\..\..\..\..\..\COMPONENTS\OSAL\INCL #
#                          UDE\ -I F:\myCloud\ZigbeeTest\Projects\zstack\Samp #
#                          les\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\S #
#                          TACK\AF\ -I F:\myCloud\ZigbeeTest\Projects\zstack\ #
#                          Samples\SampleApp\CC2530DB\..\..\..\..\..\COMPONEN #
#                          TS\STACK\NWK\ -I F:\myCloud\ZigbeeTest\Projects\zs #
#                          tack\Samples\SampleApp\CC2530DB\..\..\..\..\..\COM #
#                          PONENTS\STACK\SEC\ -I F:\myCloud\ZigbeeTest\Projec #
#                          ts\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\. #
#                          .\COMPONENTS\STACK\SAPI\ -I                        #
#                          F:\myCloud\ZigbeeTest\Projects\zstack\Samples\Samp #
#                          leApp\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\SYS #
#                          \ -I F:\myCloud\ZigbeeTest\Projects\zstack\Samples #
#                          \SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\STAC #
#                          K\ZDO\ -I F:\myCloud\ZigbeeTest\Projects\zstack\Sa #
#                          mples\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS #
#                          \ZMAC\F8W\ -I F:\myCloud\ZigbeeTest\Projects\zstac #
#                          k\Samples\SampleApp\CC2530DB\..\..\..\..\..\COMPON #
#                          ENTS\ZMAC\ -I F:\myCloud\ZigbeeTest\Projects\zstac #
#                          k\Samples\SampleApp\CC2530DB\..\..\..\..\..\COMPON #
#                          ENTS\SERVICES\SADDR\ -I F:\myCloud\ZigbeeTest\Proj #
#                          ects\zstack\Samples\SampleApp\CC2530DB\..\..\..\.. #
#                          \..\COMPONENTS\SERVICES\SDATA\ -I                  #
#                          F:\myCloud\ZigbeeTest\Projects\zstack\Samples\Samp #
#                          leApp\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\INCLU #
#                          DE\ -I F:\myCloud\ZigbeeTest\Projects\zstack\Sampl #
#                          es\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\MA #
#                          C\HIGH_LEVEL\ -I F:\myCloud\ZigbeeTest\Projects\zs #
#                          tack\Samples\SampleApp\CC2530DB\..\..\..\..\..\COM #
#                          PONENTS\MAC\LOW_LEVEL\srf04\ -I                    #
#                          F:\myCloud\ZigbeeTest\Projects\zstack\Samples\Samp #
#                          leApp\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\LOW_L #
#                          EVEL\srf04\SINGLE_CHIP\ -On --require_prototypes   #
#    List file          =  F:\myCloud\ZigbeeTest\Projects\zstack\Samples\Samp #
#                          leApp\CC2530DB\PCCoordinatorEBPro\List\algorithman #
#                          dfilter.lst                                        #
#    Object file        =  F:\myCloud\ZigbeeTest\Projects\zstack\Samples\Samp #
#                          leApp\CC2530DB\PCCoordinatorEBPro\Obj\algorithmand #
#                          filter.r51                                         #
#                                                                             #
#                                                                             #
###############################################################################

F:\myCloud\ZigbeeTest\Projects\zstack\Samples\SampleApp\Source\algorithmandfilter.c
      1          /**************************************************************************************************
      2            Filename:       algorithmandfilter.c
      3            Revised:        $Date: 2016-01-09  $
      4            Revision:       $Revision: 1 $
      5          
      6            Description:    algorithmandfilter.
      7          
      8          
      9          **************************************************************************************************/
     10          
     11          /*********************************************************************
     12           * INCLUDES
     13           */
     14          #include "algorithmandfilter.h"
     15          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     16          void printRSSIandLQI(afIncomingMSGPacket_t *pkt, int specindex)
   \                     printRSSIandLQI:
     17          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 12
   \   000005   74F4         MOV     A,#-0xc
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   EA           MOV     A,R2
   \   00000B   FE           MOV     R6,A
   \   00000C   EB           MOV     A,R3
   \   00000D   FF           MOV     R7,A
   \   00000E   8C..         MOV     ?V0 + 2,R4
   \   000010   8D..         MOV     ?V0 + 3,R5
     18            
     19                   if(!specindex)
   \   000012   E5..         MOV     A,?V0 + 2
   \   000014   45..         ORL     A,?V0 + 3
   \   000016   6003         JZ      $+5
   \   000018   02....       LJMP    ??printRSSIandLQI_0 & 0xFFFF
     20                  { 
     21                    int8 rssivalue;
     22                  rssivalue=0xff-pkt->rssi;
   \   00001B   EE           MOV     A,R6
   \   00001C   2418         ADD     A,#0x18
   \   00001E   F582         MOV     DPL,A
   \   000020   EF           MOV     A,R7
   \   000021   3400         ADDC    A,#0x0
   \   000023   F583         MOV     DPH,A
   \   000025   E0           MOVX    A,@DPTR
   \   000026   F8           MOV     R0,A
   \   000027   74FF         MOV     A,#-0x1
   \   000029   C3           CLR     C
   \   00002A   98           SUBB    A,R0
   \   00002B   F5..         MOV     ?V0 + 1,A
     23                  unsigned char rssi_buf[3];
     24                  rssi_buf[0]='-';
   \   00002D   7409         MOV     A,#0x9
   \   00002F   12....       LCALL   ?XSTACK_DISP0_8
   \   000032   742D         MOV     A,#0x2d
   \   000034   F0           MOVX    @DPTR,A
     25                  rssi_buf[1]=rssivalue/10+0x30;
   \   000035   E5..         MOV     A,?V0 + 1
   \   000037   75F00A       MOV     B,#0xa
   \   00003A   12....       LCALL   ?SC_DIV_MOD
   \   00003D   2430         ADD     A,#0x30
   \   00003F   C0E0         PUSH    A
   \   000041   740A         MOV     A,#0xa
   \   000043   12....       LCALL   ?XSTACK_DISP0_8
   \   000046   D0E0         POP     A
   \   000048   F0           MOVX    @DPTR,A
     26                  rssi_buf[2]=rssivalue%10+0x30;
   \   000049   E5..         MOV     A,?V0 + 1
   \   00004B   75F00A       MOV     B,#0xa
   \   00004E   12....       LCALL   ?SC_DIV_MOD
   \   000051   E5F0         MOV     A,B
   \   000053   2430         ADD     A,#0x30
   \   000055   C0E0         PUSH    A
   \   000057   740B         MOV     A,#0xb
   \   000059   12....       LCALL   ?XSTACK_DISP0_8
   \   00005C   D0E0         POP     A
   \   00005E   F0           MOVX    @DPTR,A
     27                   HalUARTWrite(0, pkt->cmd.Data, pkt->cmd.DataLength); //print out the data through uart
   \   00005F                ; Setup parameters for call to function HalUARTWrite
   \   00005F   EE           MOV     A,R6
   \   000060   241F         ADD     A,#0x1f
   \   000062   F582         MOV     DPL,A
   \   000064   EF           MOV     A,R7
   \   000065   3400         ADDC    A,#0x0
   \   000067   F583         MOV     DPH,A
   \   000069   E0           MOVX    A,@DPTR
   \   00006A   FC           MOV     R4,A
   \   00006B   A3           INC     DPTR
   \   00006C   E0           MOVX    A,@DPTR
   \   00006D   FD           MOV     R5,A
   \   00006E   EE           MOV     A,R6
   \   00006F   2421         ADD     A,#0x21
   \   000071   F582         MOV     DPL,A
   \   000073   EF           MOV     A,R7
   \   000074   3400         ADDC    A,#0x0
   \   000076   F583         MOV     DPH,A
   \   000078   E0           MOVX    A,@DPTR
   \   000079   FA           MOV     R2,A
   \   00007A   A3           INC     DPTR
   \   00007B   E0           MOVX    A,@DPTR
   \   00007C   FB           MOV     R3,A
   \   00007D   7900         MOV     R1,#0x0
   \   00007F   12....       LCALL   ??HalUARTWrite?relay
     28                          
     29              //  HalUARTWrite(0, "\n", 1); 
     30                HalUARTWrite(0, "RSSI:", 5);  
   \   000082                ; Setup parameters for call to function HalUARTWrite
   \   000082   7C05         MOV     R4,#0x5
   \   000084   7D00         MOV     R5,#0x0
   \   000086   7A..         MOV     R2,#`?<Constant "RSSI:">` & 0xff
   \   000088   7B..         MOV     R3,#(`?<Constant "RSSI:">` >> 8) & 0xff
   \   00008A   7900         MOV     R1,#0x0
   \   00008C   12....       LCALL   ??HalUARTWrite?relay
     31                HalUARTWrite(0,rssi_buf,3);
   \   00008F                ; Setup parameters for call to function HalUARTWrite
   \   00008F   7C03         MOV     R4,#0x3
   \   000091   7D00         MOV     R5,#0x0
   \   000093   7409         MOV     A,#0x9
   \   000095   12....       LCALL   ?XSTACK_DISP0_8
   \   000098   AA82         MOV     R2,DPL
   \   00009A   AB83         MOV     R3,DPH
   \   00009C   7900         MOV     R1,#0x0
   \   00009E   12....       LCALL   ??HalUARTWrite?relay
     32          //     HalUARTWrite(0, "\r\n", 2); 
     33          //     
     34               uint8 lqivalue;
     35               lqivalue=pkt->LinkQuality;
   \   0000A1   EE           MOV     A,R6
   \   0000A2   2416         ADD     A,#0x16
   \   0000A4   F582         MOV     DPL,A
   \   0000A6   EF           MOV     A,R7
   \   0000A7   3400         ADDC    A,#0x0
   \   0000A9   F583         MOV     DPH,A
   \   0000AB   E0           MOVX    A,@DPTR
   \   0000AC   F5..         MOV     ?V0 + 0,A
     36               unsigned char lqi_buf[3];
     37                lqi_buf[0]=lqivalue/100+0x30;
   \   0000AE   75F064       MOV     B,#0x64
   \   0000B1   E5..         MOV     A,?V0 + 0
   \   0000B3   84           DIV     AB
   \   0000B4   2430         ADD     A,#0x30
   \   0000B6   C0E0         PUSH    A
   \   0000B8   7406         MOV     A,#0x6
   \   0000BA   12....       LCALL   ?XSTACK_DISP0_8
   \   0000BD   D0E0         POP     A
   \   0000BF   F0           MOVX    @DPTR,A
     38                  lqi_buf[1]=(lqivalue%100)/10+0x30;
   \   0000C0   75F00A       MOV     B,#0xa
   \   0000C3   C0F0         PUSH    B
   \   0000C5   E5..         MOV     A,?V0 + 0
   \   0000C7   75F064       MOV     B,#0x64
   \   0000CA   84           DIV     AB
   \   0000CB   E5F0         MOV     A,B
   \   0000CD   D0F0         POP     B
   \   0000CF   84           DIV     AB
   \   0000D0   2430         ADD     A,#0x30
   \   0000D2   C0E0         PUSH    A
   \   0000D4   7407         MOV     A,#0x7
   \   0000D6   12....       LCALL   ?XSTACK_DISP0_8
   \   0000D9   D0E0         POP     A
   \   0000DB   F0           MOVX    @DPTR,A
     39                  lqi_buf[2]=lqivalue%10+0x30;
   \   0000DC   E5..         MOV     A,?V0 + 0
   \   0000DE   75F00A       MOV     B,#0xa
   \   0000E1   84           DIV     AB
   \   0000E2   E5F0         MOV     A,B
   \   0000E4   2430         ADD     A,#0x30
   \   0000E6   C0E0         PUSH    A
   \   0000E8   7408         MOV     A,#0x8
   \   0000EA   12....       LCALL   ?XSTACK_DISP0_8
   \   0000ED   D0E0         POP     A
   \   0000EF   F0           MOVX    @DPTR,A
     40                HalUARTWrite(0, "LQI:", 4);  
   \   0000F0                ; Setup parameters for call to function HalUARTWrite
   \   0000F0   7C04         MOV     R4,#0x4
   \   0000F2   7D00         MOV     R5,#0x0
   \   0000F4   7A..         MOV     R2,#`?<Constant "LQI:">` & 0xff
   \   0000F6   7B..         MOV     R3,#(`?<Constant "LQI:">` >> 8) & 0xff
   \   0000F8   7900         MOV     R1,#0x0
   \   0000FA   12....       LCALL   ??HalUARTWrite?relay
     41                HalUARTWrite(0,lqi_buf,3);
   \   0000FD                ; Setup parameters for call to function HalUARTWrite
   \   0000FD   7C03         MOV     R4,#0x3
   \   0000FF   7D00         MOV     R5,#0x0
   \   000101   7406         MOV     A,#0x6
   \   000103   12....       LCALL   ?XSTACK_DISP0_8
   \   000106   AA82         MOV     R2,DPL
   \   000108   AB83         MOV     R3,DPH
   \   00010A   7900         MOV     R1,#0x0
   \   00010C   12....       LCALL   ??HalUARTWrite?relay
     42               HalUARTWrite(0, "\n", 1);         //create a new line
   \   00010F                ; Setup parameters for call to function HalUARTWrite
   \   00010F   7C01         MOV     R4,#0x1
   \   000111   7D00         MOV     R5,#0x0
   \   000113   7A..         MOV     R2,#`?<Constant "\\n">` & 0xff
   \   000115   7B..         MOV     R3,#(`?<Constant "\\n">` >> 8) & 0xff
   \   000117   7900         MOV     R1,#0x0
   \   000119   12....       LCALL   ??HalUARTWrite?relay
   \   00011C   02....       LJMP    ??printRSSIandLQI_1 & 0xFFFF
     43                  }
     44                  else if (specindex==(int)*(pkt->cmd.Data+1)-48)
   \                     ??printRSSIandLQI_0:
   \   00011F   EE           MOV     A,R6
   \   000120   2421         ADD     A,#0x21
   \   000122   F582         MOV     DPL,A
   \   000124   EF           MOV     A,R7
   \   000125   3400         ADDC    A,#0x0
   \   000127   F583         MOV     DPH,A
   \   000129   E0           MOVX    A,@DPTR
   \   00012A   F8           MOV     R0,A
   \   00012B   A3           INC     DPTR
   \   00012C   E0           MOVX    A,@DPTR
   \   00012D   F583         MOV     DPH,A
   \   00012F   8882         MOV     DPL,R0
   \   000131   A3           INC     DPTR
   \   000132   E0           MOVX    A,@DPTR
   \   000133   F8           MOV     R0,A
   \   000134   7900         MOV     R1,#0x0
   \   000136   24D0         ADD     A,#-0x30
   \   000138   F8           MOV     R0,A
   \   000139   E9           MOV     A,R1
   \   00013A   34FF         ADDC    A,#-0x1
   \   00013C   F9           MOV     R1,A
   \   00013D   E8           MOV     A,R0
   \   00013E   65..         XRL     A,?V0 + 2
   \   000140   7003         JNZ     ??printRSSIandLQI_2
   \   000142   E9           MOV     A,R1
   \   000143   65..         XRL     A,?V0 + 3
   \                     ??printRSSIandLQI_2:
   \   000145   6003         JZ      $+5
   \   000147   02....       LJMP    ??printRSSIandLQI_1 & 0xFFFF
     45                  {
     46                              int8 rssivalue;
     47                  rssivalue=0xff-pkt->rssi;
   \   00014A   EE           MOV     A,R6
   \   00014B   2418         ADD     A,#0x18
   \   00014D   F582         MOV     DPL,A
   \   00014F   EF           MOV     A,R7
   \   000150   3400         ADDC    A,#0x0
   \   000152   F583         MOV     DPH,A
   \   000154   E0           MOVX    A,@DPTR
   \   000155   F8           MOV     R0,A
   \   000156   74FF         MOV     A,#-0x1
   \   000158   C3           CLR     C
   \   000159   98           SUBB    A,R0
   \   00015A   F5..         MOV     ?V0 + 1,A
     48                  unsigned char rssi_buf[3];
     49                  rssi_buf[0]='-';
   \   00015C   7403         MOV     A,#0x3
   \   00015E   12....       LCALL   ?XSTACK_DISP0_8
   \   000161   742D         MOV     A,#0x2d
   \   000163   F0           MOVX    @DPTR,A
     50                  rssi_buf[1]=rssivalue/10+0x30;
   \   000164   E5..         MOV     A,?V0 + 1
   \   000166   75F00A       MOV     B,#0xa
   \   000169   12....       LCALL   ?SC_DIV_MOD
   \   00016C   2430         ADD     A,#0x30
   \   00016E   C0E0         PUSH    A
   \   000170   7404         MOV     A,#0x4
   \   000172   12....       LCALL   ?XSTACK_DISP0_8
   \   000175   D0E0         POP     A
   \   000177   F0           MOVX    @DPTR,A
     51                  rssi_buf[2]=rssivalue%10+0x30;
   \   000178   E5..         MOV     A,?V0 + 1
   \   00017A   75F00A       MOV     B,#0xa
   \   00017D   12....       LCALL   ?SC_DIV_MOD
   \   000180   E5F0         MOV     A,B
   \   000182   2430         ADD     A,#0x30
   \   000184   C0E0         PUSH    A
   \   000186   7405         MOV     A,#0x5
   \   000188   12....       LCALL   ?XSTACK_DISP0_8
   \   00018B   D0E0         POP     A
   \   00018D   F0           MOVX    @DPTR,A
     52                   HalUARTWrite(0, pkt->cmd.Data, pkt->cmd.DataLength); //print out the data through uart
   \   00018E                ; Setup parameters for call to function HalUARTWrite
   \   00018E   EE           MOV     A,R6
   \   00018F   241F         ADD     A,#0x1f
   \   000191   F582         MOV     DPL,A
   \   000193   EF           MOV     A,R7
   \   000194   3400         ADDC    A,#0x0
   \   000196   F583         MOV     DPH,A
   \   000198   E0           MOVX    A,@DPTR
   \   000199   FC           MOV     R4,A
   \   00019A   A3           INC     DPTR
   \   00019B   E0           MOVX    A,@DPTR
   \   00019C   FD           MOV     R5,A
   \   00019D   EE           MOV     A,R6
   \   00019E   2421         ADD     A,#0x21
   \   0001A0   F582         MOV     DPL,A
   \   0001A2   EF           MOV     A,R7
   \   0001A3   3400         ADDC    A,#0x0
   \   0001A5   F583         MOV     DPH,A
   \   0001A7   E0           MOVX    A,@DPTR
   \   0001A8   FA           MOV     R2,A
   \   0001A9   A3           INC     DPTR
   \   0001AA   E0           MOVX    A,@DPTR
   \   0001AB   FB           MOV     R3,A
   \   0001AC   7900         MOV     R1,#0x0
   \   0001AE   12....       LCALL   ??HalUARTWrite?relay
     53                          
     54              //  HalUARTWrite(0, "\n", 1); 
     55                HalUARTWrite(0, "RSSI:", 5);  
   \   0001B1                ; Setup parameters for call to function HalUARTWrite
   \   0001B1   7C05         MOV     R4,#0x5
   \   0001B3   7D00         MOV     R5,#0x0
   \   0001B5   7A..         MOV     R2,#`?<Constant "RSSI:">` & 0xff
   \   0001B7   7B..         MOV     R3,#(`?<Constant "RSSI:">` >> 8) & 0xff
   \   0001B9   7900         MOV     R1,#0x0
   \   0001BB   12....       LCALL   ??HalUARTWrite?relay
     56                HalUARTWrite(0,rssi_buf,3);
   \   0001BE                ; Setup parameters for call to function HalUARTWrite
   \   0001BE   7C03         MOV     R4,#0x3
   \   0001C0   7D00         MOV     R5,#0x0
   \   0001C2   7403         MOV     A,#0x3
   \   0001C4   12....       LCALL   ?XSTACK_DISP0_8
   \   0001C7   AA82         MOV     R2,DPL
   \   0001C9   AB83         MOV     R3,DPH
   \   0001CB   7900         MOV     R1,#0x0
   \   0001CD   12....       LCALL   ??HalUARTWrite?relay
     57          //     HalUARTWrite(0, "\r\n", 2); 
     58          //     
     59               uint8 lqivalue;
     60               lqivalue=pkt->LinkQuality;
   \   0001D0   EE           MOV     A,R6
   \   0001D1   2416         ADD     A,#0x16
   \   0001D3   F582         MOV     DPL,A
   \   0001D5   EF           MOV     A,R7
   \   0001D6   3400         ADDC    A,#0x0
   \   0001D8   F583         MOV     DPH,A
   \   0001DA   E0           MOVX    A,@DPTR
   \   0001DB   F5..         MOV     ?V0 + 0,A
     61               unsigned char lqi_buf[3];
     62                lqi_buf[0]=lqivalue/100+0x30;
   \   0001DD   75F064       MOV     B,#0x64
   \   0001E0   E5..         MOV     A,?V0 + 0
   \   0001E2   84           DIV     AB
   \   0001E3   2430         ADD     A,#0x30
   \   0001E5   85..82       MOV     DPL,?XSP + 0
   \   0001E8   85..83       MOV     DPH,?XSP + 1
   \   0001EB   F0           MOVX    @DPTR,A
     63                  lqi_buf[1]=(lqivalue%100)/10+0x30;
   \   0001EC   75F00A       MOV     B,#0xa
   \   0001EF   C0F0         PUSH    B
   \   0001F1   E5..         MOV     A,?V0 + 0
   \   0001F3   75F064       MOV     B,#0x64
   \   0001F6   84           DIV     AB
   \   0001F7   E5F0         MOV     A,B
   \   0001F9   D0F0         POP     B
   \   0001FB   84           DIV     AB
   \   0001FC   2430         ADD     A,#0x30
   \   0001FE   C0E0         PUSH    A
   \   000200   7401         MOV     A,#0x1
   \   000202   12....       LCALL   ?XSTACK_DISP0_8
   \   000205   D0E0         POP     A
   \   000207   F0           MOVX    @DPTR,A
     64                  lqi_buf[2]=lqivalue%10+0x30;
   \   000208   E5..         MOV     A,?V0 + 0
   \   00020A   75F00A       MOV     B,#0xa
   \   00020D   84           DIV     AB
   \   00020E   E5F0         MOV     A,B
   \   000210   2430         ADD     A,#0x30
   \   000212   C0E0         PUSH    A
   \   000214   7402         MOV     A,#0x2
   \   000216   12....       LCALL   ?XSTACK_DISP0_8
   \   000219   D0E0         POP     A
   \   00021B   F0           MOVX    @DPTR,A
     65                HalUARTWrite(0, "LQI:", 4);  
   \   00021C                ; Setup parameters for call to function HalUARTWrite
   \   00021C   7C04         MOV     R4,#0x4
   \   00021E   7D00         MOV     R5,#0x0
   \   000220   7A..         MOV     R2,#`?<Constant "LQI:">` & 0xff
   \   000222   7B..         MOV     R3,#(`?<Constant "LQI:">` >> 8) & 0xff
   \   000224   7900         MOV     R1,#0x0
   \   000226   12....       LCALL   ??HalUARTWrite?relay
     66                HalUARTWrite(0,lqi_buf,3);
   \   000229                ; Setup parameters for call to function HalUARTWrite
   \   000229   7C03         MOV     R4,#0x3
   \   00022B   7D00         MOV     R5,#0x0
   \   00022D   85..82       MOV     DPL,?XSP + 0
   \   000230   85..83       MOV     DPH,?XSP + 1
   \   000233   AA82         MOV     R2,DPL
   \   000235   AB83         MOV     R3,DPH
   \   000237   7900         MOV     R1,#0x0
   \   000239   12....       LCALL   ??HalUARTWrite?relay
     67               HalUARTWrite(0, "\n", 1);         //create a new line
   \   00023C                ; Setup parameters for call to function HalUARTWrite
   \   00023C   7C01         MOV     R4,#0x1
   \   00023E   7D00         MOV     R5,#0x0
   \   000240   7A..         MOV     R2,#`?<Constant "\\n">` & 0xff
   \   000242   7B..         MOV     R3,#(`?<Constant "\\n">` >> 8) & 0xff
   \   000244   7900         MOV     R1,#0x0
   \   000246   12....       LCALL   ??HalUARTWrite?relay
     68                  }
     69                
     70                                  
     71                            
     72          //                   unsigned char rssi_buf[3];
     73          //                     rssi_buf[0]='-';
     74          //                    rssi_buf[1]=(int32)sumRssi1/10+0x30;
     75          //                    rssi_buf[2]=(int32)sumRssi1%10+0x30;
     76          //                   HalUARTWrite(0,rssi_buf,3);
     77          }
   \                     ??printRSSIandLQI_1:
   \   000249   740C         MOV     A,#0xc
   \   00024B   12....       LCALL   ?DEALLOC_XSTACK8
   \   00024E   7F04         MOV     R7,#0x4
   \   000250   02....       LJMP    ?BANKED_LEAVE_XDATA
     78          
     79          
     80          
     81          /*********************************************************************
     82           * @fn      SampleApp_MinMax_localization
     83           *
     84           * @brief   calculate the position of a quadrotor
     85           *
     86           * @param   rssi_i readings from different anchors, the result will be stored in xposition and yposition
     87           *
     88           * @return  none
     89           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     90          void SampleApp_MinMax_localization(float* xposition, float* yposition, float zposition, float nValue[4], float RssiValue[4],
   \                     SampleApp_MinMax_localization:
     91                                             float AValue[4], float AnchorX[4], float AnchorY[4], float OffsetA[4])
     92          {
   \   000000   74E8         MOV     A,#-0x18
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 24
   \   000005                ; Auto size: 36
   \   000005   74DC         MOV     A,#-0x24
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   740E         MOV     A,#0xe
   \   00000C   12....       LCALL   ?XSTACK_DISP0_8
   \   00000F   EA           MOV     A,R2
   \   000010   F0           MOVX    @DPTR,A
   \   000011   A3           INC     DPTR
   \   000012   EB           MOV     A,R3
   \   000013   F0           MOVX    @DPTR,A
   \   000014   740C         MOV     A,#0xc
   \   000016   12....       LCALL   ?XSTACK_DISP0_8
   \   000019   EC           MOV     A,R4
   \   00001A   F0           MOVX    @DPTR,A
   \   00001B   A3           INC     DPTR
   \   00001C   ED           MOV     A,R5
   \   00001D   F0           MOVX    @DPTR,A
   \   00001E   743C         MOV     A,#0x3c
   \   000020   12....       LCALL   ?XSTACK_DISP0_8
   \   000023   78..         MOV     R0,#?V0 + 0
   \   000025   12....       LCALL   ?L_MOV_X
     93              //initial the parameter 
     94              float x_left=-10;
   \   000028   7C00         MOV     R4,#0x0
   \   00002A   7D00         MOV     R5,#0x0
   \   00002C   7E20         MOV     R6,#0x20
   \   00002E   7FC1         MOV     R7,#-0x3f
   \   000030   7408         MOV     A,#0x8
   \   000032   12....       LCALL   ?XSTACK_DISP0_8
   \   000035   EC           MOV     A,R4
   \   000036   F0           MOVX    @DPTR,A
   \   000037   A3           INC     DPTR
   \   000038   ED           MOV     A,R5
   \   000039   F0           MOVX    @DPTR,A
   \   00003A   A3           INC     DPTR
   \   00003B   EE           MOV     A,R6
   \   00003C   F0           MOVX    @DPTR,A
   \   00003D   A3           INC     DPTR
   \   00003E   EF           MOV     A,R7
   \   00003F   F0           MOVX    @DPTR,A
     95              float x_right=10;
   \   000040   7C00         MOV     R4,#0x0
   \   000042   7D00         MOV     R5,#0x0
   \   000044   7E20         MOV     R6,#0x20
   \   000046   7F41         MOV     R7,#0x41
   \   000048   7404         MOV     A,#0x4
   \   00004A   12....       LCALL   ?XSTACK_DISP0_8
   \   00004D   EC           MOV     A,R4
   \   00004E   F0           MOVX    @DPTR,A
   \   00004F   A3           INC     DPTR
   \   000050   ED           MOV     A,R5
   \   000051   F0           MOVX    @DPTR,A
   \   000052   A3           INC     DPTR
   \   000053   EE           MOV     A,R6
   \   000054   F0           MOVX    @DPTR,A
   \   000055   A3           INC     DPTR
   \   000056   EF           MOV     A,R7
   \   000057   F0           MOVX    @DPTR,A
     96              float y_bottom=-10;
   \   000058   75..00       MOV     ?V0 + 4,#0x0
   \   00005B   75..00       MOV     ?V0 + 5,#0x0
   \   00005E   75..20       MOV     ?V0 + 6,#0x20
   \   000061   75..C1       MOV     ?V0 + 7,#-0x3f
     97              float y_top=10;
   \   000064   7C00         MOV     R4,#0x0
   \   000066   7D00         MOV     R5,#0x0
   \   000068   7E20         MOV     R6,#0x20
   \   00006A   7F41         MOV     R7,#0x41
   \   00006C   85..82       MOV     DPL,?XSP + 0
   \   00006F   85..83       MOV     DPH,?XSP + 1
   \   000072   EC           MOV     A,R4
   \   000073   F0           MOVX    @DPTR,A
   \   000074   A3           INC     DPTR
   \   000075   ED           MOV     A,R5
   \   000076   F0           MOVX    @DPTR,A
   \   000077   A3           INC     DPTR
   \   000078   EE           MOV     A,R6
   \   000079   F0           MOVX    @DPTR,A
   \   00007A   A3           INC     DPTR
   \   00007B   EF           MOV     A,R7
   \   00007C   F0           MOVX    @DPTR,A
     98              float gainconst=1.0f;
   \   00007D   7C00         MOV     R4,#0x0
   \   00007F   7D00         MOV     R5,#0x0
   \   000081   7E80         MOV     R6,#-0x80
   \   000083   7F3F         MOV     R7,#0x3f
   \   000085   7420         MOV     A,#0x20
   \   000087   12....       LCALL   ?XSTACK_DISP0_8
   \   00008A   EC           MOV     A,R4
   \   00008B   F0           MOVX    @DPTR,A
   \   00008C   A3           INC     DPTR
   \   00008D   ED           MOV     A,R5
   \   00008E   F0           MOVX    @DPTR,A
   \   00008F   A3           INC     DPTR
   \   000090   EE           MOV     A,R6
   \   000091   F0           MOVX    @DPTR,A
   \   000092   A3           INC     DPTR
   \   000093   EF           MOV     A,R7
   \   000094   F0           MOVX    @DPTR,A
     99              //float naverage=0.0f;
    100              float distance[4]={0.0f};
   \   000095   90....       MOV     DPTR,#`?<Constant {(0.0F)}>`
   \   000098   C082         PUSH    DPL
   \   00009A   C083         PUSH    DPH
   \   00009C   7410         MOV     A,#0x10
   \   00009E   12....       LCALL   ?XSTACK_DISP0_8
   \   0000A1   AC82         MOV     R4,DPL
   \   0000A3   AD83         MOV     R5,DPH
   \   0000A5   D083         POP     DPH
   \   0000A7   D082         POP     DPL
   \   0000A9   7410         MOV     A,#0x10
   \   0000AB   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
    101          //    for(int i=0;i<4;i++)
    102          //    {
    103          //      naverage+=nValue[i];
    104          //    }
    105          //    naverage=naverage/4.0f;
    106              //calculate the distances based on the calibrated parameter n and A
    107              for (int i=0; i<4; i++)
   \   0000AE   7E00         MOV     R6,#0x0
   \   0000B0   7F00         MOV     R7,#0x0
   \                     ??SampleApp_MinMax_localization_0:
   \   0000B2   C3           CLR     C
   \   0000B3   EE           MOV     A,R6
   \   0000B4   9404         SUBB    A,#0x4
   \   0000B6   EF           MOV     A,R7
   \   0000B7   9400         SUBB    A,#0x0
   \   0000B9   A2D2         MOV     C,0xD0 /* PSW */.2
   \   0000BB   65D0         XRL     A,PSW
   \   0000BD   33           RLC     A
   \   0000BE   4003         JC      $+5
   \   0000C0   02....       LJMP    ??SampleApp_MinMax_localization_1 & 0xFFFF
    108              {
    109                distance[i]=pow(10,((RssiValue[i]/gainconst-AValue[i]+OffsetA[i])/(10*nValue[i])));
   \   0000C3                ; Setup parameters for call to function pow
   \   0000C3   EE           MOV     A,R6
   \   0000C4   F8           MOV     R0,A
   \   0000C5   EF           MOV     A,R7
   \   0000C6   F9           MOV     R1,A
   \   0000C7   E8           MOV     A,R0
   \   0000C8   75F004       MOV     B,#0x4
   \   0000CB   A4           MUL     AB
   \   0000CC   C8           XCH     A,R0
   \   0000CD   AAF0         MOV     R2,B
   \   0000CF   75F000       MOV     B,#0x0
   \   0000D2   A4           MUL     AB
   \   0000D3   2A           ADD     A,R2
   \   0000D4   FA           MOV     R2,A
   \   0000D5   75F004       MOV     B,#0x4
   \   0000D8   E9           MOV     A,R1
   \   0000D9   A4           MUL     AB
   \   0000DA   2A           ADD     A,R2
   \   0000DB   F9           MOV     R1,A
   \   0000DC   7442         MOV     A,#0x42
   \   0000DE   12....       LCALL   ?XSTACK_DISP0_8
   \   0000E1   E0           MOVX    A,@DPTR
   \   0000E2   28           ADD     A,R0
   \   0000E3   FA           MOV     R2,A
   \   0000E4   A3           INC     DPTR
   \   0000E5   E0           MOVX    A,@DPTR
   \   0000E6   39           ADDC    A,R1
   \   0000E7   8A82         MOV     DPL,R2
   \   0000E9   F583         MOV     DPH,A
   \   0000EB   78..         MOV     R0,#?V0 + 8
   \   0000ED   12....       LCALL   ?L_MOV_X
   \   0000F0   7420         MOV     A,#0x20
   \   0000F2   12....       LCALL   ?XSTACK_DISP0_8
   \   0000F5   78..         MOV     R0,#?V0 + 12
   \   0000F7   12....       LCALL   ?L_MOV_X
   \   0000FA   78..         MOV     R0,#?V0 + 8
   \   0000FC   79..         MOV     R1,#?V0 + 12
   \   0000FE   12....       LCALL   ?FLT_DIV
   \   000101   EE           MOV     A,R6
   \   000102   F8           MOV     R0,A
   \   000103   EF           MOV     A,R7
   \   000104   F9           MOV     R1,A
   \   000105   E8           MOV     A,R0
   \   000106   75F004       MOV     B,#0x4
   \   000109   A4           MUL     AB
   \   00010A   C8           XCH     A,R0
   \   00010B   AAF0         MOV     R2,B
   \   00010D   75F000       MOV     B,#0x0
   \   000110   A4           MUL     AB
   \   000111   2A           ADD     A,R2
   \   000112   FA           MOV     R2,A
   \   000113   75F004       MOV     B,#0x4
   \   000116   E9           MOV     A,R1
   \   000117   A4           MUL     AB
   \   000118   2A           ADD     A,R2
   \   000119   F9           MOV     R1,A
   \   00011A   7444         MOV     A,#0x44
   \   00011C   12....       LCALL   ?XSTACK_DISP0_8
   \   00011F   E0           MOVX    A,@DPTR
   \   000120   28           ADD     A,R0
   \   000121   FA           MOV     R2,A
   \   000122   A3           INC     DPTR
   \   000123   E0           MOVX    A,@DPTR
   \   000124   39           ADDC    A,R1
   \   000125   8A82         MOV     DPL,R2
   \   000127   F583         MOV     DPH,A
   \   000129   78..         MOV     R0,#?V0 + 12
   \   00012B   12....       LCALL   ?L_MOV_X
   \   00012E   78..         MOV     R0,#?V0 + 8
   \   000130   79..         MOV     R1,#?V0 + 12
   \   000132   12....       LCALL   ?FLT_SUB
   \   000135   EE           MOV     A,R6
   \   000136   F8           MOV     R0,A
   \   000137   EF           MOV     A,R7
   \   000138   F9           MOV     R1,A
   \   000139   E8           MOV     A,R0
   \   00013A   75F004       MOV     B,#0x4
   \   00013D   A4           MUL     AB
   \   00013E   C8           XCH     A,R0
   \   00013F   AAF0         MOV     R2,B
   \   000141   75F000       MOV     B,#0x0
   \   000144   A4           MUL     AB
   \   000145   2A           ADD     A,R2
   \   000146   FA           MOV     R2,A
   \   000147   75F004       MOV     B,#0x4
   \   00014A   E9           MOV     A,R1
   \   00014B   A4           MUL     AB
   \   00014C   2A           ADD     A,R2
   \   00014D   F9           MOV     R1,A
   \   00014E   744A         MOV     A,#0x4a
   \   000150   12....       LCALL   ?XSTACK_DISP0_8
   \   000153   E0           MOVX    A,@DPTR
   \   000154   28           ADD     A,R0
   \   000155   FA           MOV     R2,A
   \   000156   A3           INC     DPTR
   \   000157   E0           MOVX    A,@DPTR
   \   000158   39           ADDC    A,R1
   \   000159   8A82         MOV     DPL,R2
   \   00015B   F583         MOV     DPH,A
   \   00015D   78..         MOV     R0,#?V0 + 12
   \   00015F   12....       LCALL   ?L_MOV_X
   \   000162   78..         MOV     R0,#?V0 + 8
   \   000164   79..         MOV     R1,#?V0 + 12
   \   000166   12....       LCALL   ?FLT_ADD
   \   000169   C0..         PUSH    ?V0 + 8
   \   00016B   C0..         PUSH    ?V0 + 9
   \   00016D   C0..         PUSH    ?V0 + 10
   \   00016F   C0..         PUSH    ?V0 + 11
   \   000171   EE           MOV     A,R6
   \   000172   F8           MOV     R0,A
   \   000173   EF           MOV     A,R7
   \   000174   F9           MOV     R1,A
   \   000175   E8           MOV     A,R0
   \   000176   75F004       MOV     B,#0x4
   \   000179   A4           MUL     AB
   \   00017A   C8           XCH     A,R0
   \   00017B   AAF0         MOV     R2,B
   \   00017D   75F000       MOV     B,#0x0
   \   000180   A4           MUL     AB
   \   000181   2A           ADD     A,R2
   \   000182   FA           MOV     R2,A
   \   000183   75F004       MOV     B,#0x4
   \   000186   E9           MOV     A,R1
   \   000187   A4           MUL     AB
   \   000188   2A           ADD     A,R2
   \   000189   F9           MOV     R1,A
   \   00018A   7440         MOV     A,#0x40
   \   00018C   12....       LCALL   ?XSTACK_DISP0_8
   \   00018F   E0           MOVX    A,@DPTR
   \   000190   28           ADD     A,R0
   \   000191   FA           MOV     R2,A
   \   000192   A3           INC     DPTR
   \   000193   E0           MOVX    A,@DPTR
   \   000194   39           ADDC    A,R1
   \   000195   8A82         MOV     DPL,R2
   \   000197   F583         MOV     DPH,A
   \   000199   78..         MOV     R0,#?V0 + 12
   \   00019B   12....       LCALL   ?L_MOV_X
   \   00019E   90....       MOV     DPTR,#__Constant_41200000
   \   0001A1   78..         MOV     R0,#?V0 + 8
   \   0001A3   12....       LCALL   ?L_MOV_X
   \   0001A6   78..         MOV     R0,#?V0 + 12
   \   0001A8   79..         MOV     R1,#?V0 + 8
   \   0001AA   12....       LCALL   ?FLT_MUL
   \   0001AD   D0..         POP     ?V0 + 11
   \   0001AF   D0..         POP     ?V0 + 10
   \   0001B1   D0..         POP     ?V0 + 9
   \   0001B3   D0..         POP     ?V0 + 8
   \   0001B5   78..         MOV     R0,#?V0 + 8
   \   0001B7   79..         MOV     R1,#?V0 + 12
   \   0001B9   12....       LCALL   ?FLT_DIV
   \   0001BC   78..         MOV     R0,#?V0 + 8
   \   0001BE   12....       LCALL   ?PUSH_XSTACK_I_FOUR
   \   0001C1   90....       MOV     DPTR,#__Constant_41200000
   \   0001C4   12....       LCALL   ?XLOAD_R2345
   \   0001C7   12....       LCALL   ??pow?relay
   \   0001CA   7404         MOV     A,#0x4
   \   0001CC   12....       LCALL   ?DEALLOC_XSTACK8
   \   0001CF   EE           MOV     A,R6
   \   0001D0   F8           MOV     R0,A
   \   0001D1   EF           MOV     A,R7
   \   0001D2   F9           MOV     R1,A
   \   0001D3   E8           MOV     A,R0
   \   0001D4   75F004       MOV     B,#0x4
   \   0001D7   A4           MUL     AB
   \   0001D8   C8           XCH     A,R0
   \   0001D9   85F0..       MOV     ?V0 + 8,B
   \   0001DC   75F000       MOV     B,#0x0
   \   0001DF   A4           MUL     AB
   \   0001E0   25..         ADD     A,?V0 + 8
   \   0001E2   F5..         MOV     ?V0 + 8,A
   \   0001E4   75F004       MOV     B,#0x4
   \   0001E7   E9           MOV     A,R1
   \   0001E8   A4           MUL     AB
   \   0001E9   25..         ADD     A,?V0 + 8
   \   0001EB   F9           MOV     R1,A
   \   0001EC   7410         MOV     A,#0x10
   \   0001EE   12....       LCALL   ?XSTACK_DISP0_8
   \   0001F1   E582         MOV     A,DPL
   \   0001F3   28           ADD     A,R0
   \   0001F4   F582         MOV     DPL,A
   \   0001F6   E583         MOV     A,DPH
   \   0001F8   39           ADDC    A,R1
   \   0001F9   F583         MOV     DPH,A
   \   0001FB   12....       LCALL   ?XSTORE_R2345
    110                distance[i]=pow((distance[i]*distance[i]-zposition*zposition),0.5);
   \   0001FE                ; Setup parameters for call to function pow
   \   0001FE   90....       MOV     DPTR,#__Constant_3f000000
   \   000201   12....       LCALL   ?PUSH_XSTACK8_X_FOUR
   \   000204   EE           MOV     A,R6
   \   000205   F8           MOV     R0,A
   \   000206   EF           MOV     A,R7
   \   000207   F9           MOV     R1,A
   \   000208   E8           MOV     A,R0
   \   000209   75F004       MOV     B,#0x4
   \   00020C   A4           MUL     AB
   \   00020D   C8           XCH     A,R0
   \   00020E   AAF0         MOV     R2,B
   \   000210   75F000       MOV     B,#0x0
   \   000213   A4           MUL     AB
   \   000214   2A           ADD     A,R2
   \   000215   FA           MOV     R2,A
   \   000216   75F004       MOV     B,#0x4
   \   000219   E9           MOV     A,R1
   \   00021A   A4           MUL     AB
   \   00021B   2A           ADD     A,R2
   \   00021C   F9           MOV     R1,A
   \   00021D   7414         MOV     A,#0x14
   \   00021F   12....       LCALL   ?XSTACK_DISP0_8
   \   000222   E582         MOV     A,DPL
   \   000224   28           ADD     A,R0
   \   000225   F582         MOV     DPL,A
   \   000227   E583         MOV     A,DPH
   \   000229   39           ADDC    A,R1
   \   00022A   F583         MOV     DPH,A
   \   00022C   78..         MOV     R0,#?V0 + 8
   \   00022E   12....       LCALL   ?L_MOV_X
   \   000231   EE           MOV     A,R6
   \   000232   F8           MOV     R0,A
   \   000233   EF           MOV     A,R7
   \   000234   F9           MOV     R1,A
   \   000235   E8           MOV     A,R0
   \   000236   75F004       MOV     B,#0x4
   \   000239   A4           MUL     AB
   \   00023A   C8           XCH     A,R0
   \   00023B   AAF0         MOV     R2,B
   \   00023D   75F000       MOV     B,#0x0
   \   000240   A4           MUL     AB
   \   000241   2A           ADD     A,R2
   \   000242   FA           MOV     R2,A
   \   000243   75F004       MOV     B,#0x4
   \   000246   E9           MOV     A,R1
   \   000247   A4           MUL     AB
   \   000248   2A           ADD     A,R2
   \   000249   F9           MOV     R1,A
   \   00024A   7414         MOV     A,#0x14
   \   00024C   12....       LCALL   ?XSTACK_DISP0_8
   \   00024F   E582         MOV     A,DPL
   \   000251   28           ADD     A,R0
   \   000252   F582         MOV     DPL,A
   \   000254   E583         MOV     A,DPH
   \   000256   39           ADDC    A,R1
   \   000257   F583         MOV     DPH,A
   \   000259   78..         MOV     R0,#?V0 + 12
   \   00025B   12....       LCALL   ?L_MOV_X
   \   00025E   78..         MOV     R0,#?V0 + 8
   \   000260   79..         MOV     R1,#?V0 + 12
   \   000262   12....       LCALL   ?FLT_MUL
   \   000265   85....       MOV     ?V0 + 12,?V0 + 0
   \   000268   85....       MOV     ?V0 + 13,?V0 + 1
   \   00026B   85....       MOV     ?V0 + 14,?V0 + 2
   \   00026E   85....       MOV     ?V0 + 15,?V0 + 3
   \   000271   78..         MOV     R0,#?V0 + 12
   \   000273   79..         MOV     R1,#?V0 + 0
   \   000275   12....       LCALL   ?FLT_MUL
   \   000278   78..         MOV     R0,#?V0 + 8
   \   00027A   79..         MOV     R1,#?V0 + 12
   \   00027C   12....       LCALL   ?FLT_SUB
   \   00027F   AA..         MOV     R2,?V0 + 8
   \   000281   AB..         MOV     R3,?V0 + 9
   \   000283   AC..         MOV     R4,?V0 + 10
   \   000285   AD..         MOV     R5,?V0 + 11
   \   000287   12....       LCALL   ??pow?relay
   \   00028A   7404         MOV     A,#0x4
   \   00028C   12....       LCALL   ?DEALLOC_XSTACK8
   \   00028F   EE           MOV     A,R6
   \   000290   F8           MOV     R0,A
   \   000291   EF           MOV     A,R7
   \   000292   F9           MOV     R1,A
   \   000293   E8           MOV     A,R0
   \   000294   75F004       MOV     B,#0x4
   \   000297   A4           MUL     AB
   \   000298   C8           XCH     A,R0
   \   000299   85F0..       MOV     ?V0 + 8,B
   \   00029C   75F000       MOV     B,#0x0
   \   00029F   A4           MUL     AB
   \   0002A0   25..         ADD     A,?V0 + 8
   \   0002A2   F5..         MOV     ?V0 + 8,A
   \   0002A4   75F004       MOV     B,#0x4
   \   0002A7   E9           MOV     A,R1
   \   0002A8   A4           MUL     AB
   \   0002A9   25..         ADD     A,?V0 + 8
   \   0002AB   F9           MOV     R1,A
   \   0002AC   7410         MOV     A,#0x10
   \   0002AE   12....       LCALL   ?XSTACK_DISP0_8
   \   0002B1   E582         MOV     A,DPL
   \   0002B3   28           ADD     A,R0
   \   0002B4   F582         MOV     DPL,A
   \   0002B6   E583         MOV     A,DPH
   \   0002B8   39           ADDC    A,R1
   \   0002B9   F583         MOV     DPH,A
   \   0002BB   12....       LCALL   ?XSTORE_R2345
    111              }
   \   0002BE   EE           MOV     A,R6
   \   0002BF   2401         ADD     A,#0x1
   \   0002C1   FE           MOV     R6,A
   \   0002C2   EF           MOV     A,R7
   \   0002C3   3400         ADDC    A,#0x0
   \   0002C5   FF           MOV     R7,A
   \   0002C6   02....       LJMP    ??SampleApp_MinMax_localization_0 & 0xFFFF
    112              
    113              
    114              for(int i=0; i<4; i++)
   \                     ??SampleApp_MinMax_localization_1:
   \   0002C9   7A00         MOV     R2,#0x0
   \   0002CB   7B00         MOV     R3,#0x0
   \                     ??SampleApp_MinMax_localization_2:
   \   0002CD   C3           CLR     C
   \   0002CE   EA           MOV     A,R2
   \   0002CF   9404         SUBB    A,#0x4
   \   0002D1   EB           MOV     A,R3
   \   0002D2   9400         SUBB    A,#0x0
   \   0002D4   A2D2         MOV     C,0xD0 /* PSW */.2
   \   0002D6   65D0         XRL     A,PSW
   \   0002D8   33           RLC     A
   \   0002D9   4003         JC      $+5
   \   0002DB   02....       LJMP    ??SampleApp_MinMax_localization_3 & 0xFFFF
    115              {
    116                
    117                  //max of  
    118                 if((AnchorX[i]-distance[i])>x_left)
   \   0002DE   7408         MOV     A,#0x8
   \   0002E0   12....       LCALL   ?XSTACK_DISP0_8
   \   0002E3   78..         MOV     R0,#?V0 + 8
   \   0002E5   12....       LCALL   ?L_MOV_X
   \   0002E8   C0..         PUSH    ?V0 + 8
   \   0002EA   C0..         PUSH    ?V0 + 9
   \   0002EC   C0..         PUSH    ?V0 + 10
   \   0002EE   C0..         PUSH    ?V0 + 11
   \   0002F0   EA           MOV     A,R2
   \   0002F1   F8           MOV     R0,A
   \   0002F2   EB           MOV     A,R3
   \   0002F3   F9           MOV     R1,A
   \   0002F4   E8           MOV     A,R0
   \   0002F5   75F004       MOV     B,#0x4
   \   0002F8   A4           MUL     AB
   \   0002F9   C8           XCH     A,R0
   \   0002FA   ACF0         MOV     R4,B
   \   0002FC   75F000       MOV     B,#0x0
   \   0002FF   A4           MUL     AB
   \   000300   2C           ADD     A,R4
   \   000301   FC           MOV     R4,A
   \   000302   75F004       MOV     B,#0x4
   \   000305   E9           MOV     A,R1
   \   000306   A4           MUL     AB
   \   000307   2C           ADD     A,R4
   \   000308   F9           MOV     R1,A
   \   000309   7446         MOV     A,#0x46
   \   00030B   12....       LCALL   ?XSTACK_DISP0_8
   \   00030E   E0           MOVX    A,@DPTR
   \   00030F   28           ADD     A,R0
   \   000310   FC           MOV     R4,A
   \   000311   A3           INC     DPTR
   \   000312   E0           MOVX    A,@DPTR
   \   000313   39           ADDC    A,R1
   \   000314   8C82         MOV     DPL,R4
   \   000316   F583         MOV     DPH,A
   \   000318   78..         MOV     R0,#?V0 + 12
   \   00031A   12....       LCALL   ?L_MOV_X
   \   00031D   EA           MOV     A,R2
   \   00031E   F8           MOV     R0,A
   \   00031F   EB           MOV     A,R3
   \   000320   F9           MOV     R1,A
   \   000321   E8           MOV     A,R0
   \   000322   75F004       MOV     B,#0x4
   \   000325   A4           MUL     AB
   \   000326   C8           XCH     A,R0
   \   000327   ACF0         MOV     R4,B
   \   000329   75F000       MOV     B,#0x0
   \   00032C   A4           MUL     AB
   \   00032D   2C           ADD     A,R4
   \   00032E   FC           MOV     R4,A
   \   00032F   75F004       MOV     B,#0x4
   \   000332   E9           MOV     A,R1
   \   000333   A4           MUL     AB
   \   000334   2C           ADD     A,R4
   \   000335   F9           MOV     R1,A
   \   000336   7410         MOV     A,#0x10
   \   000338   12....       LCALL   ?XSTACK_DISP0_8
   \   00033B   E582         MOV     A,DPL
   \   00033D   28           ADD     A,R0
   \   00033E   F582         MOV     DPL,A
   \   000340   E583         MOV     A,DPH
   \   000342   39           ADDC    A,R1
   \   000343   F583         MOV     DPH,A
   \   000345   78..         MOV     R0,#?V0 + 8
   \   000347   12....       LCALL   ?L_MOV_X
   \   00034A   78..         MOV     R0,#?V0 + 12
   \   00034C   79..         MOV     R1,#?V0 + 8
   \   00034E   12....       LCALL   ?FLT_SUB
   \   000351   D0..         POP     ?V0 + 11
   \   000353   D0..         POP     ?V0 + 10
   \   000355   D0..         POP     ?V0 + 9
   \   000357   D0..         POP     ?V0 + 8
   \   000359   78..         MOV     R0,#?V0 + 8
   \   00035B   79..         MOV     R1,#?V0 + 12
   \   00035D   12....       LCALL   ?FLT_LT
   \   000360   506B         JNC     ??SampleApp_MinMax_localization_4
    119                 {x_left=(AnchorX[i]-distance[i]);}
   \   000362   EA           MOV     A,R2
   \   000363   F8           MOV     R0,A
   \   000364   EB           MOV     A,R3
   \   000365   F9           MOV     R1,A
   \   000366   E8           MOV     A,R0
   \   000367   75F004       MOV     B,#0x4
   \   00036A   A4           MUL     AB
   \   00036B   C8           XCH     A,R0
   \   00036C   ACF0         MOV     R4,B
   \   00036E   75F000       MOV     B,#0x0
   \   000371   A4           MUL     AB
   \   000372   2C           ADD     A,R4
   \   000373   FC           MOV     R4,A
   \   000374   75F004       MOV     B,#0x4
   \   000377   E9           MOV     A,R1
   \   000378   A4           MUL     AB
   \   000379   2C           ADD     A,R4
   \   00037A   F9           MOV     R1,A
   \   00037B   7446         MOV     A,#0x46
   \   00037D   12....       LCALL   ?XSTACK_DISP0_8
   \   000380   E0           MOVX    A,@DPTR
   \   000381   28           ADD     A,R0
   \   000382   FC           MOV     R4,A
   \   000383   A3           INC     DPTR
   \   000384   E0           MOVX    A,@DPTR
   \   000385   39           ADDC    A,R1
   \   000386   8C82         MOV     DPL,R4
   \   000388   F583         MOV     DPH,A
   \   00038A   78..         MOV     R0,#?V0 + 12
   \   00038C   12....       LCALL   ?L_MOV_X
   \   00038F   EA           MOV     A,R2
   \   000390   F8           MOV     R0,A
   \   000391   EB           MOV     A,R3
   \   000392   F9           MOV     R1,A
   \   000393   E8           MOV     A,R0
   \   000394   75F004       MOV     B,#0x4
   \   000397   A4           MUL     AB
   \   000398   C8           XCH     A,R0
   \   000399   ACF0         MOV     R4,B
   \   00039B   75F000       MOV     B,#0x0
   \   00039E   A4           MUL     AB
   \   00039F   2C           ADD     A,R4
   \   0003A0   FC           MOV     R4,A
   \   0003A1   75F004       MOV     B,#0x4
   \   0003A4   E9           MOV     A,R1
   \   0003A5   A4           MUL     AB
   \   0003A6   2C           ADD     A,R4
   \   0003A7   F9           MOV     R1,A
   \   0003A8   7410         MOV     A,#0x10
   \   0003AA   12....       LCALL   ?XSTACK_DISP0_8
   \   0003AD   E582         MOV     A,DPL
   \   0003AF   28           ADD     A,R0
   \   0003B0   F582         MOV     DPL,A
   \   0003B2   E583         MOV     A,DPH
   \   0003B4   39           ADDC    A,R1
   \   0003B5   F583         MOV     DPH,A
   \   0003B7   78..         MOV     R0,#?V0 + 8
   \   0003B9   12....       LCALL   ?L_MOV_X
   \   0003BC   78..         MOV     R0,#?V0 + 12
   \   0003BE   79..         MOV     R1,#?V0 + 8
   \   0003C0   12....       LCALL   ?FLT_SUB
   \   0003C3   7408         MOV     A,#0x8
   \   0003C5   12....       LCALL   ?XSTACK_DISP0_8
   \   0003C8   78..         MOV     R0,#?V0 + 12
   \   0003CA   12....       LCALL   ?L_MOV_TO_X
    120                 
    121                 if((AnchorX[i]+distance[i])<x_right)
   \                     ??SampleApp_MinMax_localization_4:
   \   0003CD   EA           MOV     A,R2
   \   0003CE   F8           MOV     R0,A
   \   0003CF   EB           MOV     A,R3
   \   0003D0   F9           MOV     R1,A
   \   0003D1   E8           MOV     A,R0
   \   0003D2   75F004       MOV     B,#0x4
   \   0003D5   A4           MUL     AB
   \   0003D6   C8           XCH     A,R0
   \   0003D7   ACF0         MOV     R4,B
   \   0003D9   75F000       MOV     B,#0x0
   \   0003DC   A4           MUL     AB
   \   0003DD   2C           ADD     A,R4
   \   0003DE   FC           MOV     R4,A
   \   0003DF   75F004       MOV     B,#0x4
   \   0003E2   E9           MOV     A,R1
   \   0003E3   A4           MUL     AB
   \   0003E4   2C           ADD     A,R4
   \   0003E5   F9           MOV     R1,A
   \   0003E6   7446         MOV     A,#0x46
   \   0003E8   12....       LCALL   ?XSTACK_DISP0_8
   \   0003EB   E0           MOVX    A,@DPTR
   \   0003EC   28           ADD     A,R0
   \   0003ED   FC           MOV     R4,A
   \   0003EE   A3           INC     DPTR
   \   0003EF   E0           MOVX    A,@DPTR
   \   0003F0   39           ADDC    A,R1
   \   0003F1   8C82         MOV     DPL,R4
   \   0003F3   F583         MOV     DPH,A
   \   0003F5   78..         MOV     R0,#?V0 + 8
   \   0003F7   12....       LCALL   ?L_MOV_X
   \   0003FA   EA           MOV     A,R2
   \   0003FB   F8           MOV     R0,A
   \   0003FC   EB           MOV     A,R3
   \   0003FD   F9           MOV     R1,A
   \   0003FE   E8           MOV     A,R0
   \   0003FF   75F004       MOV     B,#0x4
   \   000402   A4           MUL     AB
   \   000403   C8           XCH     A,R0
   \   000404   ACF0         MOV     R4,B
   \   000406   75F000       MOV     B,#0x0
   \   000409   A4           MUL     AB
   \   00040A   2C           ADD     A,R4
   \   00040B   FC           MOV     R4,A
   \   00040C   75F004       MOV     B,#0x4
   \   00040F   E9           MOV     A,R1
   \   000410   A4           MUL     AB
   \   000411   2C           ADD     A,R4
   \   000412   F9           MOV     R1,A
   \   000413   7410         MOV     A,#0x10
   \   000415   12....       LCALL   ?XSTACK_DISP0_8
   \   000418   E582         MOV     A,DPL
   \   00041A   28           ADD     A,R0
   \   00041B   F582         MOV     DPL,A
   \   00041D   E583         MOV     A,DPH
   \   00041F   39           ADDC    A,R1
   \   000420   F583         MOV     DPH,A
   \   000422   78..         MOV     R0,#?V0 + 12
   \   000424   12....       LCALL   ?L_MOV_X
   \   000427   78..         MOV     R0,#?V0 + 8
   \   000429   79..         MOV     R1,#?V0 + 12
   \   00042B   12....       LCALL   ?FLT_ADD
   \   00042E   7404         MOV     A,#0x4
   \   000430   12....       LCALL   ?XSTACK_DISP0_8
   \   000433   78..         MOV     R0,#?V0 + 12
   \   000435   12....       LCALL   ?L_MOV_X
   \   000438   78..         MOV     R0,#?V0 + 8
   \   00043A   79..         MOV     R1,#?V0 + 12
   \   00043C   12....       LCALL   ?FLT_LT
   \   00043F   506B         JNC     ??SampleApp_MinMax_localization_5
    122                 {x_right=(AnchorX[i]+distance[i]);}
   \   000441   EA           MOV     A,R2
   \   000442   F8           MOV     R0,A
   \   000443   EB           MOV     A,R3
   \   000444   F9           MOV     R1,A
   \   000445   E8           MOV     A,R0
   \   000446   75F004       MOV     B,#0x4
   \   000449   A4           MUL     AB
   \   00044A   C8           XCH     A,R0
   \   00044B   ACF0         MOV     R4,B
   \   00044D   75F000       MOV     B,#0x0
   \   000450   A4           MUL     AB
   \   000451   2C           ADD     A,R4
   \   000452   FC           MOV     R4,A
   \   000453   75F004       MOV     B,#0x4
   \   000456   E9           MOV     A,R1
   \   000457   A4           MUL     AB
   \   000458   2C           ADD     A,R4
   \   000459   F9           MOV     R1,A
   \   00045A   7446         MOV     A,#0x46
   \   00045C   12....       LCALL   ?XSTACK_DISP0_8
   \   00045F   E0           MOVX    A,@DPTR
   \   000460   28           ADD     A,R0
   \   000461   FC           MOV     R4,A
   \   000462   A3           INC     DPTR
   \   000463   E0           MOVX    A,@DPTR
   \   000464   39           ADDC    A,R1
   \   000465   8C82         MOV     DPL,R4
   \   000467   F583         MOV     DPH,A
   \   000469   78..         MOV     R0,#?V0 + 12
   \   00046B   12....       LCALL   ?L_MOV_X
   \   00046E   EA           MOV     A,R2
   \   00046F   F8           MOV     R0,A
   \   000470   EB           MOV     A,R3
   \   000471   F9           MOV     R1,A
   \   000472   E8           MOV     A,R0
   \   000473   75F004       MOV     B,#0x4
   \   000476   A4           MUL     AB
   \   000477   C8           XCH     A,R0
   \   000478   ACF0         MOV     R4,B
   \   00047A   75F000       MOV     B,#0x0
   \   00047D   A4           MUL     AB
   \   00047E   2C           ADD     A,R4
   \   00047F   FC           MOV     R4,A
   \   000480   75F004       MOV     B,#0x4
   \   000483   E9           MOV     A,R1
   \   000484   A4           MUL     AB
   \   000485   2C           ADD     A,R4
   \   000486   F9           MOV     R1,A
   \   000487   7410         MOV     A,#0x10
   \   000489   12....       LCALL   ?XSTACK_DISP0_8
   \   00048C   E582         MOV     A,DPL
   \   00048E   28           ADD     A,R0
   \   00048F   F582         MOV     DPL,A
   \   000491   E583         MOV     A,DPH
   \   000493   39           ADDC    A,R1
   \   000494   F583         MOV     DPH,A
   \   000496   78..         MOV     R0,#?V0 + 8
   \   000498   12....       LCALL   ?L_MOV_X
   \   00049B   78..         MOV     R0,#?V0 + 12
   \   00049D   79..         MOV     R1,#?V0 + 8
   \   00049F   12....       LCALL   ?FLT_ADD
   \   0004A2   7404         MOV     A,#0x4
   \   0004A4   12....       LCALL   ?XSTACK_DISP0_8
   \   0004A7   78..         MOV     R0,#?V0 + 12
   \   0004A9   12....       LCALL   ?L_MOV_TO_X
    123                 
    124                 if((AnchorY[i]-distance[i])>y_bottom)
   \                     ??SampleApp_MinMax_localization_5:
   \   0004AC   EA           MOV     A,R2
   \   0004AD   F8           MOV     R0,A
   \   0004AE   EB           MOV     A,R3
   \   0004AF   F9           MOV     R1,A
   \   0004B0   E8           MOV     A,R0
   \   0004B1   75F004       MOV     B,#0x4
   \   0004B4   A4           MUL     AB
   \   0004B5   C8           XCH     A,R0
   \   0004B6   ACF0         MOV     R4,B
   \   0004B8   75F000       MOV     B,#0x0
   \   0004BB   A4           MUL     AB
   \   0004BC   2C           ADD     A,R4
   \   0004BD   FC           MOV     R4,A
   \   0004BE   75F004       MOV     B,#0x4
   \   0004C1   E9           MOV     A,R1
   \   0004C2   A4           MUL     AB
   \   0004C3   2C           ADD     A,R4
   \   0004C4   F9           MOV     R1,A
   \   0004C5   7448         MOV     A,#0x48
   \   0004C7   12....       LCALL   ?XSTACK_DISP0_8
   \   0004CA   E0           MOVX    A,@DPTR
   \   0004CB   28           ADD     A,R0
   \   0004CC   FC           MOV     R4,A
   \   0004CD   A3           INC     DPTR
   \   0004CE   E0           MOVX    A,@DPTR
   \   0004CF   39           ADDC    A,R1
   \   0004D0   8C82         MOV     DPL,R4
   \   0004D2   F583         MOV     DPH,A
   \   0004D4   78..         MOV     R0,#?V0 + 12
   \   0004D6   12....       LCALL   ?L_MOV_X
   \   0004D9   EA           MOV     A,R2
   \   0004DA   F8           MOV     R0,A
   \   0004DB   EB           MOV     A,R3
   \   0004DC   F9           MOV     R1,A
   \   0004DD   E8           MOV     A,R0
   \   0004DE   75F004       MOV     B,#0x4
   \   0004E1   A4           MUL     AB
   \   0004E2   C8           XCH     A,R0
   \   0004E3   ACF0         MOV     R4,B
   \   0004E5   75F000       MOV     B,#0x0
   \   0004E8   A4           MUL     AB
   \   0004E9   2C           ADD     A,R4
   \   0004EA   FC           MOV     R4,A
   \   0004EB   75F004       MOV     B,#0x4
   \   0004EE   E9           MOV     A,R1
   \   0004EF   A4           MUL     AB
   \   0004F0   2C           ADD     A,R4
   \   0004F1   F9           MOV     R1,A
   \   0004F2   7410         MOV     A,#0x10
   \   0004F4   12....       LCALL   ?XSTACK_DISP0_8
   \   0004F7   E582         MOV     A,DPL
   \   0004F9   28           ADD     A,R0
   \   0004FA   F582         MOV     DPL,A
   \   0004FC   E583         MOV     A,DPH
   \   0004FE   39           ADDC    A,R1
   \   0004FF   F583         MOV     DPH,A
   \   000501   78..         MOV     R0,#?V0 + 8
   \   000503   12....       LCALL   ?L_MOV_X
   \   000506   78..         MOV     R0,#?V0 + 12
   \   000508   79..         MOV     R1,#?V0 + 8
   \   00050A   12....       LCALL   ?FLT_SUB
   \   00050D   78..         MOV     R0,#?V0 + 4
   \   00050F   79..         MOV     R1,#?V0 + 12
   \   000511   12....       LCALL   ?FLT_LT
   \   000514   506D         JNC     ??SampleApp_MinMax_localization_6
    125                 {y_bottom=(AnchorY[i]-distance[i]);}
   \   000516   EA           MOV     A,R2
   \   000517   F8           MOV     R0,A
   \   000518   EB           MOV     A,R3
   \   000519   F9           MOV     R1,A
   \   00051A   E8           MOV     A,R0
   \   00051B   75F004       MOV     B,#0x4
   \   00051E   A4           MUL     AB
   \   00051F   C8           XCH     A,R0
   \   000520   ACF0         MOV     R4,B
   \   000522   75F000       MOV     B,#0x0
   \   000525   A4           MUL     AB
   \   000526   2C           ADD     A,R4
   \   000527   FC           MOV     R4,A
   \   000528   75F004       MOV     B,#0x4
   \   00052B   E9           MOV     A,R1
   \   00052C   A4           MUL     AB
   \   00052D   2C           ADD     A,R4
   \   00052E   F9           MOV     R1,A
   \   00052F   7448         MOV     A,#0x48
   \   000531   12....       LCALL   ?XSTACK_DISP0_8
   \   000534   E0           MOVX    A,@DPTR
   \   000535   28           ADD     A,R0
   \   000536   FC           MOV     R4,A
   \   000537   A3           INC     DPTR
   \   000538   E0           MOVX    A,@DPTR
   \   000539   39           ADDC    A,R1
   \   00053A   8C82         MOV     DPL,R4
   \   00053C   F583         MOV     DPH,A
   \   00053E   78..         MOV     R0,#?V0 + 12
   \   000540   12....       LCALL   ?L_MOV_X
   \   000543   EA           MOV     A,R2
   \   000544   F8           MOV     R0,A
   \   000545   EB           MOV     A,R3
   \   000546   F9           MOV     R1,A
   \   000547   E8           MOV     A,R0
   \   000548   75F004       MOV     B,#0x4
   \   00054B   A4           MUL     AB
   \   00054C   C8           XCH     A,R0
   \   00054D   ACF0         MOV     R4,B
   \   00054F   75F000       MOV     B,#0x0
   \   000552   A4           MUL     AB
   \   000553   2C           ADD     A,R4
   \   000554   FC           MOV     R4,A
   \   000555   75F004       MOV     B,#0x4
   \   000558   E9           MOV     A,R1
   \   000559   A4           MUL     AB
   \   00055A   2C           ADD     A,R4
   \   00055B   F9           MOV     R1,A
   \   00055C   7410         MOV     A,#0x10
   \   00055E   12....       LCALL   ?XSTACK_DISP0_8
   \   000561   E582         MOV     A,DPL
   \   000563   28           ADD     A,R0
   \   000564   F582         MOV     DPL,A
   \   000566   E583         MOV     A,DPH
   \   000568   39           ADDC    A,R1
   \   000569   F583         MOV     DPH,A
   \   00056B   78..         MOV     R0,#?V0 + 8
   \   00056D   12....       LCALL   ?L_MOV_X
   \   000570   78..         MOV     R0,#?V0 + 12
   \   000572   79..         MOV     R1,#?V0 + 8
   \   000574   12....       LCALL   ?FLT_SUB
   \   000577   85....       MOV     ?V0 + 4,?V0 + 12
   \   00057A   85....       MOV     ?V0 + 5,?V0 + 13
   \   00057D   85....       MOV     ?V0 + 6,?V0 + 14
   \   000580   85....       MOV     ?V0 + 7,?V0 + 15
    126                 
    127                 if((AnchorY[i]+distance[i])<y_top)
   \                     ??SampleApp_MinMax_localization_6:
   \   000583   EA           MOV     A,R2
   \   000584   F8           MOV     R0,A
   \   000585   EB           MOV     A,R3
   \   000586   F9           MOV     R1,A
   \   000587   E8           MOV     A,R0
   \   000588   75F004       MOV     B,#0x4
   \   00058B   A4           MUL     AB
   \   00058C   C8           XCH     A,R0
   \   00058D   ACF0         MOV     R4,B
   \   00058F   75F000       MOV     B,#0x0
   \   000592   A4           MUL     AB
   \   000593   2C           ADD     A,R4
   \   000594   FC           MOV     R4,A
   \   000595   75F004       MOV     B,#0x4
   \   000598   E9           MOV     A,R1
   \   000599   A4           MUL     AB
   \   00059A   2C           ADD     A,R4
   \   00059B   F9           MOV     R1,A
   \   00059C   7448         MOV     A,#0x48
   \   00059E   12....       LCALL   ?XSTACK_DISP0_8
   \   0005A1   E0           MOVX    A,@DPTR
   \   0005A2   28           ADD     A,R0
   \   0005A3   FC           MOV     R4,A
   \   0005A4   A3           INC     DPTR
   \   0005A5   E0           MOVX    A,@DPTR
   \   0005A6   39           ADDC    A,R1
   \   0005A7   8C82         MOV     DPL,R4
   \   0005A9   F583         MOV     DPH,A
   \   0005AB   78..         MOV     R0,#?V0 + 8
   \   0005AD   12....       LCALL   ?L_MOV_X
   \   0005B0   EA           MOV     A,R2
   \   0005B1   F8           MOV     R0,A
   \   0005B2   EB           MOV     A,R3
   \   0005B3   F9           MOV     R1,A
   \   0005B4   E8           MOV     A,R0
   \   0005B5   75F004       MOV     B,#0x4
   \   0005B8   A4           MUL     AB
   \   0005B9   C8           XCH     A,R0
   \   0005BA   ACF0         MOV     R4,B
   \   0005BC   75F000       MOV     B,#0x0
   \   0005BF   A4           MUL     AB
   \   0005C0   2C           ADD     A,R4
   \   0005C1   FC           MOV     R4,A
   \   0005C2   75F004       MOV     B,#0x4
   \   0005C5   E9           MOV     A,R1
   \   0005C6   A4           MUL     AB
   \   0005C7   2C           ADD     A,R4
   \   0005C8   F9           MOV     R1,A
   \   0005C9   7410         MOV     A,#0x10
   \   0005CB   12....       LCALL   ?XSTACK_DISP0_8
   \   0005CE   E582         MOV     A,DPL
   \   0005D0   28           ADD     A,R0
   \   0005D1   F582         MOV     DPL,A
   \   0005D3   E583         MOV     A,DPH
   \   0005D5   39           ADDC    A,R1
   \   0005D6   F583         MOV     DPH,A
   \   0005D8   78..         MOV     R0,#?V0 + 12
   \   0005DA   12....       LCALL   ?L_MOV_X
   \   0005DD   78..         MOV     R0,#?V0 + 8
   \   0005DF   79..         MOV     R1,#?V0 + 12
   \   0005E1   12....       LCALL   ?FLT_ADD
   \   0005E4   85..82       MOV     DPL,?XSP + 0
   \   0005E7   85..83       MOV     DPH,?XSP + 1
   \   0005EA   78..         MOV     R0,#?V0 + 12
   \   0005EC   12....       LCALL   ?L_MOV_X
   \   0005EF   78..         MOV     R0,#?V0 + 8
   \   0005F1   79..         MOV     R1,#?V0 + 12
   \   0005F3   12....       LCALL   ?FLT_LT
   \   0005F6   506C         JNC     ??SampleApp_MinMax_localization_7
    128                 {y_top=(AnchorY[i]+distance[i]);}
   \   0005F8   EA           MOV     A,R2
   \   0005F9   F8           MOV     R0,A
   \   0005FA   EB           MOV     A,R3
   \   0005FB   F9           MOV     R1,A
   \   0005FC   E8           MOV     A,R0
   \   0005FD   75F004       MOV     B,#0x4
   \   000600   A4           MUL     AB
   \   000601   C8           XCH     A,R0
   \   000602   ACF0         MOV     R4,B
   \   000604   75F000       MOV     B,#0x0
   \   000607   A4           MUL     AB
   \   000608   2C           ADD     A,R4
   \   000609   FC           MOV     R4,A
   \   00060A   75F004       MOV     B,#0x4
   \   00060D   E9           MOV     A,R1
   \   00060E   A4           MUL     AB
   \   00060F   2C           ADD     A,R4
   \   000610   F9           MOV     R1,A
   \   000611   7448         MOV     A,#0x48
   \   000613   12....       LCALL   ?XSTACK_DISP0_8
   \   000616   E0           MOVX    A,@DPTR
   \   000617   28           ADD     A,R0
   \   000618   FC           MOV     R4,A
   \   000619   A3           INC     DPTR
   \   00061A   E0           MOVX    A,@DPTR
   \   00061B   39           ADDC    A,R1
   \   00061C   8C82         MOV     DPL,R4
   \   00061E   F583         MOV     DPH,A
   \   000620   78..         MOV     R0,#?V0 + 12
   \   000622   12....       LCALL   ?L_MOV_X
   \   000625   EA           MOV     A,R2
   \   000626   F8           MOV     R0,A
   \   000627   EB           MOV     A,R3
   \   000628   F9           MOV     R1,A
   \   000629   E8           MOV     A,R0
   \   00062A   75F004       MOV     B,#0x4
   \   00062D   A4           MUL     AB
   \   00062E   C8           XCH     A,R0
   \   00062F   ACF0         MOV     R4,B
   \   000631   75F000       MOV     B,#0x0
   \   000634   A4           MUL     AB
   \   000635   2C           ADD     A,R4
   \   000636   FC           MOV     R4,A
   \   000637   75F004       MOV     B,#0x4
   \   00063A   E9           MOV     A,R1
   \   00063B   A4           MUL     AB
   \   00063C   2C           ADD     A,R4
   \   00063D   F9           MOV     R1,A
   \   00063E   7410         MOV     A,#0x10
   \   000640   12....       LCALL   ?XSTACK_DISP0_8
   \   000643   E582         MOV     A,DPL
   \   000645   28           ADD     A,R0
   \   000646   F582         MOV     DPL,A
   \   000648   E583         MOV     A,DPH
   \   00064A   39           ADDC    A,R1
   \   00064B   F583         MOV     DPH,A
   \   00064D   78..         MOV     R0,#?V0 + 8
   \   00064F   12....       LCALL   ?L_MOV_X
   \   000652   78..         MOV     R0,#?V0 + 12
   \   000654   79..         MOV     R1,#?V0 + 8
   \   000656   12....       LCALL   ?FLT_ADD
   \   000659   85..82       MOV     DPL,?XSP + 0
   \   00065C   85..83       MOV     DPH,?XSP + 1
   \   00065F   78..         MOV     R0,#?V0 + 12
   \   000661   12....       LCALL   ?L_MOV_TO_X
    129              }
   \                     ??SampleApp_MinMax_localization_7:
   \   000664   EA           MOV     A,R2
   \   000665   2401         ADD     A,#0x1
   \   000667   FA           MOV     R2,A
   \   000668   EB           MOV     A,R3
   \   000669   3400         ADDC    A,#0x0
   \   00066B   FB           MOV     R3,A
   \   00066C   02....       LJMP    ??SampleApp_MinMax_localization_2 & 0xFFFF
    130              *xposition=(x_left+x_right)/2;
   \                     ??SampleApp_MinMax_localization_3:
   \   00066F   7408         MOV     A,#0x8
   \   000671   12....       LCALL   ?XSTACK_DISP0_8
   \   000674   78..         MOV     R0,#?V0 + 8
   \   000676   12....       LCALL   ?L_MOV_X
   \   000679   7404         MOV     A,#0x4
   \   00067B   12....       LCALL   ?XSTACK_DISP0_8
   \   00067E   78..         MOV     R0,#?V0 + 12
   \   000680   12....       LCALL   ?L_MOV_X
   \   000683   78..         MOV     R0,#?V0 + 8
   \   000685   79..         MOV     R1,#?V0 + 12
   \   000687   12....       LCALL   ?FLT_ADD
   \   00068A   90....       MOV     DPTR,#__Constant_40000000
   \   00068D   78..         MOV     R0,#?V0 + 12
   \   00068F   12....       LCALL   ?L_MOV_X
   \   000692   78..         MOV     R0,#?V0 + 8
   \   000694   79..         MOV     R1,#?V0 + 12
   \   000696   12....       LCALL   ?FLT_DIV
   \   000699   740E         MOV     A,#0xe
   \   00069B   12....       LCALL   ?XSTACK_DISP0_8
   \   00069E   E0           MOVX    A,@DPTR
   \   00069F   F8           MOV     R0,A
   \   0006A0   A3           INC     DPTR
   \   0006A1   E0           MOVX    A,@DPTR
   \   0006A2   F583         MOV     DPH,A
   \   0006A4   8882         MOV     DPL,R0
   \   0006A6   78..         MOV     R0,#?V0 + 8
   \   0006A8   12....       LCALL   ?L_MOV_TO_X
    131              *yposition=(y_bottom+y_top)/2;
   \   0006AB   85....       MOV     ?V0 + 8,?V0 + 4
   \   0006AE   85....       MOV     ?V0 + 9,?V0 + 5
   \   0006B1   85....       MOV     ?V0 + 10,?V0 + 6
   \   0006B4   85....       MOV     ?V0 + 11,?V0 + 7
   \   0006B7   85..82       MOV     DPL,?XSP + 0
   \   0006BA   85..83       MOV     DPH,?XSP + 1
   \   0006BD   78..         MOV     R0,#?V0 + 12
   \   0006BF   12....       LCALL   ?L_MOV_X
   \   0006C2   78..         MOV     R0,#?V0 + 8
   \   0006C4   79..         MOV     R1,#?V0 + 12
   \   0006C6   12....       LCALL   ?FLT_ADD
   \   0006C9   90....       MOV     DPTR,#__Constant_40000000
   \   0006CC   78..         MOV     R0,#?V0 + 12
   \   0006CE   12....       LCALL   ?L_MOV_X
   \   0006D1   78..         MOV     R0,#?V0 + 8
   \   0006D3   79..         MOV     R1,#?V0 + 12
   \   0006D5   12....       LCALL   ?FLT_DIV
   \   0006D8   740C         MOV     A,#0xc
   \   0006DA   12....       LCALL   ?XSTACK_DISP0_8
   \   0006DD   E0           MOVX    A,@DPTR
   \   0006DE   F8           MOV     R0,A
   \   0006DF   A3           INC     DPTR
   \   0006E0   E0           MOVX    A,@DPTR
   \   0006E1   F583         MOV     DPH,A
   \   0006E3   8882         MOV     DPL,R0
   \   0006E5   78..         MOV     R0,#?V0 + 8
   \   0006E7   12....       LCALL   ?L_MOV_TO_X
    132              
    133          }
   \   0006EA   7424         MOV     A,#0x24
   \   0006EC   12....       LCALL   ?DEALLOC_XSTACK8
   \   0006EF   7F10         MOV     R7,#0x10
   \   0006F1   02....       LJMP    ?BANKED_LEAVE_XDATA
    134          
    135          
    136          /*********************************************************************
    137           * @fn      SampleApp_WCL_localization
    138           *
    139           * @brief   calculate the position of a quadrotor
    140           *
    141           * @param   rssi_i readings from different anchors, the result will be stored in xposition and yposition
    142           *
    143           * @return  none
    144           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    145          void SampleApp_WCL_localization(float* xposition, float* yposition, float nValue[4], float RssiValue[4],
   \                     SampleApp_WCL_localization:
    146                                             float AValue[4], float AnchorX[4], float AnchorY[4], float OffsetA[4])
    147          {
   \   000000   74E8         MOV     A,#-0x18
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 24
   \   000005                ; Auto size: 48
   \   000005   74D0         MOV     A,#-0x30
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   7402         MOV     A,#0x2
   \   00000C   12....       LCALL   ?XSTACK_DISP0_8
   \   00000F   EA           MOV     A,R2
   \   000010   F0           MOVX    @DPTR,A
   \   000011   A3           INC     DPTR
   \   000012   EB           MOV     A,R3
   \   000013   F0           MOVX    @DPTR,A
   \   000014   85..82       MOV     DPL,?XSP + 0
   \   000017   85..83       MOV     DPH,?XSP + 1
   \   00001A   EC           MOV     A,R4
   \   00001B   F0           MOVX    @DPTR,A
   \   00001C   A3           INC     DPTR
   \   00001D   ED           MOV     A,R5
   \   00001E   F0           MOVX    @DPTR,A
    148              //initial the parameter 
    149              float g=2.78;   // const. parameter for WCL  2.78
   \   00001F   7C85         MOV     R4,#-0x7b
   \   000021   7DEB         MOV     R5,#-0x15
   \   000023   7E31         MOV     R6,#0x31
   \   000025   7F40         MOV     R7,#0x40
   \   000027   7408         MOV     A,#0x8
   \   000029   12....       LCALL   ?XSTACK_DISP0_8
   \   00002C   EC           MOV     A,R4
   \   00002D   F0           MOVX    @DPTR,A
   \   00002E   A3           INC     DPTR
   \   00002F   ED           MOV     A,R5
   \   000030   F0           MOVX    @DPTR,A
   \   000031   A3           INC     DPTR
   \   000032   EE           MOV     A,R6
   \   000033   F0           MOVX    @DPTR,A
   \   000034   A3           INC     DPTR
   \   000035   EF           MOV     A,R7
   \   000036   F0           MOVX    @DPTR,A
    150              float w[4]; //weight
    151              float sumw=0.0f; // sum of weights
   \   000037   75..00       MOV     ?V0 + 0,#0x0
   \   00003A   75..00       MOV     ?V0 + 1,#0x0
   \   00003D   75..00       MOV     ?V0 + 2,#0x0
   \   000040   75..00       MOV     ?V0 + 3,#0x0
    152              float naverage=0.0f;
                           ^
Warning[Pe177]: variable "naverage" was declared but never referenced
   \   000043   7C00         MOV     R4,#0x0
   \   000045   7D00         MOV     R5,#0x0
   \   000047   7E00         MOV     R6,#0x0
   \   000049   7F00         MOV     R7,#0x0
   \   00004B   741C         MOV     A,#0x1c
   \   00004D   12....       LCALL   ?XSTACK_DISP0_8
   \   000050   EC           MOV     A,R4
   \   000051   F0           MOVX    @DPTR,A
   \   000052   A3           INC     DPTR
   \   000053   ED           MOV     A,R5
   \   000054   F0           MOVX    @DPTR,A
   \   000055   A3           INC     DPTR
   \   000056   EE           MOV     A,R6
   \   000057   F0           MOVX    @DPTR,A
   \   000058   A3           INC     DPTR
   \   000059   EF           MOV     A,R7
   \   00005A   F0           MOVX    @DPTR,A
    153              float distance[4]={0.0f, 0.0f, 0.0f, 0.0f};
   \   00005B   90....       MOV     DPTR,#`?<Constant {(0.0F), (0.0F), (0.0F), (0.0F)}>`
   \   00005E   C082         PUSH    DPL
   \   000060   C083         PUSH    DPH
   \   000062   7420         MOV     A,#0x20
   \   000064   12....       LCALL   ?XSTACK_DISP0_8
   \   000067   AC82         MOV     R4,DPL
   \   000069   AD83         MOV     R5,DPH
   \   00006B   D083         POP     DPH
   \   00006D   D082         POP     DPL
   \   00006F   7410         MOV     A,#0x10
   \   000071   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
    154              float rssigain=1.0f;
   \   000074   7C00         MOV     R4,#0x0
   \   000076   7D00         MOV     R5,#0x0
   \   000078   7E80         MOV     R6,#-0x80
   \   00007A   7F3F         MOV     R7,#0x3f
   \   00007C   7404         MOV     A,#0x4
   \   00007E   12....       LCALL   ?XSTACK_DISP0_8
   \   000081   EC           MOV     A,R4
   \   000082   F0           MOVX    @DPTR,A
   \   000083   A3           INC     DPTR
   \   000084   ED           MOV     A,R5
   \   000085   F0           MOVX    @DPTR,A
   \   000086   A3           INC     DPTR
   \   000087   EE           MOV     A,R6
   \   000088   F0           MOVX    @DPTR,A
   \   000089   A3           INC     DPTR
   \   00008A   EF           MOV     A,R7
   \   00008B   F0           MOVX    @DPTR,A
    155              
    156                //average n from 4 nodes
    157          //    for(int i=0;i<4;i++)
    158          //    {
    159          //      naverage+=nValue[i];
    160          //    }
    161          //    
    162          //  
    163          //    naverage=naverage/4.0f;
    164              
    165              
    166              //calculate the distances based on the calibrated parameter n and A
    167              for (int i=0; i<4; i++)
   \   00008C   7E00         MOV     R6,#0x0
   \   00008E   7F00         MOV     R7,#0x0
   \                     ??SampleApp_WCL_localization_0:
   \   000090   C3           CLR     C
   \   000091   EE           MOV     A,R6
   \   000092   9404         SUBB    A,#0x4
   \   000094   EF           MOV     A,R7
   \   000095   9400         SUBB    A,#0x0
   \   000097   A2D2         MOV     C,0xD0 /* PSW */.2
   \   000099   65D0         XRL     A,PSW
   \   00009B   33           RLC     A
   \   00009C   4003         JC      $+5
   \   00009E   02....       LJMP    ??SampleApp_WCL_localization_1 & 0xFFFF
    168              {
    169                distance[i]=pow(10,((RssiValue[i]/rssigain-AValue[i]+OffsetA[i])/(10*nValue[i])));
   \   0000A1                ; Setup parameters for call to function pow
   \   0000A1   EE           MOV     A,R6
   \   0000A2   F8           MOV     R0,A
   \   0000A3   EF           MOV     A,R7
   \   0000A4   F9           MOV     R1,A
   \   0000A5   E8           MOV     A,R0
   \   0000A6   75F004       MOV     B,#0x4
   \   0000A9   A4           MUL     AB
   \   0000AA   C8           XCH     A,R0
   \   0000AB   AAF0         MOV     R2,B
   \   0000AD   75F000       MOV     B,#0x0
   \   0000B0   A4           MUL     AB
   \   0000B1   2A           ADD     A,R2
   \   0000B2   FA           MOV     R2,A
   \   0000B3   75F004       MOV     B,#0x4
   \   0000B6   E9           MOV     A,R1
   \   0000B7   A4           MUL     AB
   \   0000B8   2A           ADD     A,R2
   \   0000B9   F9           MOV     R1,A
   \   0000BA   744A         MOV     A,#0x4a
   \   0000BC   12....       LCALL   ?XSTACK_DISP0_8
   \   0000BF   E0           MOVX    A,@DPTR
   \   0000C0   28           ADD     A,R0
   \   0000C1   FA           MOV     R2,A
   \   0000C2   A3           INC     DPTR
   \   0000C3   E0           MOVX    A,@DPTR
   \   0000C4   39           ADDC    A,R1
   \   0000C5   8A82         MOV     DPL,R2
   \   0000C7   F583         MOV     DPH,A
   \   0000C9   78..         MOV     R0,#?V0 + 4
   \   0000CB   12....       LCALL   ?L_MOV_X
   \   0000CE   7404         MOV     A,#0x4
   \   0000D0   12....       LCALL   ?XSTACK_DISP0_8
   \   0000D3   78..         MOV     R0,#?V0 + 8
   \   0000D5   12....       LCALL   ?L_MOV_X
   \   0000D8   78..         MOV     R0,#?V0 + 4
   \   0000DA   79..         MOV     R1,#?V0 + 8
   \   0000DC   12....       LCALL   ?FLT_DIV
   \   0000DF   EE           MOV     A,R6
   \   0000E0   F8           MOV     R0,A
   \   0000E1   EF           MOV     A,R7
   \   0000E2   F9           MOV     R1,A
   \   0000E3   E8           MOV     A,R0
   \   0000E4   75F004       MOV     B,#0x4
   \   0000E7   A4           MUL     AB
   \   0000E8   C8           XCH     A,R0
   \   0000E9   AAF0         MOV     R2,B
   \   0000EB   75F000       MOV     B,#0x0
   \   0000EE   A4           MUL     AB
   \   0000EF   2A           ADD     A,R2
   \   0000F0   FA           MOV     R2,A
   \   0000F1   75F004       MOV     B,#0x4
   \   0000F4   E9           MOV     A,R1
   \   0000F5   A4           MUL     AB
   \   0000F6   2A           ADD     A,R2
   \   0000F7   F9           MOV     R1,A
   \   0000F8   744C         MOV     A,#0x4c
   \   0000FA   12....       LCALL   ?XSTACK_DISP0_8
   \   0000FD   E0           MOVX    A,@DPTR
   \   0000FE   28           ADD     A,R0
   \   0000FF   FA           MOV     R2,A
   \   000100   A3           INC     DPTR
   \   000101   E0           MOVX    A,@DPTR
   \   000102   39           ADDC    A,R1
   \   000103   8A82         MOV     DPL,R2
   \   000105   F583         MOV     DPH,A
   \   000107   78..         MOV     R0,#?V0 + 8
   \   000109   12....       LCALL   ?L_MOV_X
   \   00010C   78..         MOV     R0,#?V0 + 4
   \   00010E   79..         MOV     R1,#?V0 + 8
   \   000110   12....       LCALL   ?FLT_SUB
   \   000113   EE           MOV     A,R6
   \   000114   F8           MOV     R0,A
   \   000115   EF           MOV     A,R7
   \   000116   F9           MOV     R1,A
   \   000117   E8           MOV     A,R0
   \   000118   75F004       MOV     B,#0x4
   \   00011B   A4           MUL     AB
   \   00011C   C8           XCH     A,R0
   \   00011D   AAF0         MOV     R2,B
   \   00011F   75F000       MOV     B,#0x0
   \   000122   A4           MUL     AB
   \   000123   2A           ADD     A,R2
   \   000124   FA           MOV     R2,A
   \   000125   75F004       MOV     B,#0x4
   \   000128   E9           MOV     A,R1
   \   000129   A4           MUL     AB
   \   00012A   2A           ADD     A,R2
   \   00012B   F9           MOV     R1,A
   \   00012C   7452         MOV     A,#0x52
   \   00012E   12....       LCALL   ?XSTACK_DISP0_8
   \   000131   E0           MOVX    A,@DPTR
   \   000132   28           ADD     A,R0
   \   000133   FA           MOV     R2,A
   \   000134   A3           INC     DPTR
   \   000135   E0           MOVX    A,@DPTR
   \   000136   39           ADDC    A,R1
   \   000137   8A82         MOV     DPL,R2
   \   000139   F583         MOV     DPH,A
   \   00013B   78..         MOV     R0,#?V0 + 8
   \   00013D   12....       LCALL   ?L_MOV_X
   \   000140   78..         MOV     R0,#?V0 + 4
   \   000142   79..         MOV     R1,#?V0 + 8
   \   000144   12....       LCALL   ?FLT_ADD
   \   000147   EE           MOV     A,R6
   \   000148   F8           MOV     R0,A
   \   000149   EF           MOV     A,R7
   \   00014A   F9           MOV     R1,A
   \   00014B   E8           MOV     A,R0
   \   00014C   75F004       MOV     B,#0x4
   \   00014F   A4           MUL     AB
   \   000150   C8           XCH     A,R0
   \   000151   AAF0         MOV     R2,B
   \   000153   75F000       MOV     B,#0x0
   \   000156   A4           MUL     AB
   \   000157   2A           ADD     A,R2
   \   000158   FA           MOV     R2,A
   \   000159   75F004       MOV     B,#0x4
   \   00015C   E9           MOV     A,R1
   \   00015D   A4           MUL     AB
   \   00015E   2A           ADD     A,R2
   \   00015F   F9           MOV     R1,A
   \   000160   7448         MOV     A,#0x48
   \   000162   12....       LCALL   ?XSTACK_DISP0_8
   \   000165   E0           MOVX    A,@DPTR
   \   000166   28           ADD     A,R0
   \   000167   FA           MOV     R2,A
   \   000168   A3           INC     DPTR
   \   000169   E0           MOVX    A,@DPTR
   \   00016A   39           ADDC    A,R1
   \   00016B   8A82         MOV     DPL,R2
   \   00016D   F583         MOV     DPH,A
   \   00016F   78..         MOV     R0,#?V0 + 12
   \   000171   12....       LCALL   ?L_MOV_X
   \   000174   90....       MOV     DPTR,#__Constant_41200000
   \   000177   78..         MOV     R0,#?V0 + 8
   \   000179   12....       LCALL   ?L_MOV_X
   \   00017C   78..         MOV     R0,#?V0 + 12
   \   00017E   79..         MOV     R1,#?V0 + 8
   \   000180   12....       LCALL   ?FLT_MUL
   \   000183   78..         MOV     R0,#?V0 + 4
   \   000185   79..         MOV     R1,#?V0 + 12
   \   000187   12....       LCALL   ?FLT_DIV
   \   00018A   78..         MOV     R0,#?V0 + 4
   \   00018C   12....       LCALL   ?PUSH_XSTACK_I_FOUR
   \   00018F   90....       MOV     DPTR,#__Constant_41200000
   \   000192   12....       LCALL   ?XLOAD_R2345
   \   000195   12....       LCALL   ??pow?relay
   \   000198   7404         MOV     A,#0x4
   \   00019A   12....       LCALL   ?DEALLOC_XSTACK8
   \   00019D   EE           MOV     A,R6
   \   00019E   F8           MOV     R0,A
   \   00019F   EF           MOV     A,R7
   \   0001A0   F9           MOV     R1,A
   \   0001A1   E8           MOV     A,R0
   \   0001A2   75F004       MOV     B,#0x4
   \   0001A5   A4           MUL     AB
   \   0001A6   C8           XCH     A,R0
   \   0001A7   85F0..       MOV     ?V0 + 4,B
   \   0001AA   75F000       MOV     B,#0x0
   \   0001AD   A4           MUL     AB
   \   0001AE   25..         ADD     A,?V0 + 4
   \   0001B0   F5..         MOV     ?V0 + 4,A
   \   0001B2   75F004       MOV     B,#0x4
   \   0001B5   E9           MOV     A,R1
   \   0001B6   A4           MUL     AB
   \   0001B7   25..         ADD     A,?V0 + 4
   \   0001B9   F9           MOV     R1,A
   \   0001BA   7420         MOV     A,#0x20
   \   0001BC   12....       LCALL   ?XSTACK_DISP0_8
   \   0001BF   E582         MOV     A,DPL
   \   0001C1   28           ADD     A,R0
   \   0001C2   F582         MOV     DPL,A
   \   0001C4   E583         MOV     A,DPH
   \   0001C6   39           ADDC    A,R1
   \   0001C7   F583         MOV     DPH,A
   \   0001C9   12....       LCALL   ?XSTORE_R2345
    170                w[i]=pow(distance[i],-g);
   \   0001CC                ; Setup parameters for call to function pow
   \   0001CC   7408         MOV     A,#0x8
   \   0001CE   12....       LCALL   ?XSTACK_DISP0_8
   \   0001D1   78..         MOV     R0,#?V0 + 4
   \   0001D3   12....       LCALL   ?L_MOV_X
   \   0001D6   C5..         XCH     A,?V0 + 7
   \   0001D8   B2E7         CPL     0xE0 /* A   */.7
   \   0001DA   F5..         MOV     ?V0 + 7,A
   \   0001DC   78..         MOV     R0,#?V0 + 4
   \   0001DE   12....       LCALL   ?PUSH_XSTACK_I_FOUR
   \   0001E1   EE           MOV     A,R6
   \   0001E2   F8           MOV     R0,A
   \   0001E3   EF           MOV     A,R7
   \   0001E4   F9           MOV     R1,A
   \   0001E5   E8           MOV     A,R0
   \   0001E6   75F004       MOV     B,#0x4
   \   0001E9   A4           MUL     AB
   \   0001EA   C8           XCH     A,R0
   \   0001EB   AAF0         MOV     R2,B
   \   0001ED   75F000       MOV     B,#0x0
   \   0001F0   A4           MUL     AB
   \   0001F1   2A           ADD     A,R2
   \   0001F2   FA           MOV     R2,A
   \   0001F3   75F004       MOV     B,#0x4
   \   0001F6   E9           MOV     A,R1
   \   0001F7   A4           MUL     AB
   \   0001F8   2A           ADD     A,R2
   \   0001F9   F9           MOV     R1,A
   \   0001FA   7424         MOV     A,#0x24
   \   0001FC   12....       LCALL   ?XSTACK_DISP0_8
   \   0001FF   E582         MOV     A,DPL
   \   000201   28           ADD     A,R0
   \   000202   F582         MOV     DPL,A
   \   000204   E583         MOV     A,DPH
   \   000206   39           ADDC    A,R1
   \   000207   F583         MOV     DPH,A
   \   000209   12....       LCALL   ?XLOAD_R2345
   \   00020C   12....       LCALL   ??pow?relay
   \   00020F   7404         MOV     A,#0x4
   \   000211   12....       LCALL   ?DEALLOC_XSTACK8
   \   000214   EE           MOV     A,R6
   \   000215   F8           MOV     R0,A
   \   000216   EF           MOV     A,R7
   \   000217   F9           MOV     R1,A
   \   000218   E8           MOV     A,R0
   \   000219   75F004       MOV     B,#0x4
   \   00021C   A4           MUL     AB
   \   00021D   C8           XCH     A,R0
   \   00021E   85F0..       MOV     ?V0 + 4,B
   \   000221   75F000       MOV     B,#0x0
   \   000224   A4           MUL     AB
   \   000225   25..         ADD     A,?V0 + 4
   \   000227   F5..         MOV     ?V0 + 4,A
   \   000229   75F004       MOV     B,#0x4
   \   00022C   E9           MOV     A,R1
   \   00022D   A4           MUL     AB
   \   00022E   25..         ADD     A,?V0 + 4
   \   000230   F9           MOV     R1,A
   \   000231   740C         MOV     A,#0xc
   \   000233   12....       LCALL   ?XSTACK_DISP0_8
   \   000236   E582         MOV     A,DPL
   \   000238   28           ADD     A,R0
   \   000239   F582         MOV     DPL,A
   \   00023B   E583         MOV     A,DPH
   \   00023D   39           ADDC    A,R1
   \   00023E   F583         MOV     DPH,A
   \   000240   12....       LCALL   ?XSTORE_R2345
    171                sumw+=w[i];
   \   000243   EE           MOV     A,R6
   \   000244   F8           MOV     R0,A
   \   000245   EF           MOV     A,R7
   \   000246   F9           MOV     R1,A
   \   000247   E8           MOV     A,R0
   \   000248   75F004       MOV     B,#0x4
   \   00024B   A4           MUL     AB
   \   00024C   C8           XCH     A,R0
   \   00024D   AAF0         MOV     R2,B
   \   00024F   75F000       MOV     B,#0x0
   \   000252   A4           MUL     AB
   \   000253   2A           ADD     A,R2
   \   000254   FA           MOV     R2,A
   \   000255   75F004       MOV     B,#0x4
   \   000258   E9           MOV     A,R1
   \   000259   A4           MUL     AB
   \   00025A   2A           ADD     A,R2
   \   00025B   F9           MOV     R1,A
   \   00025C   740C         MOV     A,#0xc
   \   00025E   12....       LCALL   ?XSTACK_DISP0_8
   \   000261   E582         MOV     A,DPL
   \   000263   28           ADD     A,R0
   \   000264   F582         MOV     DPL,A
   \   000266   E583         MOV     A,DPH
   \   000268   39           ADDC    A,R1
   \   000269   F583         MOV     DPH,A
   \   00026B   78..         MOV     R0,#?V0 + 4
   \   00026D   12....       LCALL   ?L_MOV_X
   \   000270   78..         MOV     R0,#?V0 + 0
   \   000272   79..         MOV     R1,#?V0 + 4
   \   000274   12....       LCALL   ?FLT_ADD
    172              }
   \   000277   EE           MOV     A,R6
   \   000278   2401         ADD     A,#0x1
   \   00027A   FE           MOV     R6,A
   \   00027B   EF           MOV     A,R7
   \   00027C   3400         ADDC    A,#0x0
   \   00027E   FF           MOV     R7,A
   \   00027F   02....       LJMP    ??SampleApp_WCL_localization_0 & 0xFFFF
    173          
    174              
    175               
    176              *xposition=AnchorX[0]*w[0]/sumw+AnchorX[1]*w[1]/sumw+AnchorX[2]*w[2]/sumw+AnchorX[3]*w[3]/sumw;
   \                     ??SampleApp_WCL_localization_1:
   \   000282   744E         MOV     A,#0x4e
   \   000284   12....       LCALL   ?XSTACK_DISP0_8
   \   000287   E0           MOVX    A,@DPTR
   \   000288   F8           MOV     R0,A
   \   000289   A3           INC     DPTR
   \   00028A   E0           MOVX    A,@DPTR
   \   00028B   F583         MOV     DPH,A
   \   00028D   8882         MOV     DPL,R0
   \   00028F   78..         MOV     R0,#?V0 + 4
   \   000291   12....       LCALL   ?L_MOV_X
   \   000294   740C         MOV     A,#0xc
   \   000296   12....       LCALL   ?XSTACK_DISP0_8
   \   000299   78..         MOV     R0,#?V0 + 8
   \   00029B   12....       LCALL   ?L_MOV_X
   \   00029E   78..         MOV     R0,#?V0 + 4
   \   0002A0   79..         MOV     R1,#?V0 + 8
   \   0002A2   12....       LCALL   ?FLT_MUL
   \   0002A5   78..         MOV     R0,#?V0 + 4
   \   0002A7   79..         MOV     R1,#?V0 + 0
   \   0002A9   12....       LCALL   ?FLT_DIV
   \   0002AC   744E         MOV     A,#0x4e
   \   0002AE   12....       LCALL   ?XSTACK_DISP0_8
   \   0002B1   E0           MOVX    A,@DPTR
   \   0002B2   F8           MOV     R0,A
   \   0002B3   A3           INC     DPTR
   \   0002B4   E0           MOVX    A,@DPTR
   \   0002B5   F583         MOV     DPH,A
   \   0002B7   8882         MOV     DPL,R0
   \   0002B9   A3           INC     DPTR
   \   0002BA   A3           INC     DPTR
   \   0002BB   A3           INC     DPTR
   \   0002BC   A3           INC     DPTR
   \   0002BD   78..         MOV     R0,#?V0 + 8
   \   0002BF   12....       LCALL   ?L_MOV_X
   \   0002C2   7410         MOV     A,#0x10
   \   0002C4   12....       LCALL   ?XSTACK_DISP0_8
   \   0002C7   78..         MOV     R0,#?V0 + 12
   \   0002C9   12....       LCALL   ?L_MOV_X
   \   0002CC   78..         MOV     R0,#?V0 + 8
   \   0002CE   79..         MOV     R1,#?V0 + 12
   \   0002D0   12....       LCALL   ?FLT_MUL
   \   0002D3   78..         MOV     R0,#?V0 + 8
   \   0002D5   79..         MOV     R1,#?V0 + 0
   \   0002D7   12....       LCALL   ?FLT_DIV
   \   0002DA   78..         MOV     R0,#?V0 + 4
   \   0002DC   79..         MOV     R1,#?V0 + 8
   \   0002DE   12....       LCALL   ?FLT_ADD
   \   0002E1   744E         MOV     A,#0x4e
   \   0002E3   12....       LCALL   ?XSTACK_DISP0_8
   \   0002E6   E0           MOVX    A,@DPTR
   \   0002E7   F8           MOV     R0,A
   \   0002E8   A3           INC     DPTR
   \   0002E9   E0           MOVX    A,@DPTR
   \   0002EA   C8           XCH     A,R0
   \   0002EB   2408         ADD     A,#0x8
   \   0002ED   F582         MOV     DPL,A
   \   0002EF   E8           MOV     A,R0
   \   0002F0   3400         ADDC    A,#0x0
   \   0002F2   F583         MOV     DPH,A
   \   0002F4   78..         MOV     R0,#?V0 + 8
   \   0002F6   12....       LCALL   ?L_MOV_X
   \   0002F9   7414         MOV     A,#0x14
   \   0002FB   12....       LCALL   ?XSTACK_DISP0_8
   \   0002FE   78..         MOV     R0,#?V0 + 12
   \   000300   12....       LCALL   ?L_MOV_X
   \   000303   78..         MOV     R0,#?V0 + 8
   \   000305   79..         MOV     R1,#?V0 + 12
   \   000307   12....       LCALL   ?FLT_MUL
   \   00030A   78..         MOV     R0,#?V0 + 8
   \   00030C   79..         MOV     R1,#?V0 + 0
   \   00030E   12....       LCALL   ?FLT_DIV
   \   000311   78..         MOV     R0,#?V0 + 4
   \   000313   79..         MOV     R1,#?V0 + 8
   \   000315   12....       LCALL   ?FLT_ADD
   \   000318   744E         MOV     A,#0x4e
   \   00031A   12....       LCALL   ?XSTACK_DISP0_8
   \   00031D   E0           MOVX    A,@DPTR
   \   00031E   F8           MOV     R0,A
   \   00031F   A3           INC     DPTR
   \   000320   E0           MOVX    A,@DPTR
   \   000321   C8           XCH     A,R0
   \   000322   240C         ADD     A,#0xc
   \   000324   F582         MOV     DPL,A
   \   000326   E8           MOV     A,R0
   \   000327   3400         ADDC    A,#0x0
   \   000329   F583         MOV     DPH,A
   \   00032B   78..         MOV     R0,#?V0 + 8
   \   00032D   12....       LCALL   ?L_MOV_X
   \   000330   7418         MOV     A,#0x18
   \   000332   12....       LCALL   ?XSTACK_DISP0_8
   \   000335   78..         MOV     R0,#?V0 + 12
   \   000337   12....       LCALL   ?L_MOV_X
   \   00033A   78..         MOV     R0,#?V0 + 8
   \   00033C   79..         MOV     R1,#?V0 + 12
   \   00033E   12....       LCALL   ?FLT_MUL
   \   000341   78..         MOV     R0,#?V0 + 8
   \   000343   79..         MOV     R1,#?V0 + 0
   \   000345   12....       LCALL   ?FLT_DIV
   \   000348   78..         MOV     R0,#?V0 + 4
   \   00034A   79..         MOV     R1,#?V0 + 8
   \   00034C   12....       LCALL   ?FLT_ADD
   \   00034F   7402         MOV     A,#0x2
   \   000351   12....       LCALL   ?XSTACK_DISP0_8
   \   000354   E0           MOVX    A,@DPTR
   \   000355   F8           MOV     R0,A
   \   000356   A3           INC     DPTR
   \   000357   E0           MOVX    A,@DPTR
   \   000358   F583         MOV     DPH,A
   \   00035A   8882         MOV     DPL,R0
   \   00035C   78..         MOV     R0,#?V0 + 4
   \   00035E   12....       LCALL   ?L_MOV_TO_X
    177              *yposition=AnchorY[0]*w[0]/sumw+AnchorY[1]*w[1]/sumw+AnchorY[2]*w[2]/sumw+AnchorY[3]*w[3]/sumw;
   \   000361   7450         MOV     A,#0x50
   \   000363   12....       LCALL   ?XSTACK_DISP0_8
   \   000366   E0           MOVX    A,@DPTR
   \   000367   F8           MOV     R0,A
   \   000368   A3           INC     DPTR
   \   000369   E0           MOVX    A,@DPTR
   \   00036A   F583         MOV     DPH,A
   \   00036C   8882         MOV     DPL,R0
   \   00036E   78..         MOV     R0,#?V0 + 4
   \   000370   12....       LCALL   ?L_MOV_X
   \   000373   740C         MOV     A,#0xc
   \   000375   12....       LCALL   ?XSTACK_DISP0_8
   \   000378   78..         MOV     R0,#?V0 + 8
   \   00037A   12....       LCALL   ?L_MOV_X
   \   00037D   78..         MOV     R0,#?V0 + 4
   \   00037F   79..         MOV     R1,#?V0 + 8
   \   000381   12....       LCALL   ?FLT_MUL
   \   000384   78..         MOV     R0,#?V0 + 4
   \   000386   79..         MOV     R1,#?V0 + 0
   \   000388   12....       LCALL   ?FLT_DIV
   \   00038B   7450         MOV     A,#0x50
   \   00038D   12....       LCALL   ?XSTACK_DISP0_8
   \   000390   E0           MOVX    A,@DPTR
   \   000391   F8           MOV     R0,A
   \   000392   A3           INC     DPTR
   \   000393   E0           MOVX    A,@DPTR
   \   000394   F583         MOV     DPH,A
   \   000396   8882         MOV     DPL,R0
   \   000398   A3           INC     DPTR
   \   000399   A3           INC     DPTR
   \   00039A   A3           INC     DPTR
   \   00039B   A3           INC     DPTR
   \   00039C   78..         MOV     R0,#?V0 + 8
   \   00039E   12....       LCALL   ?L_MOV_X
   \   0003A1   7410         MOV     A,#0x10
   \   0003A3   12....       LCALL   ?XSTACK_DISP0_8
   \   0003A6   78..         MOV     R0,#?V0 + 12
   \   0003A8   12....       LCALL   ?L_MOV_X
   \   0003AB   78..         MOV     R0,#?V0 + 8
   \   0003AD   79..         MOV     R1,#?V0 + 12
   \   0003AF   12....       LCALL   ?FLT_MUL
   \   0003B2   78..         MOV     R0,#?V0 + 8
   \   0003B4   79..         MOV     R1,#?V0 + 0
   \   0003B6   12....       LCALL   ?FLT_DIV
   \   0003B9   78..         MOV     R0,#?V0 + 4
   \   0003BB   79..         MOV     R1,#?V0 + 8
   \   0003BD   12....       LCALL   ?FLT_ADD
   \   0003C0   7450         MOV     A,#0x50
   \   0003C2   12....       LCALL   ?XSTACK_DISP0_8
   \   0003C5   E0           MOVX    A,@DPTR
   \   0003C6   F8           MOV     R0,A
   \   0003C7   A3           INC     DPTR
   \   0003C8   E0           MOVX    A,@DPTR
   \   0003C9   C8           XCH     A,R0
   \   0003CA   2408         ADD     A,#0x8
   \   0003CC   F582         MOV     DPL,A
   \   0003CE   E8           MOV     A,R0
   \   0003CF   3400         ADDC    A,#0x0
   \   0003D1   F583         MOV     DPH,A
   \   0003D3   78..         MOV     R0,#?V0 + 8
   \   0003D5   12....       LCALL   ?L_MOV_X
   \   0003D8   7414         MOV     A,#0x14
   \   0003DA   12....       LCALL   ?XSTACK_DISP0_8
   \   0003DD   78..         MOV     R0,#?V0 + 12
   \   0003DF   12....       LCALL   ?L_MOV_X
   \   0003E2   78..         MOV     R0,#?V0 + 8
   \   0003E4   79..         MOV     R1,#?V0 + 12
   \   0003E6   12....       LCALL   ?FLT_MUL
   \   0003E9   78..         MOV     R0,#?V0 + 8
   \   0003EB   79..         MOV     R1,#?V0 + 0
   \   0003ED   12....       LCALL   ?FLT_DIV
   \   0003F0   78..         MOV     R0,#?V0 + 4
   \   0003F2   79..         MOV     R1,#?V0 + 8
   \   0003F4   12....       LCALL   ?FLT_ADD
   \   0003F7   7450         MOV     A,#0x50
   \   0003F9   12....       LCALL   ?XSTACK_DISP0_8
   \   0003FC   E0           MOVX    A,@DPTR
   \   0003FD   F8           MOV     R0,A
   \   0003FE   A3           INC     DPTR
   \   0003FF   E0           MOVX    A,@DPTR
   \   000400   C8           XCH     A,R0
   \   000401   240C         ADD     A,#0xc
   \   000403   F582         MOV     DPL,A
   \   000405   E8           MOV     A,R0
   \   000406   3400         ADDC    A,#0x0
   \   000408   F583         MOV     DPH,A
   \   00040A   78..         MOV     R0,#?V0 + 8
   \   00040C   12....       LCALL   ?L_MOV_X
   \   00040F   7418         MOV     A,#0x18
   \   000411   12....       LCALL   ?XSTACK_DISP0_8
   \   000414   78..         MOV     R0,#?V0 + 12
   \   000416   12....       LCALL   ?L_MOV_X
   \   000419   78..         MOV     R0,#?V0 + 8
   \   00041B   79..         MOV     R1,#?V0 + 12
   \   00041D   12....       LCALL   ?FLT_MUL
   \   000420   78..         MOV     R0,#?V0 + 8
   \   000422   79..         MOV     R1,#?V0 + 0
   \   000424   12....       LCALL   ?FLT_DIV
   \   000427   78..         MOV     R0,#?V0 + 4
   \   000429   79..         MOV     R1,#?V0 + 8
   \   00042B   12....       LCALL   ?FLT_ADD
   \   00042E   85..82       MOV     DPL,?XSP + 0
   \   000431   85..83       MOV     DPH,?XSP + 1
   \   000434   E0           MOVX    A,@DPTR
   \   000435   F8           MOV     R0,A
   \   000436   A3           INC     DPTR
   \   000437   E0           MOVX    A,@DPTR
   \   000438   F583         MOV     DPH,A
   \   00043A   8882         MOV     DPL,R0
   \   00043C   78..         MOV     R0,#?V0 + 4
   \   00043E   12....       LCALL   ?L_MOV_TO_X
    178              
    179          }
   \   000441   7430         MOV     A,#0x30
   \   000443   12....       LCALL   ?DEALLOC_XSTACK8
   \   000446   7F10         MOV     R7,#0x10
   \   000448   02....       LJMP    ?BANKED_LEAVE_XDATA
    180          
    181          /*********************************************************************
    182           * @fn      moving_average
    183           *
    184           * @brief   filter for moving average
    185           *
    186           * @param   
    187           *
    188           * @return  none
    189           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    190          void moving_average(int8 in, int8 moavarray[], int length, int fil_cnt[2], float *out)
   \                     moving_average:
    191          {
   \   000000   74EC         MOV     A,#-0x14
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 20
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FE           MOV     R6,A
   \   000007   8A..         MOV     ?V0 + 10,R2
   \   000009   8B..         MOV     ?V0 + 11,R3
   \   00000B   7414         MOV     A,#0x14
   \   00000D   12....       LCALL   ?XSTACK_DISP0_8
   \   000010   E0           MOVX    A,@DPTR
   \   000011   FA           MOV     R2,A
   \   000012   A3           INC     DPTR
   \   000013   E0           MOVX    A,@DPTR
   \   000014   FB           MOV     R3,A
   \   000015   7416         MOV     A,#0x16
   \   000017   12....       LCALL   ?XSTACK_DISP0_8
   \   00001A   E0           MOVX    A,@DPTR
   \   00001B   F5..         MOV     ?V0 + 8,A
   \   00001D   A3           INC     DPTR
   \   00001E   E0           MOVX    A,@DPTR
   \   00001F   F5..         MOV     ?V0 + 9,A
    192            if(++fil_cnt[0]>length)
   \   000021   8A82         MOV     DPL,R2
   \   000023   8B83         MOV     DPH,R3
   \   000025   E0           MOVX    A,@DPTR
   \   000026   2401         ADD     A,#0x1
   \   000028   F8           MOV     R0,A
   \   000029   A3           INC     DPTR
   \   00002A   E0           MOVX    A,@DPTR
   \   00002B   3400         ADDC    A,#0x0
   \   00002D   F9           MOV     R1,A
   \   00002E   8A82         MOV     DPL,R2
   \   000030   8B83         MOV     DPH,R3
   \   000032   E8           MOV     A,R0
   \   000033   F0           MOVX    @DPTR,A
   \   000034   A3           INC     DPTR
   \   000035   E9           MOV     A,R1
   \   000036   F0           MOVX    @DPTR,A
   \   000037   C3           CLR     C
   \   000038   EC           MOV     A,R4
   \   000039   98           SUBB    A,R0
   \   00003A   ED           MOV     A,R5
   \   00003B   99           SUBB    A,R1
   \   00003C   A2D2         MOV     C,0xD0 /* PSW */.2
   \   00003E   65D0         XRL     A,PSW
   \   000040   33           RLC     A
   \   000041   501A         JNC     ??moving_average_0
    193            {
    194              fil_cnt[0]=0;
   \   000043   8A82         MOV     DPL,R2
   \   000045   8B83         MOV     DPH,R3
   \   000047   7400         MOV     A,#0x0
   \   000049   F0           MOVX    @DPTR,A
   \   00004A   A3           INC     DPTR
   \   00004B   7400         MOV     A,#0x0
   \   00004D   F0           MOVX    @DPTR,A
    195              fil_cnt[1]=1;
   \   00004E   8A82         MOV     DPL,R2
   \   000050   8B83         MOV     DPH,R3
   \   000052   A3           INC     DPTR
   \   000053   A3           INC     DPTR
   \   000054   7401         MOV     A,#0x1
   \   000056   F0           MOVX    @DPTR,A
   \   000057   A3           INC     DPTR
   \   000058   7400         MOV     A,#0x0
   \   00005A   F0           MOVX    @DPTR,A
   \   00005B   802B         SJMP    ??moving_average_1
    196            }
    197            else  
    198            {
    199              fil_cnt[1]=(fil_cnt[0]==length)?0:(fil_cnt[0]+1);
   \                     ??moving_average_0:
   \   00005D   8A82         MOV     DPL,R2
   \   00005F   8B83         MOV     DPH,R3
   \   000061   E0           MOVX    A,@DPTR
   \   000062   6C           XRL     A,R4
   \   000063   7003         JNZ     ??moving_average_2
   \   000065   A3           INC     DPTR
   \   000066   E0           MOVX    A,@DPTR
   \   000067   6D           XRL     A,R5
   \                     ??moving_average_2:
   \   000068   7006         JNZ     ??moving_average_3
   \   00006A   7800         MOV     R0,#0x0
   \   00006C   7900         MOV     R1,#0x0
   \   00006E   800D         SJMP    ??moving_average_4
   \                     ??moving_average_3:
   \   000070   8A82         MOV     DPL,R2
   \   000072   8B83         MOV     DPH,R3
   \   000074   E0           MOVX    A,@DPTR
   \   000075   2401         ADD     A,#0x1
   \   000077   F8           MOV     R0,A
   \   000078   A3           INC     DPTR
   \   000079   E0           MOVX    A,@DPTR
   \   00007A   3400         ADDC    A,#0x0
   \   00007C   F9           MOV     R1,A
   \                     ??moving_average_4:
   \   00007D   8A82         MOV     DPL,R2
   \   00007F   8B83         MOV     DPH,R3
   \   000081   A3           INC     DPTR
   \   000082   A3           INC     DPTR
   \   000083   E8           MOV     A,R0
   \   000084   F0           MOVX    @DPTR,A
   \   000085   A3           INC     DPTR
   \   000086   E9           MOV     A,R1
   \   000087   F0           MOVX    @DPTR,A
    200            }
    201            moavarray[fil_cnt[0]]=in;
   \                     ??moving_average_1:
   \   000088   EE           MOV     A,R6
   \   000089   C0E0         PUSH    A
   \   00008B   8A82         MOV     DPL,R2
   \   00008D   8B83         MOV     DPH,R3
   \   00008F   E0           MOVX    A,@DPTR
   \   000090   F8           MOV     R0,A
   \   000091   A3           INC     DPTR
   \   000092   E0           MOVX    A,@DPTR
   \   000093   F9           MOV     R1,A
   \   000094   E5..         MOV     A,?V0 + 10
   \   000096   28           ADD     A,R0
   \   000097   F582         MOV     DPL,A
   \   000099   E5..         MOV     A,?V0 + 11
   \   00009B   39           ADDC    A,R1
   \   00009C   F583         MOV     DPH,A
   \   00009E   D0E0         POP     A
   \   0000A0   F0           MOVX    @DPTR,A
    202            *out+=(in-(moavarray[fil_cnt[1]]))/(float)(length);
   \   0000A1   EE           MOV     A,R6
   \   0000A2   F5..         MOV     ?V0 + 0,A
   \   0000A4   33           RLC     A
   \   0000A5   95E0         SUBB    A,0xE0 /* A   */
   \   0000A7   F5..         MOV     ?V0 + 1,A
   \   0000A9   8A82         MOV     DPL,R2
   \   0000AB   8B83         MOV     DPH,R3
   \   0000AD   A3           INC     DPTR
   \   0000AE   A3           INC     DPTR
   \   0000AF   E0           MOVX    A,@DPTR
   \   0000B0   F8           MOV     R0,A
   \   0000B1   A3           INC     DPTR
   \   0000B2   E0           MOVX    A,@DPTR
   \   0000B3   F9           MOV     R1,A
   \   0000B4   E5..         MOV     A,?V0 + 10
   \   0000B6   28           ADD     A,R0
   \   0000B7   F582         MOV     DPL,A
   \   0000B9   E5..         MOV     A,?V0 + 11
   \   0000BB   39           ADDC    A,R1
   \   0000BC   F583         MOV     DPH,A
   \   0000BE   E0           MOVX    A,@DPTR
   \   0000BF   F8           MOV     R0,A
   \   0000C0   33           RLC     A
   \   0000C1   95E0         SUBB    A,0xE0 /* A   */
   \   0000C3   F9           MOV     R1,A
   \   0000C4   E5..         MOV     A,?V0 + 0
   \   0000C6   C3           CLR     C
   \   0000C7   98           SUBB    A,R0
   \   0000C8   F5..         MOV     ?V0 + 0,A
   \   0000CA   E5..         MOV     A,?V0 + 1
   \   0000CC   99           SUBB    A,R1
   \   0000CD   F5..         MOV     ?V0 + 1,A
   \   0000CF   E5..         MOV     A,?V0 + 1
   \   0000D1   33           RLC     A
   \   0000D2   95E0         SUBB    A,0xE0 /* A   */
   \   0000D4   F5..         MOV     ?V0 + 2,A
   \   0000D6   F5..         MOV     ?V0 + 3,A
   \   0000D8   78..         MOV     R0,#?V0 + 0
   \   0000DA   12....       LCALL   ?L_TO_FLT
   \   0000DD   8C..         MOV     ?V0 + 4,R4
   \   0000DF   ED           MOV     A,R5
   \   0000E0   F5..         MOV     ?V0 + 5,A
   \   0000E2   33           RLC     A
   \   0000E3   95E0         SUBB    A,0xE0 /* A   */
   \   0000E5   F5..         MOV     ?V0 + 6,A
   \   0000E7   F5..         MOV     ?V0 + 7,A
   \   0000E9   78..         MOV     R0,#?V0 + 4
   \   0000EB   12....       LCALL   ?L_TO_FLT
   \   0000EE   78..         MOV     R0,#?V0 + 0
   \   0000F0   79..         MOV     R1,#?V0 + 4
   \   0000F2   12....       LCALL   ?FLT_DIV
   \   0000F5   85..82       MOV     DPL,?V0 + 8
   \   0000F8   85..83       MOV     DPH,?V0 + 9
   \   0000FB   78..         MOV     R0,#?V0 + 4
   \   0000FD   12....       LCALL   ?L_MOV_X
   \   000100   78..         MOV     R0,#?V0 + 0
   \   000102   79..         MOV     R1,#?V0 + 4
   \   000104   12....       LCALL   ?FLT_ADD
   \   000107   85..82       MOV     DPL,?V0 + 8
   \   00010A   85..83       MOV     DPH,?V0 + 9
   \   00010D   78..         MOV     R0,#?V0 + 0
   \   00010F   12....       LCALL   ?L_MOV_TO_X
    203            
    204            
    205          }
   \   000112   7F0C         MOV     R7,#0xc
   \   000114   02....       LJMP    ?BANKED_LEAVE_XDATA
    206          
    207          
    208          /*********************************************************************
    209           * @fn      moving_average
    210           *
    211           * @brief   filter for moving average
    212           *
    213           * @param   
    214           *
    215           * @return  none
    216           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    217          void moving_average_f(float in, float moavarray[], int length, int fil_cnt[2], float *out)
   \                     moving_average_f:
    218          {
   \   000000   74EA         MOV     A,#-0x16
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 22
   \   000005                ; Auto size: 0
   \   000005   8A..         MOV     ?V0 + 4,R2
   \   000007   8B..         MOV     ?V0 + 5,R3
   \   000009   8C..         MOV     ?V0 + 6,R4
   \   00000B   8D..         MOV     ?V0 + 7,R5
   \   00000D   7416         MOV     A,#0x16
   \   00000F   12....       LCALL   ?XSTACK_DISP0_8
   \   000012   E0           MOVX    A,@DPTR
   \   000013   F5..         MOV     ?V0 + 12,A
   \   000015   A3           INC     DPTR
   \   000016   E0           MOVX    A,@DPTR
   \   000017   F5..         MOV     ?V0 + 13,A
   \   000019   7418         MOV     A,#0x18
   \   00001B   12....       LCALL   ?XSTACK_DISP0_8
   \   00001E   E0           MOVX    A,@DPTR
   \   00001F   FA           MOV     R2,A
   \   000020   A3           INC     DPTR
   \   000021   E0           MOVX    A,@DPTR
   \   000022   FB           MOV     R3,A
   \   000023   741A         MOV     A,#0x1a
   \   000025   12....       LCALL   ?XSTACK_DISP0_8
   \   000028   E0           MOVX    A,@DPTR
   \   000029   FC           MOV     R4,A
   \   00002A   A3           INC     DPTR
   \   00002B   E0           MOVX    A,@DPTR
   \   00002C   FD           MOV     R5,A
   \   00002D   741C         MOV     A,#0x1c
   \   00002F   12....       LCALL   ?XSTACK_DISP0_8
   \   000032   E0           MOVX    A,@DPTR
   \   000033   FE           MOV     R6,A
   \   000034   A3           INC     DPTR
   \   000035   E0           MOVX    A,@DPTR
   \   000036   FF           MOV     R7,A
    219            if(++fil_cnt[0]>length)
   \   000037   8C82         MOV     DPL,R4
   \   000039   8D83         MOV     DPH,R5
   \   00003B   E0           MOVX    A,@DPTR
   \   00003C   2401         ADD     A,#0x1
   \   00003E   F8           MOV     R0,A
   \   00003F   A3           INC     DPTR
   \   000040   E0           MOVX    A,@DPTR
   \   000041   3400         ADDC    A,#0x0
   \   000043   F9           MOV     R1,A
   \   000044   8C82         MOV     DPL,R4
   \   000046   8D83         MOV     DPH,R5
   \   000048   E8           MOV     A,R0
   \   000049   F0           MOVX    @DPTR,A
   \   00004A   A3           INC     DPTR
   \   00004B   E9           MOV     A,R1
   \   00004C   F0           MOVX    @DPTR,A
   \   00004D   C3           CLR     C
   \   00004E   EA           MOV     A,R2
   \   00004F   98           SUBB    A,R0
   \   000050   EB           MOV     A,R3
   \   000051   99           SUBB    A,R1
   \   000052   A2D2         MOV     C,0xD0 /* PSW */.2
   \   000054   65D0         XRL     A,PSW
   \   000056   33           RLC     A
   \   000057   501A         JNC     ??moving_average_f_0
    220            {
    221              fil_cnt[0]=0;
   \   000059   8C82         MOV     DPL,R4
   \   00005B   8D83         MOV     DPH,R5
   \   00005D   7400         MOV     A,#0x0
   \   00005F   F0           MOVX    @DPTR,A
   \   000060   A3           INC     DPTR
   \   000061   7400         MOV     A,#0x0
   \   000063   F0           MOVX    @DPTR,A
    222              fil_cnt[1]=1;
   \   000064   8C82         MOV     DPL,R4
   \   000066   8D83         MOV     DPH,R5
   \   000068   A3           INC     DPTR
   \   000069   A3           INC     DPTR
   \   00006A   7401         MOV     A,#0x1
   \   00006C   F0           MOVX    @DPTR,A
   \   00006D   A3           INC     DPTR
   \   00006E   7400         MOV     A,#0x0
   \   000070   F0           MOVX    @DPTR,A
   \   000071   802B         SJMP    ??moving_average_f_1
    223            }
    224            else  
    225            {
    226              fil_cnt[1]=(fil_cnt[0]==length)?0:(fil_cnt[0]+1);
   \                     ??moving_average_f_0:
   \   000073   8C82         MOV     DPL,R4
   \   000075   8D83         MOV     DPH,R5
   \   000077   E0           MOVX    A,@DPTR
   \   000078   6A           XRL     A,R2
   \   000079   7003         JNZ     ??moving_average_f_2
   \   00007B   A3           INC     DPTR
   \   00007C   E0           MOVX    A,@DPTR
   \   00007D   6B           XRL     A,R3
   \                     ??moving_average_f_2:
   \   00007E   7006         JNZ     ??moving_average_f_3
   \   000080   7800         MOV     R0,#0x0
   \   000082   7900         MOV     R1,#0x0
   \   000084   800D         SJMP    ??moving_average_f_4
   \                     ??moving_average_f_3:
   \   000086   8C82         MOV     DPL,R4
   \   000088   8D83         MOV     DPH,R5
   \   00008A   E0           MOVX    A,@DPTR
   \   00008B   2401         ADD     A,#0x1
   \   00008D   F8           MOV     R0,A
   \   00008E   A3           INC     DPTR
   \   00008F   E0           MOVX    A,@DPTR
   \   000090   3400         ADDC    A,#0x0
   \   000092   F9           MOV     R1,A
   \                     ??moving_average_f_4:
   \   000093   8C82         MOV     DPL,R4
   \   000095   8D83         MOV     DPH,R5
   \   000097   A3           INC     DPTR
   \   000098   A3           INC     DPTR
   \   000099   E8           MOV     A,R0
   \   00009A   F0           MOVX    @DPTR,A
   \   00009B   A3           INC     DPTR
   \   00009C   E9           MOV     A,R1
   \   00009D   F0           MOVX    @DPTR,A
    227            }
    228            moavarray[fil_cnt[0]]=in;
   \                     ??moving_average_f_1:
   \   00009E   8C82         MOV     DPL,R4
   \   0000A0   8D83         MOV     DPH,R5
   \   0000A2   E0           MOVX    A,@DPTR
   \   0000A3   F8           MOV     R0,A
   \   0000A4   A3           INC     DPTR
   \   0000A5   E0           MOVX    A,@DPTR
   \   0000A6   F9           MOV     R1,A
   \   0000A7   E8           MOV     A,R0
   \   0000A8   75F004       MOV     B,#0x4
   \   0000AB   A4           MUL     AB
   \   0000AC   C8           XCH     A,R0
   \   0000AD   85F0..       MOV     ?V0 + 0,B
   \   0000B0   75F000       MOV     B,#0x0
   \   0000B3   A4           MUL     AB
   \   0000B4   25..         ADD     A,?V0 + 0
   \   0000B6   F5..         MOV     ?V0 + 0,A
   \   0000B8   75F004       MOV     B,#0x4
   \   0000BB   E9           MOV     A,R1
   \   0000BC   A4           MUL     AB
   \   0000BD   25..         ADD     A,?V0 + 0
   \   0000BF   F9           MOV     R1,A
   \   0000C0   E5..         MOV     A,?V0 + 12
   \   0000C2   28           ADD     A,R0
   \   0000C3   F582         MOV     DPL,A
   \   0000C5   E5..         MOV     A,?V0 + 13
   \   0000C7   39           ADDC    A,R1
   \   0000C8   F583         MOV     DPH,A
   \   0000CA   78..         MOV     R0,#?V0 + 4
   \   0000CC   12....       LCALL   ?L_MOV_TO_X
    229            *out+=(in-(moavarray[fil_cnt[1]]))/(float)(length);
   \   0000CF   85....       MOV     ?V0 + 0,?V0 + 4
   \   0000D2   85....       MOV     ?V0 + 1,?V0 + 5
   \   0000D5   85....       MOV     ?V0 + 2,?V0 + 6
   \   0000D8   85....       MOV     ?V0 + 3,?V0 + 7
   \   0000DB   8C82         MOV     DPL,R4
   \   0000DD   8D83         MOV     DPH,R5
   \   0000DF   A3           INC     DPTR
   \   0000E0   A3           INC     DPTR
   \   0000E1   E0           MOVX    A,@DPTR
   \   0000E2   F8           MOV     R0,A
   \   0000E3   A3           INC     DPTR
   \   0000E4   E0           MOVX    A,@DPTR
   \   0000E5   F9           MOV     R1,A
   \   0000E6   E8           MOV     A,R0
   \   0000E7   75F004       MOV     B,#0x4
   \   0000EA   A4           MUL     AB
   \   0000EB   C8           XCH     A,R0
   \   0000EC   85F0..       MOV     ?V0 + 8,B
   \   0000EF   75F000       MOV     B,#0x0
   \   0000F2   A4           MUL     AB
   \   0000F3   25..         ADD     A,?V0 + 8
   \   0000F5   F5..         MOV     ?V0 + 8,A
   \   0000F7   75F004       MOV     B,#0x4
   \   0000FA   E9           MOV     A,R1
   \   0000FB   A4           MUL     AB
   \   0000FC   25..         ADD     A,?V0 + 8
   \   0000FE   F9           MOV     R1,A
   \   0000FF   E5..         MOV     A,?V0 + 12
   \   000101   28           ADD     A,R0
   \   000102   F582         MOV     DPL,A
   \   000104   E5..         MOV     A,?V0 + 13
   \   000106   39           ADDC    A,R1
   \   000107   F583         MOV     DPH,A
   \   000109   78..         MOV     R0,#?V0 + 8
   \   00010B   12....       LCALL   ?L_MOV_X
   \   00010E   78..         MOV     R0,#?V0 + 0
   \   000110   79..         MOV     R1,#?V0 + 8
   \   000112   12....       LCALL   ?FLT_SUB
   \   000115   8A..         MOV     ?V0 + 8,R2
   \   000117   EB           MOV     A,R3
   \   000118   F5..         MOV     ?V0 + 9,A
   \   00011A   33           RLC     A
   \   00011B   95E0         SUBB    A,0xE0 /* A   */
   \   00011D   F5..         MOV     ?V0 + 10,A
   \   00011F   F5..         MOV     ?V0 + 11,A
   \   000121   78..         MOV     R0,#?V0 + 8
   \   000123   12....       LCALL   ?L_TO_FLT
   \   000126   78..         MOV     R0,#?V0 + 0
   \   000128   79..         MOV     R1,#?V0 + 8
   \   00012A   12....       LCALL   ?FLT_DIV
   \   00012D   8E82         MOV     DPL,R6
   \   00012F   8F83         MOV     DPH,R7
   \   000131   78..         MOV     R0,#?V0 + 8
   \   000133   12....       LCALL   ?L_MOV_X
   \   000136   78..         MOV     R0,#?V0 + 0
   \   000138   79..         MOV     R1,#?V0 + 8
   \   00013A   12....       LCALL   ?FLT_ADD
   \   00013D   8E82         MOV     DPL,R6
   \   00013F   8F83         MOV     DPH,R7
   \   000141   78..         MOV     R0,#?V0 + 0
   \   000143   12....       LCALL   ?L_MOV_TO_X
    230            
    231            
    232          }
   \   000146   7F0E         MOV     R7,#0xe
   \   000148   02....       LJMP    ?BANKED_LEAVE_XDATA
    233          
    234          
    235          
    236          /*********************************************************************
    237           * @fn      gaussianfilter
    238           *
    239           * @brief   filter for received rssi data
    240           *
    241           * @param   rssi rssi array, the result will be stored in xposition and yposition
    242           *
    243           * @return  none
    244           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    245          float gaussianfilter(int8* rssi, int length)
   \                     gaussianfilter:
    246          {
   \   000000   74E8         MOV     A,#-0x18
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 24
   \   000005                ; Auto size: 18
   \   000005   74EE         MOV     A,#-0x12
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   7404         MOV     A,#0x4
   \   00000C   12....       LCALL   ?XSTACK_DISP0_8
   \   00000F   EA           MOV     A,R2
   \   000010   F0           MOVX    @DPTR,A
   \   000011   A3           INC     DPTR
   \   000012   EB           MOV     A,R3
   \   000013   F0           MOVX    @DPTR,A
   \   000014   85..82       MOV     DPL,?XSP + 0
   \   000017   85..83       MOV     DPH,?XSP + 1
   \   00001A   EC           MOV     A,R4
   \   00001B   F0           MOVX    @DPTR,A
   \   00001C   A3           INC     DPTR
   \   00001D   ED           MOV     A,R5
   \   00001E   F0           MOVX    @DPTR,A
    247            float mu=0.0;
   \   00001F   75..00       MOV     ?V0 + 0,#0x0
   \   000022   75..00       MOV     ?V0 + 1,#0x0
   \   000025   75..00       MOV     ?V0 + 2,#0x0
   \   000028   75..00       MOV     ?V0 + 3,#0x0
    248            float variance=0.0;
   \   00002B   75..00       MOV     ?V0 + 4,#0x0
   \   00002E   75..00       MOV     ?V0 + 5,#0x0
   \   000031   75..00       MOV     ?V0 + 6,#0x0
   \   000034   75..00       MOV     ?V0 + 7,#0x0
    249            float newmean=0.0;
   \   000037   7C00         MOV     R4,#0x0
   \   000039   7D00         MOV     R5,#0x0
   \   00003B   7E00         MOV     R6,#0x0
   \   00003D   7F00         MOV     R7,#0x0
   \   00003F   7406         MOV     A,#0x6
   \   000041   12....       LCALL   ?XSTACK_DISP0_8
   \   000044   EC           MOV     A,R4
   \   000045   F0           MOVX    @DPTR,A
   \   000046   A3           INC     DPTR
   \   000047   ED           MOV     A,R5
   \   000048   F0           MOVX    @DPTR,A
   \   000049   A3           INC     DPTR
   \   00004A   EE           MOV     A,R6
   \   00004B   F0           MOVX    @DPTR,A
   \   00004C   A3           INC     DPTR
   \   00004D   EF           MOV     A,R7
   \   00004E   F0           MOVX    @DPTR,A
    250            
    251            for (int i=0; i<length; i++)
   \   00004F   7A00         MOV     R2,#0x0
   \   000051   7B00         MOV     R3,#0x0
   \                     ??gaussianfilter_0:
   \   000053   85..82       MOV     DPL,?XSP + 0
   \   000056   85..83       MOV     DPH,?XSP + 1
   \   000059   E0           MOVX    A,@DPTR
   \   00005A   F8           MOV     R0,A
   \   00005B   A3           INC     DPTR
   \   00005C   E0           MOVX    A,@DPTR
   \   00005D   F9           MOV     R1,A
   \   00005E   C3           CLR     C
   \   00005F   EA           MOV     A,R2
   \   000060   98           SUBB    A,R0
   \   000061   EB           MOV     A,R3
   \   000062   99           SUBB    A,R1
   \   000063   A2D2         MOV     C,0xD0 /* PSW */.2
   \   000065   65D0         XRL     A,PSW
   \   000067   33           RLC     A
   \   000068   503D         JNC     ??gaussianfilter_1
    252            {
    253              mu+=*(rssi+i);
   \   00006A   7404         MOV     A,#0x4
   \   00006C   12....       LCALL   ?XSTACK_DISP0_8
   \   00006F   E0           MOVX    A,@DPTR
   \   000070   2A           ADD     A,R2
   \   000071   F8           MOV     R0,A
   \   000072   A3           INC     DPTR
   \   000073   E0           MOVX    A,@DPTR
   \   000074   3B           ADDC    A,R3
   \   000075   8882         MOV     DPL,R0
   \   000077   F583         MOV     DPH,A
   \   000079   E0           MOVX    A,@DPTR
   \   00007A   F5..         MOV     ?V0 + 8,A
   \   00007C   33           RLC     A
   \   00007D   95E0         SUBB    A,0xE0 /* A   */
   \   00007F   F5..         MOV     ?V0 + 9,A
   \   000081   F5..         MOV     ?V0 + 10,A
   \   000083   F5..         MOV     ?V0 + 11,A
   \   000085   78..         MOV     R0,#?V0 + 8
   \   000087   12....       LCALL   ?L_TO_FLT
   \   00008A   78..         MOV     R0,#?V0 + 8
   \   00008C   79..         MOV     R1,#?V0 + 0
   \   00008E   12....       LCALL   ?FLT_ADD
   \   000091   85....       MOV     ?V0 + 0,?V0 + 8
   \   000094   85....       MOV     ?V0 + 1,?V0 + 9
   \   000097   85....       MOV     ?V0 + 2,?V0 + 10
   \   00009A   85....       MOV     ?V0 + 3,?V0 + 11
    254            }
   \   00009D   EA           MOV     A,R2
   \   00009E   2401         ADD     A,#0x1
   \   0000A0   FA           MOV     R2,A
   \   0000A1   EB           MOV     A,R3
   \   0000A2   3400         ADDC    A,#0x0
   \   0000A4   FB           MOV     R3,A
   \   0000A5   80AC         SJMP    ??gaussianfilter_0
    255            mu=mu/length;
   \                     ??gaussianfilter_1:
   \   0000A7   85..82       MOV     DPL,?XSP + 0
   \   0000AA   85..83       MOV     DPH,?XSP + 1
   \   0000AD   E0           MOVX    A,@DPTR
   \   0000AE   F5..         MOV     ?V0 + 8,A
   \   0000B0   A3           INC     DPTR
   \   0000B1   E0           MOVX    A,@DPTR
   \   0000B2   F5..         MOV     ?V0 + 9,A
   \   0000B4   E5..         MOV     A,?V0 + 9
   \   0000B6   33           RLC     A
   \   0000B7   95E0         SUBB    A,0xE0 /* A   */
   \   0000B9   F5..         MOV     ?V0 + 10,A
   \   0000BB   F5..         MOV     ?V0 + 11,A
   \   0000BD   78..         MOV     R0,#?V0 + 8
   \   0000BF   12....       LCALL   ?L_TO_FLT
   \   0000C2   78..         MOV     R0,#?V0 + 0
   \   0000C4   79..         MOV     R1,#?V0 + 8
   \   0000C6   12....       LCALL   ?FLT_DIV
    256            
    257            for (int i=0; i<length; i++)
   \   0000C9   7A00         MOV     R2,#0x0
   \   0000CB   7B00         MOV     R3,#0x0
   \                     ??gaussianfilter_2:
   \   0000CD   85..82       MOV     DPL,?XSP + 0
   \   0000D0   85..83       MOV     DPH,?XSP + 1
   \   0000D3   E0           MOVX    A,@DPTR
   \   0000D4   F8           MOV     R0,A
   \   0000D5   A3           INC     DPTR
   \   0000D6   E0           MOVX    A,@DPTR
   \   0000D7   F9           MOV     R1,A
   \   0000D8   C3           CLR     C
   \   0000D9   EA           MOV     A,R2
   \   0000DA   98           SUBB    A,R0
   \   0000DB   EB           MOV     A,R3
   \   0000DC   99           SUBB    A,R1
   \   0000DD   A2D2         MOV     C,0xD0 /* PSW */.2
   \   0000DF   65D0         XRL     A,PSW
   \   0000E1   33           RLC     A
   \   0000E2   506C         JNC     ??gaussianfilter_3
    258            {
    259              float temp=*(rssi+i);
   \   0000E4   7404         MOV     A,#0x4
   \   0000E6   12....       LCALL   ?XSTACK_DISP0_8
   \   0000E9   E0           MOVX    A,@DPTR
   \   0000EA   2A           ADD     A,R2
   \   0000EB   F8           MOV     R0,A
   \   0000EC   A3           INC     DPTR
   \   0000ED   E0           MOVX    A,@DPTR
   \   0000EE   3B           ADDC    A,R3
   \   0000EF   8882         MOV     DPL,R0
   \   0000F1   F583         MOV     DPH,A
   \   0000F3   E0           MOVX    A,@DPTR
   \   0000F4   F5..         MOV     ?V0 + 8,A
   \   0000F6   33           RLC     A
   \   0000F7   95E0         SUBB    A,0xE0 /* A   */
   \   0000F9   F5..         MOV     ?V0 + 9,A
   \   0000FB   F5..         MOV     ?V0 + 10,A
   \   0000FD   F5..         MOV     ?V0 + 11,A
   \   0000FF   78..         MOV     R0,#?V0 + 8
   \   000101   12....       LCALL   ?L_TO_FLT
   \   000104   740A         MOV     A,#0xa
   \   000106   12....       LCALL   ?XSTACK_DISP0_8
   \   000109   78..         MOV     R0,#?V0 + 8
   \   00010B   12....       LCALL   ?L_MOV_TO_X
    260              variance+=(float)pow((mu-temp),2);
   \   00010E   85....       MOV     ?V0 + 8,?V0 + 0
   \   000111   85....       MOV     ?V0 + 9,?V0 + 1
   \   000114   85....       MOV     ?V0 + 10,?V0 + 2
   \   000117   85....       MOV     ?V0 + 11,?V0 + 3
   \   00011A   740A         MOV     A,#0xa
   \   00011C   12....       LCALL   ?XSTACK_DISP0_8
   \   00011F   78..         MOV     R0,#?V0 + 12
   \   000121   12....       LCALL   ?L_MOV_X
   \   000124   78..         MOV     R0,#?V0 + 8
   \   000126   79..         MOV     R1,#?V0 + 12
   \   000128   12....       LCALL   ?FLT_SUB
   \   00012B   85....       MOV     ?V0 + 12,?V0 + 8
   \   00012E   85....       MOV     ?V0 + 13,?V0 + 9
   \   000131   85....       MOV     ?V0 + 14,?V0 + 10
   \   000134   85....       MOV     ?V0 + 15,?V0 + 11
   \   000137   78..         MOV     R0,#?V0 + 12
   \   000139   79..         MOV     R1,#?V0 + 8
   \   00013B   12....       LCALL   ?FLT_MUL
   \   00013E   78..         MOV     R0,#?V0 + 4
   \   000140   79..         MOV     R1,#?V0 + 12
   \   000142   12....       LCALL   ?FLT_ADD
    261            }
   \   000145   EA           MOV     A,R2
   \   000146   2401         ADD     A,#0x1
   \   000148   FA           MOV     R2,A
   \   000149   EB           MOV     A,R3
   \   00014A   3400         ADDC    A,#0x0
   \   00014C   FB           MOV     R3,A
   \   00014D   02....       LJMP    ??gaussianfilter_2 & 0xFFFF
    262            variance=(float)(variance/length);
   \                     ??gaussianfilter_3:
   \   000150   85..82       MOV     DPL,?XSP + 0
   \   000153   85..83       MOV     DPH,?XSP + 1
   \   000156   E0           MOVX    A,@DPTR
   \   000157   F5..         MOV     ?V0 + 8,A
   \   000159   A3           INC     DPTR
   \   00015A   E0           MOVX    A,@DPTR
   \   00015B   F5..         MOV     ?V0 + 9,A
   \   00015D   E5..         MOV     A,?V0 + 9
   \   00015F   33           RLC     A
   \   000160   95E0         SUBB    A,0xE0 /* A   */
   \   000162   F5..         MOV     ?V0 + 10,A
   \   000164   F5..         MOV     ?V0 + 11,A
   \   000166   78..         MOV     R0,#?V0 + 8
   \   000168   12....       LCALL   ?L_TO_FLT
   \   00016B   78..         MOV     R0,#?V0 + 4
   \   00016D   79..         MOV     R1,#?V0 + 8
   \   00016F   12....       LCALL   ?FLT_DIV
    263            
    264            float intervalmin=mu-variance;
   \   000172   85....       MOV     ?V0 + 8,?V0 + 0
   \   000175   85....       MOV     ?V0 + 9,?V0 + 1
   \   000178   85....       MOV     ?V0 + 10,?V0 + 2
   \   00017B   85....       MOV     ?V0 + 11,?V0 + 3
   \   00017E   78..         MOV     R0,#?V0 + 8
   \   000180   79..         MOV     R1,#?V0 + 4
   \   000182   12....       LCALL   ?FLT_SUB
   \   000185   740A         MOV     A,#0xa
   \   000187   12....       LCALL   ?XSTACK_DISP0_8
   \   00018A   78..         MOV     R0,#?V0 + 8
   \   00018C   12....       LCALL   ?L_MOV_TO_X
    265            float intervalmax=mu+variance;
   \   00018F   85....       MOV     ?V0 + 8,?V0 + 0
   \   000192   85....       MOV     ?V0 + 9,?V0 + 1
   \   000195   85....       MOV     ?V0 + 10,?V0 + 2
   \   000198   85....       MOV     ?V0 + 11,?V0 + 3
   \   00019B   78..         MOV     R0,#?V0 + 8
   \   00019D   79..         MOV     R1,#?V0 + 4
   \   00019F   12....       LCALL   ?FLT_ADD
   \   0001A2   740E         MOV     A,#0xe
   \   0001A4   12....       LCALL   ?XSTACK_DISP0_8
   \   0001A7   78..         MOV     R0,#?V0 + 8
   \   0001A9   12....       LCALL   ?L_MOV_TO_X
    266            
    267            int index=0;
   \   0001AC   7E00         MOV     R6,#0x0
   \   0001AE   7F00         MOV     R7,#0x0
    268            for (int i=0; i<length; i++)
   \   0001B0   7402         MOV     A,#0x2
   \   0001B2   12....       LCALL   ?XSTACK_DISP0_8
   \   0001B5   7400         MOV     A,#0x0
   \   0001B7   F0           MOVX    @DPTR,A
   \   0001B8   A3           INC     DPTR
   \   0001B9   7400         MOV     A,#0x0
   \   0001BB   F0           MOVX    @DPTR,A
   \                     ??gaussianfilter_4:
   \   0001BC   7402         MOV     A,#0x2
   \   0001BE   12....       LCALL   ?XSTACK_DISP0_8
   \   0001C1   C082         PUSH    DPL
   \   0001C3   C083         PUSH    DPH
   \   0001C5   85..82       MOV     DPL,?XSP + 0
   \   0001C8   85..83       MOV     DPH,?XSP + 1
   \   0001CB   E0           MOVX    A,@DPTR
   \   0001CC   F8           MOV     R0,A
   \   0001CD   A3           INC     DPTR
   \   0001CE   E0           MOVX    A,@DPTR
   \   0001CF   F9           MOV     R1,A
   \   0001D0   D083         POP     DPH
   \   0001D2   D082         POP     DPL
   \   0001D4   C3           CLR     C
   \   0001D5   E0           MOVX    A,@DPTR
   \   0001D6   98           SUBB    A,R0
   \   0001D7   A3           INC     DPTR
   \   0001D8   E0           MOVX    A,@DPTR
   \   0001D9   99           SUBB    A,R1
   \   0001DA   A2D2         MOV     C,0xD0 /* PSW */.2
   \   0001DC   65D0         XRL     A,PSW
   \   0001DE   33           RLC     A
   \   0001DF   4003         JC      $+5
   \   0001E1   02....       LJMP    ??gaussianfilter_5 & 0xFFFF
    269            {
    270              float temp=*(rssi+i);
   \   0001E4   7402         MOV     A,#0x2
   \   0001E6   12....       LCALL   ?XSTACK_DISP0_8
   \   0001E9   E0           MOVX    A,@DPTR
   \   0001EA   F8           MOV     R0,A
   \   0001EB   A3           INC     DPTR
   \   0001EC   E0           MOVX    A,@DPTR
   \   0001ED   F9           MOV     R1,A
   \   0001EE   7404         MOV     A,#0x4
   \   0001F0   12....       LCALL   ?XSTACK_DISP0_8
   \   0001F3   E0           MOVX    A,@DPTR
   \   0001F4   28           ADD     A,R0
   \   0001F5   FA           MOV     R2,A
   \   0001F6   A3           INC     DPTR
   \   0001F7   E0           MOVX    A,@DPTR
   \   0001F8   39           ADDC    A,R1
   \   0001F9   8A82         MOV     DPL,R2
   \   0001FB   F583         MOV     DPH,A
   \   0001FD   E0           MOVX    A,@DPTR
   \   0001FE   F5..         MOV     ?V0 + 8,A
   \   000200   33           RLC     A
   \   000201   95E0         SUBB    A,0xE0 /* A   */
   \   000203   F5..         MOV     ?V0 + 9,A
   \   000205   F5..         MOV     ?V0 + 10,A
   \   000207   F5..         MOV     ?V0 + 11,A
   \   000209   78..         MOV     R0,#?V0 + 8
   \   00020B   12....       LCALL   ?L_TO_FLT
    271              if(temp<=intervalmax&&temp>=intervalmin)
   \   00020E   740E         MOV     A,#0xe
   \   000210   12....       LCALL   ?XSTACK_DISP0_8
   \   000213   78..         MOV     R0,#?V0 + 12
   \   000215   12....       LCALL   ?L_MOV_X
   \   000218   78..         MOV     R0,#?V0 + 12
   \   00021A   79..         MOV     R1,#?V0 + 8
   \   00021C   12....       LCALL   ?FLT_GE
   \   00021F   5036         JNC     ??gaussianfilter_6
   \   000221   740A         MOV     A,#0xa
   \   000223   12....       LCALL   ?XSTACK_DISP0_8
   \   000226   78..         MOV     R0,#?V0 + 12
   \   000228   12....       LCALL   ?L_MOV_X
   \   00022B   78..         MOV     R0,#?V0 + 8
   \   00022D   79..         MOV     R1,#?V0 + 12
   \   00022F   12....       LCALL   ?FLT_GE
   \   000232   5023         JNC     ??gaussianfilter_6
    272                 {
    273                   index++;
   \   000234   EE           MOV     A,R6
   \   000235   2401         ADD     A,#0x1
   \   000237   FE           MOV     R6,A
   \   000238   EF           MOV     A,R7
   \   000239   3400         ADDC    A,#0x0
   \   00023B   FF           MOV     R7,A
    274                   newmean+=temp;
   \   00023C   7406         MOV     A,#0x6
   \   00023E   12....       LCALL   ?XSTACK_DISP0_8
   \   000241   78..         MOV     R0,#?V0 + 12
   \   000243   12....       LCALL   ?L_MOV_X
   \   000246   78..         MOV     R0,#?V0 + 12
   \   000248   79..         MOV     R1,#?V0 + 8
   \   00024A   12....       LCALL   ?FLT_ADD
   \   00024D   7406         MOV     A,#0x6
   \   00024F   12....       LCALL   ?XSTACK_DISP0_8
   \   000252   78..         MOV     R0,#?V0 + 12
   \   000254   12....       LCALL   ?L_MOV_TO_X
    275                 }
    276            }
   \                     ??gaussianfilter_6:
   \   000257   7402         MOV     A,#0x2
   \   000259   12....       LCALL   ?XSTACK_DISP0_8
   \   00025C   E0           MOVX    A,@DPTR
   \   00025D   2401         ADD     A,#0x1
   \   00025F   F0           MOVX    @DPTR,A
   \   000260   A3           INC     DPTR
   \   000261   E0           MOVX    A,@DPTR
   \   000262   3400         ADDC    A,#0x0
   \   000264   F0           MOVX    @DPTR,A
   \   000265   02....       LJMP    ??gaussianfilter_4 & 0xFFFF
    277            
    278                 if(index!=0)
   \                     ??gaussianfilter_5:
   \   000268   EE           MOV     A,R6
   \   000269   4F           ORL     A,R7
   \   00026A   602C         JZ      ??gaussianfilter_7
    279                 {
    280                   newmean=newmean/index;
   \   00026C   7406         MOV     A,#0x6
   \   00026E   12....       LCALL   ?XSTACK_DISP0_8
   \   000271   78..         MOV     R0,#?V0 + 12
   \   000273   12....       LCALL   ?L_MOV_X
   \   000276   8E..         MOV     ?V0 + 8,R6
   \   000278   EF           MOV     A,R7
   \   000279   F5..         MOV     ?V0 + 9,A
   \   00027B   33           RLC     A
   \   00027C   95E0         SUBB    A,0xE0 /* A   */
   \   00027E   F5..         MOV     ?V0 + 10,A
   \   000280   F5..         MOV     ?V0 + 11,A
   \   000282   78..         MOV     R0,#?V0 + 8
   \   000284   12....       LCALL   ?L_TO_FLT
   \   000287   78..         MOV     R0,#?V0 + 12
   \   000289   79..         MOV     R1,#?V0 + 8
   \   00028B   12....       LCALL   ?FLT_DIV
   \   00028E   7406         MOV     A,#0x6
   \   000290   12....       LCALL   ?XSTACK_DISP0_8
   \   000293   78..         MOV     R0,#?V0 + 12
   \   000295   12....       LCALL   ?L_MOV_TO_X
    281                 }
    282                 
    283            return newmean;
   \                     ??gaussianfilter_7:
   \   000298   7406         MOV     A,#0x6
   \   00029A   12....       LCALL   ?XSTACK_DISP0_8
   \   00029D   12....       LCALL   ?XLOAD_R2345
   \   0002A0   7412         MOV     A,#0x12
   \   0002A2   12....       LCALL   ?DEALLOC_XSTACK8
   \   0002A5   7F10         MOV     R7,#0x10
   \   0002A7   02....       LJMP    ?BANKED_LEAVE_XDATA
    284          }
    285          
    286          /*********************************************************************
    287           * @fn      averagefilter
    288           *
    289           * @brief   filter for received rssi data
    290           *
    291           * @param   rssi rssi array
    292           *
    293           * @return  none
    294           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    295          float averagefilter(int8* rssi, int length)
   \                     averagefilter:
    296          {
   \   000000   74E8         MOV     A,#-0x18
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 24
   \   000005                ; Auto size: 2
   \   000005   74FE         MOV     A,#-0x2
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   85..82       MOV     DPL,?XSP + 0
   \   00000D   85..83       MOV     DPH,?XSP + 1
   \   000010   EA           MOV     A,R2
   \   000011   F0           MOVX    @DPTR,A
   \   000012   A3           INC     DPTR
   \   000013   EB           MOV     A,R3
   \   000014   F0           MOVX    @DPTR,A
   \   000015   EC           MOV     A,R4
   \   000016   FE           MOV     R6,A
   \   000017   ED           MOV     A,R5
   \   000018   FF           MOV     R7,A
    297            int32 mu=0;
   \   000019   75..00       MOV     ?V0 + 0,#0x0
   \   00001C   75..00       MOV     ?V0 + 1,#0x0
   \   00001F   75..00       MOV     ?V0 + 2,#0x0
   \   000022   75..00       MOV     ?V0 + 3,#0x0
    298           
    299            float newmean=0.0;
   \   000025   75..00       MOV     ?V0 + 4,#0x0
   \   000028   75..00       MOV     ?V0 + 5,#0x0
   \   00002B   75..00       MOV     ?V0 + 6,#0x0
   \   00002E   75..00       MOV     ?V0 + 7,#0x0
    300            
    301            for(int i=0; i<length; i++)
   \   000031   7A00         MOV     R2,#0x0
   \   000033   7B00         MOV     R3,#0x0
   \                     ??averagefilter_0:
   \   000035   C3           CLR     C
   \   000036   EA           MOV     A,R2
   \   000037   9E           SUBB    A,R6
   \   000038   EB           MOV     A,R3
   \   000039   9F           SUBB    A,R7
   \   00003A   A2D2         MOV     C,0xD0 /* PSW */.2
   \   00003C   65D0         XRL     A,PSW
   \   00003E   33           RLC     A
   \   00003F   502D         JNC     ??averagefilter_1
    302             {
    303                            mu+=(int32)*(rssi+i);
   \   000041   85..82       MOV     DPL,?XSP + 0
   \   000044   85..83       MOV     DPH,?XSP + 1
   \   000047   E0           MOVX    A,@DPTR
   \   000048   2A           ADD     A,R2
   \   000049   F8           MOV     R0,A
   \   00004A   A3           INC     DPTR
   \   00004B   E0           MOVX    A,@DPTR
   \   00004C   3B           ADDC    A,R3
   \   00004D   8882         MOV     DPL,R0
   \   00004F   F583         MOV     DPH,A
   \   000051   E0           MOVX    A,@DPTR
   \   000052   F5..         MOV     ?V0 + 8,A
   \   000054   33           RLC     A
   \   000055   95E0         SUBB    A,0xE0 /* A   */
   \   000057   F5..         MOV     ?V0 + 9,A
   \   000059   F5..         MOV     ?V0 + 10,A
   \   00005B   F5..         MOV     ?V0 + 11,A
   \   00005D   78..         MOV     R0,#?V0 + 0
   \   00005F   79..         MOV     R1,#?V0 + 8
   \   000061   12....       LCALL   ?L_ADD
    304             }
   \   000064   EA           MOV     A,R2
   \   000065   2401         ADD     A,#0x1
   \   000067   FA           MOV     R2,A
   \   000068   EB           MOV     A,R3
   \   000069   3400         ADDC    A,#0x0
   \   00006B   FB           MOV     R3,A
   \   00006C   80C7         SJMP    ??averagefilter_0
    305                           newmean=((float)mu)/((float)length);
   \                     ??averagefilter_1:
   \   00006E   85....       MOV     ?V0 + 12,?V0 + 0
   \   000071   85....       MOV     ?V0 + 13,?V0 + 1
   \   000074   85....       MOV     ?V0 + 14,?V0 + 2
   \   000077   85....       MOV     ?V0 + 15,?V0 + 3
   \   00007A   78..         MOV     R0,#?V0 + 12
   \   00007C   12....       LCALL   ?L_TO_FLT
   \   00007F   8E..         MOV     ?V0 + 8,R6
   \   000081   EF           MOV     A,R7
   \   000082   F5..         MOV     ?V0 + 9,A
   \   000084   33           RLC     A
   \   000085   95E0         SUBB    A,0xE0 /* A   */
   \   000087   F5..         MOV     ?V0 + 10,A
   \   000089   F5..         MOV     ?V0 + 11,A
   \   00008B   78..         MOV     R0,#?V0 + 8
   \   00008D   12....       LCALL   ?L_TO_FLT
   \   000090   78..         MOV     R0,#?V0 + 12
   \   000092   79..         MOV     R1,#?V0 + 8
   \   000094   12....       LCALL   ?FLT_DIV
   \   000097   85....       MOV     ?V0 + 4,?V0 + 12
   \   00009A   85....       MOV     ?V0 + 5,?V0 + 13
   \   00009D   85....       MOV     ?V0 + 6,?V0 + 14
   \   0000A0   85....       MOV     ?V0 + 7,?V0 + 15
    306                       
    307                 
    308            return newmean;
   \   0000A3   AA..         MOV     R2,?V0 + 4
   \   0000A5   AB..         MOV     R3,?V0 + 5
   \   0000A7   AC..         MOV     R4,?V0 + 6
   \   0000A9   AD..         MOV     R5,?V0 + 7
   \   0000AB   7402         MOV     A,#0x2
   \   0000AD   12....       LCALL   ?DEALLOC_XSTACK8
   \   0000B0   7F10         MOV     R7,#0x10
   \   0000B2   02....       LJMP    ?BANKED_LEAVE_XDATA
    309          }
    310          
    311          /*********************************************************************
    312           * @fn      calibrationN
    313           *
    314           * @brief   calibration of n
    315           *
    316           * @param   rssi rssi array
    317           *
    318           * @return  none
    319           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    320          float calibrationN(int localID, int index, float rssivalue_f[4], float nValue[4], 
   \                     calibrationN:
    321                             float AnchorX[4], float AnchorY[4], float AnchorZ[4], float A[4])
    322          {
   \   000000   74E8         MOV     A,#-0x18
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 24
   \   000005                ; Auto size: 26
   \   000005   74E6         MOV     A,#-0x1a
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   85..82       MOV     DPL,?XSP + 0
   \   00000D   85..83       MOV     DPH,?XSP + 1
   \   000010   EA           MOV     A,R2
   \   000011   F0           MOVX    @DPTR,A
   \   000012   A3           INC     DPTR
   \   000013   EB           MOV     A,R3
   \   000014   F0           MOVX    @DPTR,A
   \   000015   EC           MOV     A,R4
   \   000016   FE           MOV     R6,A
   \   000017   ED           MOV     A,R5
   \   000018   FF           MOV     R7,A
    323            float n;
    324            float offset=4.0f;
   \   000019   7A00         MOV     R2,#0x0
   \   00001B   7B00         MOV     R3,#0x0
   \   00001D   7C80         MOV     R4,#-0x80
   \   00001F   7D40         MOV     R5,#0x40
   \   000021   7406         MOV     A,#0x6
   \   000023   12....       LCALL   ?XSTACK_DISP0_8
   \   000026   EA           MOV     A,R2
   \   000027   F0           MOVX    @DPTR,A
   \   000028   A3           INC     DPTR
   \   000029   EB           MOV     A,R3
   \   00002A   F0           MOVX    @DPTR,A
   \   00002B   A3           INC     DPTR
   \   00002C   EC           MOV     A,R4
   \   00002D   F0           MOVX    @DPTR,A
   \   00002E   A3           INC     DPTR
   \   00002F   ED           MOV     A,R5
   \   000030   F0           MOVX    @DPTR,A
    325            float tempA[4]={48.0f, 48.0f, 55.0f, 56.0f} ;
   \   000031   90....       MOV     DPTR,#`?<Constant {(48.0F), (48.0F), (55.0F), (56.0F)`
   \   000034   C082         PUSH    DPL
   \   000036   C083         PUSH    DPH
   \   000038   740A         MOV     A,#0xa
   \   00003A   12....       LCALL   ?XSTACK_DISP0_8
   \   00003D   AC82         MOV     R4,DPL
   \   00003F   AD83         MOV     R5,DPH
   \   000041   D083         POP     DPH
   \   000043   D082         POP     DPL
   \   000045   7410         MOV     A,#0x10
   \   000047   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
    326            if(localID!=index)
   \   00004A   85..82       MOV     DPL,?XSP + 0
   \   00004D   85..83       MOV     DPH,?XSP + 1
   \   000050   E0           MOVX    A,@DPTR
   \   000051   6E           XRL     A,R6
   \   000052   7003         JNZ     ??calibrationN_0
   \   000054   A3           INC     DPTR
   \   000055   E0           MOVX    A,@DPTR
   \   000056   6F           XRL     A,R7
   \                     ??calibrationN_0:
   \   000057   7003         JNZ     $+5
   \   000059   02....       LJMP    ??calibrationN_1 & 0xFFFF
    327            {
    328                
    329                float d=0.0f;
   \   00005C   75..00       MOV     ?V0 + 0,#0x0
   \   00005F   75..00       MOV     ?V0 + 1,#0x0
   \   000062   75..00       MOV     ?V0 + 2,#0x0
   \   000065   75..00       MOV     ?V0 + 3,#0x0
    330                d=(AnchorX[localID-1]-AnchorX[index-1])*(AnchorX[localID-1]-AnchorX[index-1])+
    331                  (AnchorY[localID-1]-AnchorY[index-1])*(AnchorY[localID-1]-AnchorY[index-1])+
    332                    (AnchorZ[localID-1]-AnchorZ[index-1])*(AnchorZ[localID-1]-AnchorZ[index-1]);
   \   000068   85..82       MOV     DPL,?XSP + 0
   \   00006B   85..83       MOV     DPH,?XSP + 1
   \   00006E   E0           MOVX    A,@DPTR
   \   00006F   F8           MOV     R0,A
   \   000070   A3           INC     DPTR
   \   000071   E0           MOVX    A,@DPTR
   \   000072   F9           MOV     R1,A
   \   000073   E8           MOV     A,R0
   \   000074   75F004       MOV     B,#0x4
   \   000077   A4           MUL     AB
   \   000078   C8           XCH     A,R0
   \   000079   AAF0         MOV     R2,B
   \   00007B   75F000       MOV     B,#0x0
   \   00007E   A4           MUL     AB
   \   00007F   2A           ADD     A,R2
   \   000080   FA           MOV     R2,A
   \   000081   75F004       MOV     B,#0x4
   \   000084   E9           MOV     A,R1
   \   000085   A4           MUL     AB
   \   000086   2A           ADD     A,R2
   \   000087   F9           MOV     R1,A
   \   000088   7436         MOV     A,#0x36
   \   00008A   12....       LCALL   ?XSTACK_DISP0_8
   \   00008D   E0           MOVX    A,@DPTR
   \   00008E   28           ADD     A,R0
   \   00008F   F8           MOV     R0,A
   \   000090   A3           INC     DPTR
   \   000091   E0           MOVX    A,@DPTR
   \   000092   39           ADDC    A,R1
   \   000093   F9           MOV     R1,A
   \   000094   E8           MOV     A,R0
   \   000095   24FC         ADD     A,#-0x4
   \   000097   F582         MOV     DPL,A
   \   000099   E9           MOV     A,R1
   \   00009A   34FF         ADDC    A,#-0x1
   \   00009C   F583         MOV     DPH,A
   \   00009E   78..         MOV     R0,#?V0 + 4
   \   0000A0   12....       LCALL   ?L_MOV_X
   \   0000A3   EE           MOV     A,R6
   \   0000A4   F8           MOV     R0,A
   \   0000A5   EF           MOV     A,R7
   \   0000A6   F9           MOV     R1,A
   \   0000A7   E8           MOV     A,R0
   \   0000A8   75F004       MOV     B,#0x4
   \   0000AB   A4           MUL     AB
   \   0000AC   C8           XCH     A,R0
   \   0000AD   AAF0         MOV     R2,B
   \   0000AF   75F000       MOV     B,#0x0
   \   0000B2   A4           MUL     AB
   \   0000B3   2A           ADD     A,R2
   \   0000B4   FA           MOV     R2,A
   \   0000B5   75F004       MOV     B,#0x4
   \   0000B8   E9           MOV     A,R1
   \   0000B9   A4           MUL     AB
   \   0000BA   2A           ADD     A,R2
   \   0000BB   F9           MOV     R1,A
   \   0000BC   7436         MOV     A,#0x36
   \   0000BE   12....       LCALL   ?XSTACK_DISP0_8
   \   0000C1   E0           MOVX    A,@DPTR
   \   0000C2   28           ADD     A,R0
   \   0000C3   F8           MOV     R0,A
   \   0000C4   A3           INC     DPTR
   \   0000C5   E0           MOVX    A,@DPTR
   \   0000C6   39           ADDC    A,R1
   \   0000C7   F9           MOV     R1,A
   \   0000C8   E8           MOV     A,R0
   \   0000C9   24FC         ADD     A,#-0x4
   \   0000CB   F582         MOV     DPL,A
   \   0000CD   E9           MOV     A,R1
   \   0000CE   34FF         ADDC    A,#-0x1
   \   0000D0   F583         MOV     DPH,A
   \   0000D2   78..         MOV     R0,#?V0 + 8
   \   0000D4   12....       LCALL   ?L_MOV_X
   \   0000D7   78..         MOV     R0,#?V0 + 4
   \   0000D9   79..         MOV     R1,#?V0 + 8
   \   0000DB   12....       LCALL   ?FLT_SUB
   \   0000DE   85..82       MOV     DPL,?XSP + 0
   \   0000E1   85..83       MOV     DPH,?XSP + 1
   \   0000E4   E0           MOVX    A,@DPTR
   \   0000E5   F8           MOV     R0,A
   \   0000E6   A3           INC     DPTR
   \   0000E7   E0           MOVX    A,@DPTR
   \   0000E8   F9           MOV     R1,A
   \   0000E9   E8           MOV     A,R0
   \   0000EA   75F004       MOV     B,#0x4
   \   0000ED   A4           MUL     AB
   \   0000EE   C8           XCH     A,R0
   \   0000EF   AAF0         MOV     R2,B
   \   0000F1   75F000       MOV     B,#0x0
   \   0000F4   A4           MUL     AB
   \   0000F5   2A           ADD     A,R2
   \   0000F6   FA           MOV     R2,A
   \   0000F7   75F004       MOV     B,#0x4
   \   0000FA   E9           MOV     A,R1
   \   0000FB   A4           MUL     AB
   \   0000FC   2A           ADD     A,R2
   \   0000FD   F9           MOV     R1,A
   \   0000FE   7436         MOV     A,#0x36
   \   000100   12....       LCALL   ?XSTACK_DISP0_8
   \   000103   E0           MOVX    A,@DPTR
   \   000104   28           ADD     A,R0
   \   000105   F8           MOV     R0,A
   \   000106   A3           INC     DPTR
   \   000107   E0           MOVX    A,@DPTR
   \   000108   39           ADDC    A,R1
   \   000109   F9           MOV     R1,A
   \   00010A   E8           MOV     A,R0
   \   00010B   24FC         ADD     A,#-0x4
   \   00010D   F582         MOV     DPL,A
   \   00010F   E9           MOV     A,R1
   \   000110   34FF         ADDC    A,#-0x1
   \   000112   F583         MOV     DPH,A
   \   000114   78..         MOV     R0,#?V0 + 12
   \   000116   12....       LCALL   ?L_MOV_X
   \   000119   EE           MOV     A,R6
   \   00011A   F8           MOV     R0,A
   \   00011B   EF           MOV     A,R7
   \   00011C   F9           MOV     R1,A
   \   00011D   E8           MOV     A,R0
   \   00011E   75F004       MOV     B,#0x4
   \   000121   A4           MUL     AB
   \   000122   C8           XCH     A,R0
   \   000123   AAF0         MOV     R2,B
   \   000125   75F000       MOV     B,#0x0
   \   000128   A4           MUL     AB
   \   000129   2A           ADD     A,R2
   \   00012A   FA           MOV     R2,A
   \   00012B   75F004       MOV     B,#0x4
   \   00012E   E9           MOV     A,R1
   \   00012F   A4           MUL     AB
   \   000130   2A           ADD     A,R2
   \   000131   F9           MOV     R1,A
   \   000132   7436         MOV     A,#0x36
   \   000134   12....       LCALL   ?XSTACK_DISP0_8
   \   000137   E0           MOVX    A,@DPTR
   \   000138   28           ADD     A,R0
   \   000139   F8           MOV     R0,A
   \   00013A   A3           INC     DPTR
   \   00013B   E0           MOVX    A,@DPTR
   \   00013C   39           ADDC    A,R1
   \   00013D   F9           MOV     R1,A
   \   00013E   E8           MOV     A,R0
   \   00013F   24FC         ADD     A,#-0x4
   \   000141   F582         MOV     DPL,A
   \   000143   E9           MOV     A,R1
   \   000144   34FF         ADDC    A,#-0x1
   \   000146   F583         MOV     DPH,A
   \   000148   78..         MOV     R0,#?V0 + 8
   \   00014A   12....       LCALL   ?L_MOV_X
   \   00014D   78..         MOV     R0,#?V0 + 12
   \   00014F   79..         MOV     R1,#?V0 + 8
   \   000151   12....       LCALL   ?FLT_SUB
   \   000154   78..         MOV     R0,#?V0 + 4
   \   000156   79..         MOV     R1,#?V0 + 12
   \   000158   12....       LCALL   ?FLT_MUL
   \   00015B   C0..         PUSH    ?V0 + 4
   \   00015D   C0..         PUSH    ?V0 + 5
   \   00015F   C0..         PUSH    ?V0 + 6
   \   000161   C0..         PUSH    ?V0 + 7
   \   000163   85..82       MOV     DPL,?XSP + 0
   \   000166   85..83       MOV     DPH,?XSP + 1
   \   000169   E0           MOVX    A,@DPTR
   \   00016A   F8           MOV     R0,A
   \   00016B   A3           INC     DPTR
   \   00016C   E0           MOVX    A,@DPTR
   \   00016D   F9           MOV     R1,A
   \   00016E   E8           MOV     A,R0
   \   00016F   75F004       MOV     B,#0x4
   \   000172   A4           MUL     AB
   \   000173   C8           XCH     A,R0
   \   000174   AAF0         MOV     R2,B
   \   000176   75F000       MOV     B,#0x0
   \   000179   A4           MUL     AB
   \   00017A   2A           ADD     A,R2
   \   00017B   FA           MOV     R2,A
   \   00017C   75F004       MOV     B,#0x4
   \   00017F   E9           MOV     A,R1
   \   000180   A4           MUL     AB
   \   000181   2A           ADD     A,R2
   \   000182   F9           MOV     R1,A
   \   000183   7438         MOV     A,#0x38
   \   000185   12....       LCALL   ?XSTACK_DISP0_8
   \   000188   E0           MOVX    A,@DPTR
   \   000189   28           ADD     A,R0
   \   00018A   F8           MOV     R0,A
   \   00018B   A3           INC     DPTR
   \   00018C   E0           MOVX    A,@DPTR
   \   00018D   39           ADDC    A,R1
   \   00018E   F9           MOV     R1,A
   \   00018F   E8           MOV     A,R0
   \   000190   24FC         ADD     A,#-0x4
   \   000192   F582         MOV     DPL,A
   \   000194   E9           MOV     A,R1
   \   000195   34FF         ADDC    A,#-0x1
   \   000197   F583         MOV     DPH,A
   \   000199   78..         MOV     R0,#?V0 + 4
   \   00019B   12....       LCALL   ?L_MOV_X
   \   00019E   EE           MOV     A,R6
   \   00019F   F8           MOV     R0,A
   \   0001A0   EF           MOV     A,R7
   \   0001A1   F9           MOV     R1,A
   \   0001A2   E8           MOV     A,R0
   \   0001A3   75F004       MOV     B,#0x4
   \   0001A6   A4           MUL     AB
   \   0001A7   C8           XCH     A,R0
   \   0001A8   AAF0         MOV     R2,B
   \   0001AA   75F000       MOV     B,#0x0
   \   0001AD   A4           MUL     AB
   \   0001AE   2A           ADD     A,R2
   \   0001AF   FA           MOV     R2,A
   \   0001B0   75F004       MOV     B,#0x4
   \   0001B3   E9           MOV     A,R1
   \   0001B4   A4           MUL     AB
   \   0001B5   2A           ADD     A,R2
   \   0001B6   F9           MOV     R1,A
   \   0001B7   7438         MOV     A,#0x38
   \   0001B9   12....       LCALL   ?XSTACK_DISP0_8
   \   0001BC   E0           MOVX    A,@DPTR
   \   0001BD   28           ADD     A,R0
   \   0001BE   F8           MOV     R0,A
   \   0001BF   A3           INC     DPTR
   \   0001C0   E0           MOVX    A,@DPTR
   \   0001C1   39           ADDC    A,R1
   \   0001C2   F9           MOV     R1,A
   \   0001C3   E8           MOV     A,R0
   \   0001C4   24FC         ADD     A,#-0x4
   \   0001C6   F582         MOV     DPL,A
   \   0001C8   E9           MOV     A,R1
   \   0001C9   34FF         ADDC    A,#-0x1
   \   0001CB   F583         MOV     DPH,A
   \   0001CD   78..         MOV     R0,#?V0 + 8
   \   0001CF   12....       LCALL   ?L_MOV_X
   \   0001D2   78..         MOV     R0,#?V0 + 4
   \   0001D4   79..         MOV     R1,#?V0 + 8
   \   0001D6   12....       LCALL   ?FLT_SUB
   \   0001D9   85..82       MOV     DPL,?XSP + 0
   \   0001DC   85..83       MOV     DPH,?XSP + 1
   \   0001DF   E0           MOVX    A,@DPTR
   \   0001E0   F8           MOV     R0,A
   \   0001E1   A3           INC     DPTR
   \   0001E2   E0           MOVX    A,@DPTR
   \   0001E3   F9           MOV     R1,A
   \   0001E4   E8           MOV     A,R0
   \   0001E5   75F004       MOV     B,#0x4
   \   0001E8   A4           MUL     AB
   \   0001E9   C8           XCH     A,R0
   \   0001EA   AAF0         MOV     R2,B
   \   0001EC   75F000       MOV     B,#0x0
   \   0001EF   A4           MUL     AB
   \   0001F0   2A           ADD     A,R2
   \   0001F1   FA           MOV     R2,A
   \   0001F2   75F004       MOV     B,#0x4
   \   0001F5   E9           MOV     A,R1
   \   0001F6   A4           MUL     AB
   \   0001F7   2A           ADD     A,R2
   \   0001F8   F9           MOV     R1,A
   \   0001F9   7438         MOV     A,#0x38
   \   0001FB   12....       LCALL   ?XSTACK_DISP0_8
   \   0001FE   E0           MOVX    A,@DPTR
   \   0001FF   28           ADD     A,R0
   \   000200   F8           MOV     R0,A
   \   000201   A3           INC     DPTR
   \   000202   E0           MOVX    A,@DPTR
   \   000203   39           ADDC    A,R1
   \   000204   F9           MOV     R1,A
   \   000205   E8           MOV     A,R0
   \   000206   24FC         ADD     A,#-0x4
   \   000208   F582         MOV     DPL,A
   \   00020A   E9           MOV     A,R1
   \   00020B   34FF         ADDC    A,#-0x1
   \   00020D   F583         MOV     DPH,A
   \   00020F   78..         MOV     R0,#?V0 + 12
   \   000211   12....       LCALL   ?L_MOV_X
   \   000214   EE           MOV     A,R6
   \   000215   F8           MOV     R0,A
   \   000216   EF           MOV     A,R7
   \   000217   F9           MOV     R1,A
   \   000218   E8           MOV     A,R0
   \   000219   75F004       MOV     B,#0x4
   \   00021C   A4           MUL     AB
   \   00021D   C8           XCH     A,R0
   \   00021E   AAF0         MOV     R2,B
   \   000220   75F000       MOV     B,#0x0
   \   000223   A4           MUL     AB
   \   000224   2A           ADD     A,R2
   \   000225   FA           MOV     R2,A
   \   000226   75F004       MOV     B,#0x4
   \   000229   E9           MOV     A,R1
   \   00022A   A4           MUL     AB
   \   00022B   2A           ADD     A,R2
   \   00022C   F9           MOV     R1,A
   \   00022D   7438         MOV     A,#0x38
   \   00022F   12....       LCALL   ?XSTACK_DISP0_8
   \   000232   E0           MOVX    A,@DPTR
   \   000233   28           ADD     A,R0
   \   000234   F8           MOV     R0,A
   \   000235   A3           INC     DPTR
   \   000236   E0           MOVX    A,@DPTR
   \   000237   39           ADDC    A,R1
   \   000238   F9           MOV     R1,A
   \   000239   E8           MOV     A,R0
   \   00023A   24FC         ADD     A,#-0x4
   \   00023C   F582         MOV     DPL,A
   \   00023E   E9           MOV     A,R1
   \   00023F   34FF         ADDC    A,#-0x1
   \   000241   F583         MOV     DPH,A
   \   000243   78..         MOV     R0,#?V0 + 8
   \   000245   12....       LCALL   ?L_MOV_X
   \   000248   78..         MOV     R0,#?V0 + 12
   \   00024A   79..         MOV     R1,#?V0 + 8
   \   00024C   12....       LCALL   ?FLT_SUB
   \   00024F   78..         MOV     R0,#?V0 + 4
   \   000251   79..         MOV     R1,#?V0 + 12
   \   000253   12....       LCALL   ?FLT_MUL
   \   000256   D0..         POP     ?V0 + 11
   \   000258   D0..         POP     ?V0 + 10
   \   00025A   D0..         POP     ?V0 + 9
   \   00025C   D0..         POP     ?V0 + 8
   \   00025E   78..         MOV     R0,#?V0 + 8
   \   000260   79..         MOV     R1,#?V0 + 4
   \   000262   12....       LCALL   ?FLT_ADD
   \   000265   C0..         PUSH    ?V0 + 8
   \   000267   C0..         PUSH    ?V0 + 9
   \   000269   C0..         PUSH    ?V0 + 10
   \   00026B   C0..         PUSH    ?V0 + 11
   \   00026D   85..82       MOV     DPL,?XSP + 0
   \   000270   85..83       MOV     DPH,?XSP + 1
   \   000273   E0           MOVX    A,@DPTR
   \   000274   F8           MOV     R0,A
   \   000275   A3           INC     DPTR
   \   000276   E0           MOVX    A,@DPTR
   \   000277   F9           MOV     R1,A
   \   000278   E8           MOV     A,R0
   \   000279   75F004       MOV     B,#0x4
   \   00027C   A4           MUL     AB
   \   00027D   C8           XCH     A,R0
   \   00027E   AAF0         MOV     R2,B
   \   000280   75F000       MOV     B,#0x0
   \   000283   A4           MUL     AB
   \   000284   2A           ADD     A,R2
   \   000285   FA           MOV     R2,A
   \   000286   75F004       MOV     B,#0x4
   \   000289   E9           MOV     A,R1
   \   00028A   A4           MUL     AB
   \   00028B   2A           ADD     A,R2
   \   00028C   F9           MOV     R1,A
   \   00028D   743A         MOV     A,#0x3a
   \   00028F   12....       LCALL   ?XSTACK_DISP0_8
   \   000292   E0           MOVX    A,@DPTR
   \   000293   28           ADD     A,R0
   \   000294   F8           MOV     R0,A
   \   000295   A3           INC     DPTR
   \   000296   E0           MOVX    A,@DPTR
   \   000297   39           ADDC    A,R1
   \   000298   F9           MOV     R1,A
   \   000299   E8           MOV     A,R0
   \   00029A   24FC         ADD     A,#-0x4
   \   00029C   F582         MOV     DPL,A
   \   00029E   E9           MOV     A,R1
   \   00029F   34FF         ADDC    A,#-0x1
   \   0002A1   F583         MOV     DPH,A
   \   0002A3   78..         MOV     R0,#?V0 + 4
   \   0002A5   12....       LCALL   ?L_MOV_X
   \   0002A8   EE           MOV     A,R6
   \   0002A9   F8           MOV     R0,A
   \   0002AA   EF           MOV     A,R7
   \   0002AB   F9           MOV     R1,A
   \   0002AC   E8           MOV     A,R0
   \   0002AD   75F004       MOV     B,#0x4
   \   0002B0   A4           MUL     AB
   \   0002B1   C8           XCH     A,R0
   \   0002B2   AAF0         MOV     R2,B
   \   0002B4   75F000       MOV     B,#0x0
   \   0002B7   A4           MUL     AB
   \   0002B8   2A           ADD     A,R2
   \   0002B9   FA           MOV     R2,A
   \   0002BA   75F004       MOV     B,#0x4
   \   0002BD   E9           MOV     A,R1
   \   0002BE   A4           MUL     AB
   \   0002BF   2A           ADD     A,R2
   \   0002C0   F9           MOV     R1,A
   \   0002C1   743A         MOV     A,#0x3a
   \   0002C3   12....       LCALL   ?XSTACK_DISP0_8
   \   0002C6   E0           MOVX    A,@DPTR
   \   0002C7   28           ADD     A,R0
   \   0002C8   F8           MOV     R0,A
   \   0002C9   A3           INC     DPTR
   \   0002CA   E0           MOVX    A,@DPTR
   \   0002CB   39           ADDC    A,R1
   \   0002CC   F9           MOV     R1,A
   \   0002CD   E8           MOV     A,R0
   \   0002CE   24FC         ADD     A,#-0x4
   \   0002D0   F582         MOV     DPL,A
   \   0002D2   E9           MOV     A,R1
   \   0002D3   34FF         ADDC    A,#-0x1
   \   0002D5   F583         MOV     DPH,A
   \   0002D7   78..         MOV     R0,#?V0 + 8
   \   0002D9   12....       LCALL   ?L_MOV_X
   \   0002DC   78..         MOV     R0,#?V0 + 4
   \   0002DE   79..         MOV     R1,#?V0 + 8
   \   0002E0   12....       LCALL   ?FLT_SUB
   \   0002E3   85..82       MOV     DPL,?XSP + 0
   \   0002E6   85..83       MOV     DPH,?XSP + 1
   \   0002E9   E0           MOVX    A,@DPTR
   \   0002EA   F8           MOV     R0,A
   \   0002EB   A3           INC     DPTR
   \   0002EC   E0           MOVX    A,@DPTR
   \   0002ED   F9           MOV     R1,A
   \   0002EE   E8           MOV     A,R0
   \   0002EF   75F004       MOV     B,#0x4
   \   0002F2   A4           MUL     AB
   \   0002F3   C8           XCH     A,R0
   \   0002F4   AAF0         MOV     R2,B
   \   0002F6   75F000       MOV     B,#0x0
   \   0002F9   A4           MUL     AB
   \   0002FA   2A           ADD     A,R2
   \   0002FB   FA           MOV     R2,A
   \   0002FC   75F004       MOV     B,#0x4
   \   0002FF   E9           MOV     A,R1
   \   000300   A4           MUL     AB
   \   000301   2A           ADD     A,R2
   \   000302   F9           MOV     R1,A
   \   000303   743A         MOV     A,#0x3a
   \   000305   12....       LCALL   ?XSTACK_DISP0_8
   \   000308   E0           MOVX    A,@DPTR
   \   000309   28           ADD     A,R0
   \   00030A   F8           MOV     R0,A
   \   00030B   A3           INC     DPTR
   \   00030C   E0           MOVX    A,@DPTR
   \   00030D   39           ADDC    A,R1
   \   00030E   F9           MOV     R1,A
   \   00030F   E8           MOV     A,R0
   \   000310   24FC         ADD     A,#-0x4
   \   000312   F582         MOV     DPL,A
   \   000314   E9           MOV     A,R1
   \   000315   34FF         ADDC    A,#-0x1
   \   000317   F583         MOV     DPH,A
   \   000319   78..         MOV     R0,#?V0 + 12
   \   00031B   12....       LCALL   ?L_MOV_X
   \   00031E   EE           MOV     A,R6
   \   00031F   F8           MOV     R0,A
   \   000320   EF           MOV     A,R7
   \   000321   F9           MOV     R1,A
   \   000322   E8           MOV     A,R0
   \   000323   75F004       MOV     B,#0x4
   \   000326   A4           MUL     AB
   \   000327   C8           XCH     A,R0
   \   000328   AAF0         MOV     R2,B
   \   00032A   75F000       MOV     B,#0x0
   \   00032D   A4           MUL     AB
   \   00032E   2A           ADD     A,R2
   \   00032F   FA           MOV     R2,A
   \   000330   75F004       MOV     B,#0x4
   \   000333   E9           MOV     A,R1
   \   000334   A4           MUL     AB
   \   000335   2A           ADD     A,R2
   \   000336   F9           MOV     R1,A
   \   000337   743A         MOV     A,#0x3a
   \   000339   12....       LCALL   ?XSTACK_DISP0_8
   \   00033C   E0           MOVX    A,@DPTR
   \   00033D   28           ADD     A,R0
   \   00033E   F8           MOV     R0,A
   \   00033F   A3           INC     DPTR
   \   000340   E0           MOVX    A,@DPTR
   \   000341   39           ADDC    A,R1
   \   000342   F9           MOV     R1,A
   \   000343   E8           MOV     A,R0
   \   000344   24FC         ADD     A,#-0x4
   \   000346   F582         MOV     DPL,A
   \   000348   E9           MOV     A,R1
   \   000349   34FF         ADDC    A,#-0x1
   \   00034B   F583         MOV     DPH,A
   \   00034D   78..         MOV     R0,#?V0 + 8
   \   00034F   12....       LCALL   ?L_MOV_X
   \   000352   78..         MOV     R0,#?V0 + 12
   \   000354   79..         MOV     R1,#?V0 + 8
   \   000356   12....       LCALL   ?FLT_SUB
   \   000359   78..         MOV     R0,#?V0 + 4
   \   00035B   79..         MOV     R1,#?V0 + 12
   \   00035D   12....       LCALL   ?FLT_MUL
   \   000360   D0..         POP     ?V0 + 11
   \   000362   D0..         POP     ?V0 + 10
   \   000364   D0..         POP     ?V0 + 9
   \   000366   D0..         POP     ?V0 + 8
   \   000368   78..         MOV     R0,#?V0 + 8
   \   00036A   79..         MOV     R1,#?V0 + 4
   \   00036C   12....       LCALL   ?FLT_ADD
   \   00036F   85....       MOV     ?V0 + 0,?V0 + 8
   \   000372   85....       MOV     ?V0 + 1,?V0 + 9
   \   000375   85....       MOV     ?V0 + 2,?V0 + 10
   \   000378   85....       MOV     ?V0 + 3,?V0 + 11
    333               // d+=pow((AnchorY[localID-1]-AnchorY[index-1]),2);
    334               // d+=pow((AnchorZ[localID-1]-AnchorZ[index-1]),2);
    335                d=pow(d,0.5);   // distance between two anchors 
   \   00037B                ; Setup parameters for call to function pow
   \   00037B   90....       MOV     DPTR,#__Constant_3f000000
   \   00037E   12....       LCALL   ?PUSH_XSTACK8_X_FOUR
   \   000381   AA..         MOV     R2,?V0 + 0
   \   000383   AB..         MOV     R3,?V0 + 1
   \   000385   AC..         MOV     R4,?V0 + 2
   \   000387   AD..         MOV     R5,?V0 + 3
   \   000389   12....       LCALL   ??pow?relay
   \   00038C   7404         MOV     A,#0x4
   \   00038E   12....       LCALL   ?DEALLOC_XSTACK8
   \   000391   8A..         MOV     ?V0 + 4,R2
   \   000393   8B..         MOV     ?V0 + 5,R3
   \   000395   8C..         MOV     ?V0 + 6,R4
   \   000397   8D..         MOV     ?V0 + 7,R5
   \   000399   85....       MOV     ?V0 + 0,?V0 + 4
   \   00039C   85....       MOV     ?V0 + 1,?V0 + 5
   \   00039F   85....       MOV     ?V0 + 2,?V0 + 6
   \   0003A2   85....       MOV     ?V0 + 3,?V0 + 7
    336               
    337                if(d!=1)
   \   0003A5   90....       MOV     DPTR,#__Constant_3f800000
   \   0003A8   78..         MOV     R0,#?V0 + 4
   \   0003AA   12....       LCALL   ?L_MOV_X
   \   0003AD   78..         MOV     R0,#?V0 + 0
   \   0003AF   79..         MOV     R1,#?V0 + 4
   \   0003B1   12....       LCALL   ?FLT_EQ
   \   0003B4   7003         JNZ     $+5
   \   0003B6   02....       LJMP    ??calibrationN_2 & 0xFFFF
    338                //  n=(rssivalue_f[index-1]-A[index-1]+offset)/10.0f/(log10(d));
    339                   n=(rssivalue_f[index-1]-tempA[index-1]+offset)/10.0f/(log10(d));
   \   0003B9   EE           MOV     A,R6
   \   0003BA   F8           MOV     R0,A
   \   0003BB   EF           MOV     A,R7
   \   0003BC   F9           MOV     R1,A
   \   0003BD   E8           MOV     A,R0
   \   0003BE   75F004       MOV     B,#0x4
   \   0003C1   A4           MUL     AB
   \   0003C2   C8           XCH     A,R0
   \   0003C3   AAF0         MOV     R2,B
   \   0003C5   75F000       MOV     B,#0x0
   \   0003C8   A4           MUL     AB
   \   0003C9   2A           ADD     A,R2
   \   0003CA   FA           MOV     R2,A
   \   0003CB   75F004       MOV     B,#0x4
   \   0003CE   E9           MOV     A,R1
   \   0003CF   A4           MUL     AB
   \   0003D0   2A           ADD     A,R2
   \   0003D1   F9           MOV     R1,A
   \   0003D2   7432         MOV     A,#0x32
   \   0003D4   12....       LCALL   ?XSTACK_DISP0_8
   \   0003D7   E0           MOVX    A,@DPTR
   \   0003D8   28           ADD     A,R0
   \   0003D9   F8           MOV     R0,A
   \   0003DA   A3           INC     DPTR
   \   0003DB   E0           MOVX    A,@DPTR
   \   0003DC   39           ADDC    A,R1
   \   0003DD   F9           MOV     R1,A
   \   0003DE   E8           MOV     A,R0
   \   0003DF   24FC         ADD     A,#-0x4
   \   0003E1   F582         MOV     DPL,A
   \   0003E3   E9           MOV     A,R1
   \   0003E4   34FF         ADDC    A,#-0x1
   \   0003E6   F583         MOV     DPH,A
   \   0003E8   78..         MOV     R0,#?V0 + 4
   \   0003EA   12....       LCALL   ?L_MOV_X
   \   0003ED   EE           MOV     A,R6
   \   0003EE   F8           MOV     R0,A
   \   0003EF   EF           MOV     A,R7
   \   0003F0   F9           MOV     R1,A
   \   0003F1   E8           MOV     A,R0
   \   0003F2   75F004       MOV     B,#0x4
   \   0003F5   A4           MUL     AB
   \   0003F6   C8           XCH     A,R0
   \   0003F7   AAF0         MOV     R2,B
   \   0003F9   75F000       MOV     B,#0x0
   \   0003FC   A4           MUL     AB
   \   0003FD   2A           ADD     A,R2
   \   0003FE   FA           MOV     R2,A
   \   0003FF   75F004       MOV     B,#0x4
   \   000402   E9           MOV     A,R1
   \   000403   A4           MUL     AB
   \   000404   2A           ADD     A,R2
   \   000405   F9           MOV     R1,A
   \   000406   740A         MOV     A,#0xa
   \   000408   12....       LCALL   ?XSTACK_DISP0_8
   \   00040B   E582         MOV     A,DPL
   \   00040D   28           ADD     A,R0
   \   00040E   F8           MOV     R0,A
   \   00040F   E583         MOV     A,DPH
   \   000411   39           ADDC    A,R1
   \   000412   F9           MOV     R1,A
   \   000413   E8           MOV     A,R0
   \   000414   24FC         ADD     A,#-0x4
   \   000416   F582         MOV     DPL,A
   \   000418   E9           MOV     A,R1
   \   000419   34FF         ADDC    A,#-0x1
   \   00041B   F583         MOV     DPH,A
   \   00041D   78..         MOV     R0,#?V0 + 8
   \   00041F   12....       LCALL   ?L_MOV_X
   \   000422   78..         MOV     R0,#?V0 + 4
   \   000424   79..         MOV     R1,#?V0 + 8
   \   000426   12....       LCALL   ?FLT_SUB
   \   000429   7406         MOV     A,#0x6
   \   00042B   12....       LCALL   ?XSTACK_DISP0_8
   \   00042E   78..         MOV     R0,#?V0 + 8
   \   000430   12....       LCALL   ?L_MOV_X
   \   000433   78..         MOV     R0,#?V0 + 4
   \   000435   79..         MOV     R1,#?V0 + 8
   \   000437   12....       LCALL   ?FLT_ADD
   \   00043A   90....       MOV     DPTR,#__Constant_41200000
   \   00043D   78..         MOV     R0,#?V0 + 8
   \   00043F   12....       LCALL   ?L_MOV_X
   \   000442   78..         MOV     R0,#?V0 + 4
   \   000444   79..         MOV     R1,#?V0 + 8
   \   000446   12....       LCALL   ?FLT_DIV
   \   000449                ; Setup parameters for call to function log10
   \   000449   AA..         MOV     R2,?V0 + 0
   \   00044B   AB..         MOV     R3,?V0 + 1
   \   00044D   AC..         MOV     R4,?V0 + 2
   \   00044F   AD..         MOV     R5,?V0 + 3
   \   000451   12....       LCALL   ??log10?relay
   \   000454   8A..         MOV     ?V0 + 8,R2
   \   000456   8B..         MOV     ?V0 + 9,R3
   \   000458   8C..         MOV     ?V0 + 10,R4
   \   00045A   8D..         MOV     ?V0 + 11,R5
   \   00045C   78..         MOV     R0,#?V0 + 4
   \   00045E   79..         MOV     R1,#?V0 + 8
   \   000460   12....       LCALL   ?FLT_DIV
   \   000463   7402         MOV     A,#0x2
   \   000465   12....       LCALL   ?XSTACK_DISP0_8
   \   000468   78..         MOV     R0,#?V0 + 4
   \   00046A   12....       LCALL   ?L_MOV_TO_X
   \   00046D   02....       LJMP    ??calibrationN_3 & 0xFFFF
    340                else
    341                  n=nValue[localID-1];
   \                     ??calibrationN_2:
   \   000470   85..82       MOV     DPL,?XSP + 0
   \   000473   85..83       MOV     DPH,?XSP + 1
   \   000476   E0           MOVX    A,@DPTR
   \   000477   F8           MOV     R0,A
   \   000478   A3           INC     DPTR
   \   000479   E0           MOVX    A,@DPTR
   \   00047A   F9           MOV     R1,A
   \   00047B   E8           MOV     A,R0
   \   00047C   75F004       MOV     B,#0x4
   \   00047F   A4           MUL     AB
   \   000480   C8           XCH     A,R0
   \   000481   AAF0         MOV     R2,B
   \   000483   75F000       MOV     B,#0x0
   \   000486   A4           MUL     AB
   \   000487   2A           ADD     A,R2
   \   000488   FA           MOV     R2,A
   \   000489   75F004       MOV     B,#0x4
   \   00048C   E9           MOV     A,R1
   \   00048D   A4           MUL     AB
   \   00048E   2A           ADD     A,R2
   \   00048F   F9           MOV     R1,A
   \   000490   7434         MOV     A,#0x34
   \   000492   12....       LCALL   ?XSTACK_DISP0_8
   \   000495   E0           MOVX    A,@DPTR
   \   000496   28           ADD     A,R0
   \   000497   F8           MOV     R0,A
   \   000498   A3           INC     DPTR
   \   000499   E0           MOVX    A,@DPTR
   \   00049A   39           ADDC    A,R1
   \   00049B   F9           MOV     R1,A
   \   00049C   E8           MOV     A,R0
   \   00049D   24FC         ADD     A,#-0x4
   \   00049F   F582         MOV     DPL,A
   \   0004A1   E9           MOV     A,R1
   \   0004A2   34FF         ADDC    A,#-0x1
   \   0004A4   F583         MOV     DPH,A
   \   0004A6   12....       LCALL   ?XLOAD_R2345
   \   0004A9   7402         MOV     A,#0x2
   \   0004AB   12....       LCALL   ?XSTACK_DISP0_8
   \   0004AE   12....       LCALL   ?XSTORE_R2345
   \   0004B1   8041         SJMP    ??calibrationN_3
    342            }
    343            else
    344            {
    345              n=nValue[localID-1];
   \                     ??calibrationN_1:
   \   0004B3   85..82       MOV     DPL,?XSP + 0
   \   0004B6   85..83       MOV     DPH,?XSP + 1
   \   0004B9   E0           MOVX    A,@DPTR
   \   0004BA   F8           MOV     R0,A
   \   0004BB   A3           INC     DPTR
   \   0004BC   E0           MOVX    A,@DPTR
   \   0004BD   F9           MOV     R1,A
   \   0004BE   E8           MOV     A,R0
   \   0004BF   75F004       MOV     B,#0x4
   \   0004C2   A4           MUL     AB
   \   0004C3   C8           XCH     A,R0
   \   0004C4   AAF0         MOV     R2,B
   \   0004C6   75F000       MOV     B,#0x0
   \   0004C9   A4           MUL     AB
   \   0004CA   2A           ADD     A,R2
   \   0004CB   FA           MOV     R2,A
   \   0004CC   75F004       MOV     B,#0x4
   \   0004CF   E9           MOV     A,R1
   \   0004D0   A4           MUL     AB
   \   0004D1   2A           ADD     A,R2
   \   0004D2   F9           MOV     R1,A
   \   0004D3   7434         MOV     A,#0x34
   \   0004D5   12....       LCALL   ?XSTACK_DISP0_8
   \   0004D8   E0           MOVX    A,@DPTR
   \   0004D9   28           ADD     A,R0
   \   0004DA   F8           MOV     R0,A
   \   0004DB   A3           INC     DPTR
   \   0004DC   E0           MOVX    A,@DPTR
   \   0004DD   39           ADDC    A,R1
   \   0004DE   F9           MOV     R1,A
   \   0004DF   E8           MOV     A,R0
   \   0004E0   24FC         ADD     A,#-0x4
   \   0004E2   F582         MOV     DPL,A
   \   0004E4   E9           MOV     A,R1
   \   0004E5   34FF         ADDC    A,#-0x1
   \   0004E7   F583         MOV     DPH,A
   \   0004E9   12....       LCALL   ?XLOAD_R2345
   \   0004EC   7402         MOV     A,#0x2
   \   0004EE   12....       LCALL   ?XSTACK_DISP0_8
   \   0004F1   12....       LCALL   ?XSTORE_R2345
    346            }
    347            return n;
   \                     ??calibrationN_3:
   \   0004F4   7402         MOV     A,#0x2
   \   0004F6   12....       LCALL   ?XSTACK_DISP0_8
   \   0004F9   12....       LCALL   ?XLOAD_R2345
   \   0004FC   741A         MOV     A,#0x1a
   \   0004FE   12....       LCALL   ?DEALLOC_XSTACK8
   \   000501   7F10         MOV     R7,#0x10
   \   000503   02....       LJMP    ?BANKED_LEAVE_XDATA
    348          }
    349          
    350          /*********************************************************************
    351           * @fn      calibrationA
    352           *
    353           * @brief   calibration of A from anchors
    354           *
    355           * @param   rssi rssi array
    356           *
    357           * @return  none
    358           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    359          float calibrationA(int localID, int index, float rssivalue_f[4], float nValue[4], 
   \                     calibrationA:
    360                             float AnchorX[4], float AnchorY[4], float AnchorZ[4], float AValue[4])
    361          {
   \   000000   74E8         MOV     A,#-0x18
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 24
   \   000005                ; Auto size: 10
   \   000005   74F6         MOV     A,#-0xa
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   85..82       MOV     DPL,?XSP + 0
   \   00000D   85..83       MOV     DPH,?XSP + 1
   \   000010   EA           MOV     A,R2
   \   000011   F0           MOVX    @DPTR,A
   \   000012   A3           INC     DPTR
   \   000013   EB           MOV     A,R3
   \   000014   F0           MOVX    @DPTR,A
   \   000015   EC           MOV     A,R4
   \   000016   FE           MOV     R6,A
   \   000017   ED           MOV     A,R5
   \   000018   FF           MOV     R7,A
    362            float Aresult;
    363            float offset=2.0f;
   \   000019   7A00         MOV     R2,#0x0
   \   00001B   7B00         MOV     R3,#0x0
   \   00001D   7C00         MOV     R4,#0x0
   \   00001F   7D40         MOV     R5,#0x40
   \   000021   7406         MOV     A,#0x6
   \   000023   12....       LCALL   ?XSTACK_DISP0_8
   \   000026   EA           MOV     A,R2
   \   000027   F0           MOVX    @DPTR,A
   \   000028   A3           INC     DPTR
   \   000029   EB           MOV     A,R3
   \   00002A   F0           MOVX    @DPTR,A
   \   00002B   A3           INC     DPTR
   \   00002C   EC           MOV     A,R4
   \   00002D   F0           MOVX    @DPTR,A
   \   00002E   A3           INC     DPTR
   \   00002F   ED           MOV     A,R5
   \   000030   F0           MOVX    @DPTR,A
    364            if(localID!=index)
   \   000031   85..82       MOV     DPL,?XSP + 0
   \   000034   85..83       MOV     DPH,?XSP + 1
   \   000037   E0           MOVX    A,@DPTR
   \   000038   6E           XRL     A,R6
   \   000039   7003         JNZ     ??calibrationA_0
   \   00003B   A3           INC     DPTR
   \   00003C   E0           MOVX    A,@DPTR
   \   00003D   6F           XRL     A,R7
   \                     ??calibrationA_0:
   \   00003E   7003         JNZ     $+5
   \   000040   02....       LJMP    ??calibrationA_1 & 0xFFFF
    365            {
    366                
    367                float d=0.0f;
   \   000043   75..00       MOV     ?V0 + 0,#0x0
   \   000046   75..00       MOV     ?V0 + 1,#0x0
   \   000049   75..00       MOV     ?V0 + 2,#0x0
   \   00004C   75..00       MOV     ?V0 + 3,#0x0
    368                d=(AnchorX[localID-1]-AnchorX[index-1])*(AnchorX[localID-1]-AnchorX[index-1])+
    369                  (AnchorY[localID-1]-AnchorY[index-1])*(AnchorY[localID-1]-AnchorY[index-1])+
    370                    (AnchorZ[localID-1]-AnchorZ[index-1])*(AnchorZ[localID-1]-AnchorZ[index-1]);
   \   00004F   85..82       MOV     DPL,?XSP + 0
   \   000052   85..83       MOV     DPH,?XSP + 1
   \   000055   E0           MOVX    A,@DPTR
   \   000056   F8           MOV     R0,A
   \   000057   A3           INC     DPTR
   \   000058   E0           MOVX    A,@DPTR
   \   000059   F9           MOV     R1,A
   \   00005A   E8           MOV     A,R0
   \   00005B   75F004       MOV     B,#0x4
   \   00005E   A4           MUL     AB
   \   00005F   C8           XCH     A,R0
   \   000060   AAF0         MOV     R2,B
   \   000062   75F000       MOV     B,#0x0
   \   000065   A4           MUL     AB
   \   000066   2A           ADD     A,R2
   \   000067   FA           MOV     R2,A
   \   000068   75F004       MOV     B,#0x4
   \   00006B   E9           MOV     A,R1
   \   00006C   A4           MUL     AB
   \   00006D   2A           ADD     A,R2
   \   00006E   F9           MOV     R1,A
   \   00006F   7426         MOV     A,#0x26
   \   000071   12....       LCALL   ?XSTACK_DISP0_8
   \   000074   E0           MOVX    A,@DPTR
   \   000075   28           ADD     A,R0
   \   000076   F8           MOV     R0,A
   \   000077   A3           INC     DPTR
   \   000078   E0           MOVX    A,@DPTR
   \   000079   39           ADDC    A,R1
   \   00007A   F9           MOV     R1,A
   \   00007B   E8           MOV     A,R0
   \   00007C   24FC         ADD     A,#-0x4
   \   00007E   F582         MOV     DPL,A
   \   000080   E9           MOV     A,R1
   \   000081   34FF         ADDC    A,#-0x1
   \   000083   F583         MOV     DPH,A
   \   000085   78..         MOV     R0,#?V0 + 4
   \   000087   12....       LCALL   ?L_MOV_X
   \   00008A   EE           MOV     A,R6
   \   00008B   F8           MOV     R0,A
   \   00008C   EF           MOV     A,R7
   \   00008D   F9           MOV     R1,A
   \   00008E   E8           MOV     A,R0
   \   00008F   75F004       MOV     B,#0x4
   \   000092   A4           MUL     AB
   \   000093   C8           XCH     A,R0
   \   000094   AAF0         MOV     R2,B
   \   000096   75F000       MOV     B,#0x0
   \   000099   A4           MUL     AB
   \   00009A   2A           ADD     A,R2
   \   00009B   FA           MOV     R2,A
   \   00009C   75F004       MOV     B,#0x4
   \   00009F   E9           MOV     A,R1
   \   0000A0   A4           MUL     AB
   \   0000A1   2A           ADD     A,R2
   \   0000A2   F9           MOV     R1,A
   \   0000A3   7426         MOV     A,#0x26
   \   0000A5   12....       LCALL   ?XSTACK_DISP0_8
   \   0000A8   E0           MOVX    A,@DPTR
   \   0000A9   28           ADD     A,R0
   \   0000AA   F8           MOV     R0,A
   \   0000AB   A3           INC     DPTR
   \   0000AC   E0           MOVX    A,@DPTR
   \   0000AD   39           ADDC    A,R1
   \   0000AE   F9           MOV     R1,A
   \   0000AF   E8           MOV     A,R0
   \   0000B0   24FC         ADD     A,#-0x4
   \   0000B2   F582         MOV     DPL,A
   \   0000B4   E9           MOV     A,R1
   \   0000B5   34FF         ADDC    A,#-0x1
   \   0000B7   F583         MOV     DPH,A
   \   0000B9   78..         MOV     R0,#?V0 + 8
   \   0000BB   12....       LCALL   ?L_MOV_X
   \   0000BE   78..         MOV     R0,#?V0 + 4
   \   0000C0   79..         MOV     R1,#?V0 + 8
   \   0000C2   12....       LCALL   ?FLT_SUB
   \   0000C5   85..82       MOV     DPL,?XSP + 0
   \   0000C8   85..83       MOV     DPH,?XSP + 1
   \   0000CB   E0           MOVX    A,@DPTR
   \   0000CC   F8           MOV     R0,A
   \   0000CD   A3           INC     DPTR
   \   0000CE   E0           MOVX    A,@DPTR
   \   0000CF   F9           MOV     R1,A
   \   0000D0   E8           MOV     A,R0
   \   0000D1   75F004       MOV     B,#0x4
   \   0000D4   A4           MUL     AB
   \   0000D5   C8           XCH     A,R0
   \   0000D6   AAF0         MOV     R2,B
   \   0000D8   75F000       MOV     B,#0x0
   \   0000DB   A4           MUL     AB
   \   0000DC   2A           ADD     A,R2
   \   0000DD   FA           MOV     R2,A
   \   0000DE   75F004       MOV     B,#0x4
   \   0000E1   E9           MOV     A,R1
   \   0000E2   A4           MUL     AB
   \   0000E3   2A           ADD     A,R2
   \   0000E4   F9           MOV     R1,A
   \   0000E5   7426         MOV     A,#0x26
   \   0000E7   12....       LCALL   ?XSTACK_DISP0_8
   \   0000EA   E0           MOVX    A,@DPTR
   \   0000EB   28           ADD     A,R0
   \   0000EC   F8           MOV     R0,A
   \   0000ED   A3           INC     DPTR
   \   0000EE   E0           MOVX    A,@DPTR
   \   0000EF   39           ADDC    A,R1
   \   0000F0   F9           MOV     R1,A
   \   0000F1   E8           MOV     A,R0
   \   0000F2   24FC         ADD     A,#-0x4
   \   0000F4   F582         MOV     DPL,A
   \   0000F6   E9           MOV     A,R1
   \   0000F7   34FF         ADDC    A,#-0x1
   \   0000F9   F583         MOV     DPH,A
   \   0000FB   78..         MOV     R0,#?V0 + 12
   \   0000FD   12....       LCALL   ?L_MOV_X
   \   000100   EE           MOV     A,R6
   \   000101   F8           MOV     R0,A
   \   000102   EF           MOV     A,R7
   \   000103   F9           MOV     R1,A
   \   000104   E8           MOV     A,R0
   \   000105   75F004       MOV     B,#0x4
   \   000108   A4           MUL     AB
   \   000109   C8           XCH     A,R0
   \   00010A   AAF0         MOV     R2,B
   \   00010C   75F000       MOV     B,#0x0
   \   00010F   A4           MUL     AB
   \   000110   2A           ADD     A,R2
   \   000111   FA           MOV     R2,A
   \   000112   75F004       MOV     B,#0x4
   \   000115   E9           MOV     A,R1
   \   000116   A4           MUL     AB
   \   000117   2A           ADD     A,R2
   \   000118   F9           MOV     R1,A
   \   000119   7426         MOV     A,#0x26
   \   00011B   12....       LCALL   ?XSTACK_DISP0_8
   \   00011E   E0           MOVX    A,@DPTR
   \   00011F   28           ADD     A,R0
   \   000120   F8           MOV     R0,A
   \   000121   A3           INC     DPTR
   \   000122   E0           MOVX    A,@DPTR
   \   000123   39           ADDC    A,R1
   \   000124   F9           MOV     R1,A
   \   000125   E8           MOV     A,R0
   \   000126   24FC         ADD     A,#-0x4
   \   000128   F582         MOV     DPL,A
   \   00012A   E9           MOV     A,R1
   \   00012B   34FF         ADDC    A,#-0x1
   \   00012D   F583         MOV     DPH,A
   \   00012F   78..         MOV     R0,#?V0 + 8
   \   000131   12....       LCALL   ?L_MOV_X
   \   000134   78..         MOV     R0,#?V0 + 12
   \   000136   79..         MOV     R1,#?V0 + 8
   \   000138   12....       LCALL   ?FLT_SUB
   \   00013B   78..         MOV     R0,#?V0 + 4
   \   00013D   79..         MOV     R1,#?V0 + 12
   \   00013F   12....       LCALL   ?FLT_MUL
   \   000142   C0..         PUSH    ?V0 + 4
   \   000144   C0..         PUSH    ?V0 + 5
   \   000146   C0..         PUSH    ?V0 + 6
   \   000148   C0..         PUSH    ?V0 + 7
   \   00014A   85..82       MOV     DPL,?XSP + 0
   \   00014D   85..83       MOV     DPH,?XSP + 1
   \   000150   E0           MOVX    A,@DPTR
   \   000151   F8           MOV     R0,A
   \   000152   A3           INC     DPTR
   \   000153   E0           MOVX    A,@DPTR
   \   000154   F9           MOV     R1,A
   \   000155   E8           MOV     A,R0
   \   000156   75F004       MOV     B,#0x4
   \   000159   A4           MUL     AB
   \   00015A   C8           XCH     A,R0
   \   00015B   AAF0         MOV     R2,B
   \   00015D   75F000       MOV     B,#0x0
   \   000160   A4           MUL     AB
   \   000161   2A           ADD     A,R2
   \   000162   FA           MOV     R2,A
   \   000163   75F004       MOV     B,#0x4
   \   000166   E9           MOV     A,R1
   \   000167   A4           MUL     AB
   \   000168   2A           ADD     A,R2
   \   000169   F9           MOV     R1,A
   \   00016A   7428         MOV     A,#0x28
   \   00016C   12....       LCALL   ?XSTACK_DISP0_8
   \   00016F   E0           MOVX    A,@DPTR
   \   000170   28           ADD     A,R0
   \   000171   F8           MOV     R0,A
   \   000172   A3           INC     DPTR
   \   000173   E0           MOVX    A,@DPTR
   \   000174   39           ADDC    A,R1
   \   000175   F9           MOV     R1,A
   \   000176   E8           MOV     A,R0
   \   000177   24FC         ADD     A,#-0x4
   \   000179   F582         MOV     DPL,A
   \   00017B   E9           MOV     A,R1
   \   00017C   34FF         ADDC    A,#-0x1
   \   00017E   F583         MOV     DPH,A
   \   000180   78..         MOV     R0,#?V0 + 4
   \   000182   12....       LCALL   ?L_MOV_X
   \   000185   EE           MOV     A,R6
   \   000186   F8           MOV     R0,A
   \   000187   EF           MOV     A,R7
   \   000188   F9           MOV     R1,A
   \   000189   E8           MOV     A,R0
   \   00018A   75F004       MOV     B,#0x4
   \   00018D   A4           MUL     AB
   \   00018E   C8           XCH     A,R0
   \   00018F   AAF0         MOV     R2,B
   \   000191   75F000       MOV     B,#0x0
   \   000194   A4           MUL     AB
   \   000195   2A           ADD     A,R2
   \   000196   FA           MOV     R2,A
   \   000197   75F004       MOV     B,#0x4
   \   00019A   E9           MOV     A,R1
   \   00019B   A4           MUL     AB
   \   00019C   2A           ADD     A,R2
   \   00019D   F9           MOV     R1,A
   \   00019E   7428         MOV     A,#0x28
   \   0001A0   12....       LCALL   ?XSTACK_DISP0_8
   \   0001A3   E0           MOVX    A,@DPTR
   \   0001A4   28           ADD     A,R0
   \   0001A5   F8           MOV     R0,A
   \   0001A6   A3           INC     DPTR
   \   0001A7   E0           MOVX    A,@DPTR
   \   0001A8   39           ADDC    A,R1
   \   0001A9   F9           MOV     R1,A
   \   0001AA   E8           MOV     A,R0
   \   0001AB   24FC         ADD     A,#-0x4
   \   0001AD   F582         MOV     DPL,A
   \   0001AF   E9           MOV     A,R1
   \   0001B0   34FF         ADDC    A,#-0x1
   \   0001B2   F583         MOV     DPH,A
   \   0001B4   78..         MOV     R0,#?V0 + 8
   \   0001B6   12....       LCALL   ?L_MOV_X
   \   0001B9   78..         MOV     R0,#?V0 + 4
   \   0001BB   79..         MOV     R1,#?V0 + 8
   \   0001BD   12....       LCALL   ?FLT_SUB
   \   0001C0   85..82       MOV     DPL,?XSP + 0
   \   0001C3   85..83       MOV     DPH,?XSP + 1
   \   0001C6   E0           MOVX    A,@DPTR
   \   0001C7   F8           MOV     R0,A
   \   0001C8   A3           INC     DPTR
   \   0001C9   E0           MOVX    A,@DPTR
   \   0001CA   F9           MOV     R1,A
   \   0001CB   E8           MOV     A,R0
   \   0001CC   75F004       MOV     B,#0x4
   \   0001CF   A4           MUL     AB
   \   0001D0   C8           XCH     A,R0
   \   0001D1   AAF0         MOV     R2,B
   \   0001D3   75F000       MOV     B,#0x0
   \   0001D6   A4           MUL     AB
   \   0001D7   2A           ADD     A,R2
   \   0001D8   FA           MOV     R2,A
   \   0001D9   75F004       MOV     B,#0x4
   \   0001DC   E9           MOV     A,R1
   \   0001DD   A4           MUL     AB
   \   0001DE   2A           ADD     A,R2
   \   0001DF   F9           MOV     R1,A
   \   0001E0   7428         MOV     A,#0x28
   \   0001E2   12....       LCALL   ?XSTACK_DISP0_8
   \   0001E5   E0           MOVX    A,@DPTR
   \   0001E6   28           ADD     A,R0
   \   0001E7   F8           MOV     R0,A
   \   0001E8   A3           INC     DPTR
   \   0001E9   E0           MOVX    A,@DPTR
   \   0001EA   39           ADDC    A,R1
   \   0001EB   F9           MOV     R1,A
   \   0001EC   E8           MOV     A,R0
   \   0001ED   24FC         ADD     A,#-0x4
   \   0001EF   F582         MOV     DPL,A
   \   0001F1   E9           MOV     A,R1
   \   0001F2   34FF         ADDC    A,#-0x1
   \   0001F4   F583         MOV     DPH,A
   \   0001F6   78..         MOV     R0,#?V0 + 12
   \   0001F8   12....       LCALL   ?L_MOV_X
   \   0001FB   EE           MOV     A,R6
   \   0001FC   F8           MOV     R0,A
   \   0001FD   EF           MOV     A,R7
   \   0001FE   F9           MOV     R1,A
   \   0001FF   E8           MOV     A,R0
   \   000200   75F004       MOV     B,#0x4
   \   000203   A4           MUL     AB
   \   000204   C8           XCH     A,R0
   \   000205   AAF0         MOV     R2,B
   \   000207   75F000       MOV     B,#0x0
   \   00020A   A4           MUL     AB
   \   00020B   2A           ADD     A,R2
   \   00020C   FA           MOV     R2,A
   \   00020D   75F004       MOV     B,#0x4
   \   000210   E9           MOV     A,R1
   \   000211   A4           MUL     AB
   \   000212   2A           ADD     A,R2
   \   000213   F9           MOV     R1,A
   \   000214   7428         MOV     A,#0x28
   \   000216   12....       LCALL   ?XSTACK_DISP0_8
   \   000219   E0           MOVX    A,@DPTR
   \   00021A   28           ADD     A,R0
   \   00021B   F8           MOV     R0,A
   \   00021C   A3           INC     DPTR
   \   00021D   E0           MOVX    A,@DPTR
   \   00021E   39           ADDC    A,R1
   \   00021F   F9           MOV     R1,A
   \   000220   E8           MOV     A,R0
   \   000221   24FC         ADD     A,#-0x4
   \   000223   F582         MOV     DPL,A
   \   000225   E9           MOV     A,R1
   \   000226   34FF         ADDC    A,#-0x1
   \   000228   F583         MOV     DPH,A
   \   00022A   78..         MOV     R0,#?V0 + 8
   \   00022C   12....       LCALL   ?L_MOV_X
   \   00022F   78..         MOV     R0,#?V0 + 12
   \   000231   79..         MOV     R1,#?V0 + 8
   \   000233   12....       LCALL   ?FLT_SUB
   \   000236   78..         MOV     R0,#?V0 + 4
   \   000238   79..         MOV     R1,#?V0 + 12
   \   00023A   12....       LCALL   ?FLT_MUL
   \   00023D   D0..         POP     ?V0 + 11
   \   00023F   D0..         POP     ?V0 + 10
   \   000241   D0..         POP     ?V0 + 9
   \   000243   D0..         POP     ?V0 + 8
   \   000245   78..         MOV     R0,#?V0 + 8
   \   000247   79..         MOV     R1,#?V0 + 4
   \   000249   12....       LCALL   ?FLT_ADD
   \   00024C   C0..         PUSH    ?V0 + 8
   \   00024E   C0..         PUSH    ?V0 + 9
   \   000250   C0..         PUSH    ?V0 + 10
   \   000252   C0..         PUSH    ?V0 + 11
   \   000254   85..82       MOV     DPL,?XSP + 0
   \   000257   85..83       MOV     DPH,?XSP + 1
   \   00025A   E0           MOVX    A,@DPTR
   \   00025B   F8           MOV     R0,A
   \   00025C   A3           INC     DPTR
   \   00025D   E0           MOVX    A,@DPTR
   \   00025E   F9           MOV     R1,A
   \   00025F   E8           MOV     A,R0
   \   000260   75F004       MOV     B,#0x4
   \   000263   A4           MUL     AB
   \   000264   C8           XCH     A,R0
   \   000265   AAF0         MOV     R2,B
   \   000267   75F000       MOV     B,#0x0
   \   00026A   A4           MUL     AB
   \   00026B   2A           ADD     A,R2
   \   00026C   FA           MOV     R2,A
   \   00026D   75F004       MOV     B,#0x4
   \   000270   E9           MOV     A,R1
   \   000271   A4           MUL     AB
   \   000272   2A           ADD     A,R2
   \   000273   F9           MOV     R1,A
   \   000274   742A         MOV     A,#0x2a
   \   000276   12....       LCALL   ?XSTACK_DISP0_8
   \   000279   E0           MOVX    A,@DPTR
   \   00027A   28           ADD     A,R0
   \   00027B   F8           MOV     R0,A
   \   00027C   A3           INC     DPTR
   \   00027D   E0           MOVX    A,@DPTR
   \   00027E   39           ADDC    A,R1
   \   00027F   F9           MOV     R1,A
   \   000280   E8           MOV     A,R0
   \   000281   24FC         ADD     A,#-0x4
   \   000283   F582         MOV     DPL,A
   \   000285   E9           MOV     A,R1
   \   000286   34FF         ADDC    A,#-0x1
   \   000288   F583         MOV     DPH,A
   \   00028A   78..         MOV     R0,#?V0 + 4
   \   00028C   12....       LCALL   ?L_MOV_X
   \   00028F   EE           MOV     A,R6
   \   000290   F8           MOV     R0,A
   \   000291   EF           MOV     A,R7
   \   000292   F9           MOV     R1,A
   \   000293   E8           MOV     A,R0
   \   000294   75F004       MOV     B,#0x4
   \   000297   A4           MUL     AB
   \   000298   C8           XCH     A,R0
   \   000299   AAF0         MOV     R2,B
   \   00029B   75F000       MOV     B,#0x0
   \   00029E   A4           MUL     AB
   \   00029F   2A           ADD     A,R2
   \   0002A0   FA           MOV     R2,A
   \   0002A1   75F004       MOV     B,#0x4
   \   0002A4   E9           MOV     A,R1
   \   0002A5   A4           MUL     AB
   \   0002A6   2A           ADD     A,R2
   \   0002A7   F9           MOV     R1,A
   \   0002A8   742A         MOV     A,#0x2a
   \   0002AA   12....       LCALL   ?XSTACK_DISP0_8
   \   0002AD   E0           MOVX    A,@DPTR
   \   0002AE   28           ADD     A,R0
   \   0002AF   F8           MOV     R0,A
   \   0002B0   A3           INC     DPTR
   \   0002B1   E0           MOVX    A,@DPTR
   \   0002B2   39           ADDC    A,R1
   \   0002B3   F9           MOV     R1,A
   \   0002B4   E8           MOV     A,R0
   \   0002B5   24FC         ADD     A,#-0x4
   \   0002B7   F582         MOV     DPL,A
   \   0002B9   E9           MOV     A,R1
   \   0002BA   34FF         ADDC    A,#-0x1
   \   0002BC   F583         MOV     DPH,A
   \   0002BE   78..         MOV     R0,#?V0 + 8
   \   0002C0   12....       LCALL   ?L_MOV_X
   \   0002C3   78..         MOV     R0,#?V0 + 4
   \   0002C5   79..         MOV     R1,#?V0 + 8
   \   0002C7   12....       LCALL   ?FLT_SUB
   \   0002CA   85..82       MOV     DPL,?XSP + 0
   \   0002CD   85..83       MOV     DPH,?XSP + 1
   \   0002D0   E0           MOVX    A,@DPTR
   \   0002D1   F8           MOV     R0,A
   \   0002D2   A3           INC     DPTR
   \   0002D3   E0           MOVX    A,@DPTR
   \   0002D4   F9           MOV     R1,A
   \   0002D5   E8           MOV     A,R0
   \   0002D6   75F004       MOV     B,#0x4
   \   0002D9   A4           MUL     AB
   \   0002DA   C8           XCH     A,R0
   \   0002DB   AAF0         MOV     R2,B
   \   0002DD   75F000       MOV     B,#0x0
   \   0002E0   A4           MUL     AB
   \   0002E1   2A           ADD     A,R2
   \   0002E2   FA           MOV     R2,A
   \   0002E3   75F004       MOV     B,#0x4
   \   0002E6   E9           MOV     A,R1
   \   0002E7   A4           MUL     AB
   \   0002E8   2A           ADD     A,R2
   \   0002E9   F9           MOV     R1,A
   \   0002EA   742A         MOV     A,#0x2a
   \   0002EC   12....       LCALL   ?XSTACK_DISP0_8
   \   0002EF   E0           MOVX    A,@DPTR
   \   0002F0   28           ADD     A,R0
   \   0002F1   F8           MOV     R0,A
   \   0002F2   A3           INC     DPTR
   \   0002F3   E0           MOVX    A,@DPTR
   \   0002F4   39           ADDC    A,R1
   \   0002F5   F9           MOV     R1,A
   \   0002F6   E8           MOV     A,R0
   \   0002F7   24FC         ADD     A,#-0x4
   \   0002F9   F582         MOV     DPL,A
   \   0002FB   E9           MOV     A,R1
   \   0002FC   34FF         ADDC    A,#-0x1
   \   0002FE   F583         MOV     DPH,A
   \   000300   78..         MOV     R0,#?V0 + 12
   \   000302   12....       LCALL   ?L_MOV_X
   \   000305   EE           MOV     A,R6
   \   000306   F8           MOV     R0,A
   \   000307   EF           MOV     A,R7
   \   000308   F9           MOV     R1,A
   \   000309   E8           MOV     A,R0
   \   00030A   75F004       MOV     B,#0x4
   \   00030D   A4           MUL     AB
   \   00030E   C8           XCH     A,R0
   \   00030F   AAF0         MOV     R2,B
   \   000311   75F000       MOV     B,#0x0
   \   000314   A4           MUL     AB
   \   000315   2A           ADD     A,R2
   \   000316   FA           MOV     R2,A
   \   000317   75F004       MOV     B,#0x4
   \   00031A   E9           MOV     A,R1
   \   00031B   A4           MUL     AB
   \   00031C   2A           ADD     A,R2
   \   00031D   F9           MOV     R1,A
   \   00031E   742A         MOV     A,#0x2a
   \   000320   12....       LCALL   ?XSTACK_DISP0_8
   \   000323   E0           MOVX    A,@DPTR
   \   000324   28           ADD     A,R0
   \   000325   F8           MOV     R0,A
   \   000326   A3           INC     DPTR
   \   000327   E0           MOVX    A,@DPTR
   \   000328   39           ADDC    A,R1
   \   000329   F9           MOV     R1,A
   \   00032A   E8           MOV     A,R0
   \   00032B   24FC         ADD     A,#-0x4
   \   00032D   F582         MOV     DPL,A
   \   00032F   E9           MOV     A,R1
   \   000330   34FF         ADDC    A,#-0x1
   \   000332   F583         MOV     DPH,A
   \   000334   78..         MOV     R0,#?V0 + 8
   \   000336   12....       LCALL   ?L_MOV_X
   \   000339   78..         MOV     R0,#?V0 + 12
   \   00033B   79..         MOV     R1,#?V0 + 8
   \   00033D   12....       LCALL   ?FLT_SUB
   \   000340   78..         MOV     R0,#?V0 + 4
   \   000342   79..         MOV     R1,#?V0 + 12
   \   000344   12....       LCALL   ?FLT_MUL
   \   000347   D0..         POP     ?V0 + 11
   \   000349   D0..         POP     ?V0 + 10
   \   00034B   D0..         POP     ?V0 + 9
   \   00034D   D0..         POP     ?V0 + 8
   \   00034F   78..         MOV     R0,#?V0 + 8
   \   000351   79..         MOV     R1,#?V0 + 4
   \   000353   12....       LCALL   ?FLT_ADD
   \   000356   85....       MOV     ?V0 + 0,?V0 + 8
   \   000359   85....       MOV     ?V0 + 1,?V0 + 9
   \   00035C   85....       MOV     ?V0 + 2,?V0 + 10
   \   00035F   85....       MOV     ?V0 + 3,?V0 + 11
    371               
    372               
    373                d=pow(d,0.5);   // distance between two anchors 
   \   000362                ; Setup parameters for call to function pow
   \   000362   90....       MOV     DPTR,#__Constant_3f000000
   \   000365   12....       LCALL   ?PUSH_XSTACK8_X_FOUR
   \   000368   AA..         MOV     R2,?V0 + 0
   \   00036A   AB..         MOV     R3,?V0 + 1
   \   00036C   AC..         MOV     R4,?V0 + 2
   \   00036E   AD..         MOV     R5,?V0 + 3
   \   000370   12....       LCALL   ??pow?relay
   \   000373   7404         MOV     A,#0x4
   \   000375   12....       LCALL   ?DEALLOC_XSTACK8
   \   000378   8A..         MOV     ?V0 + 4,R2
   \   00037A   8B..         MOV     ?V0 + 5,R3
   \   00037C   8C..         MOV     ?V0 + 6,R4
   \   00037E   8D..         MOV     ?V0 + 7,R5
   \   000380   85....       MOV     ?V0 + 0,?V0 + 4
   \   000383   85....       MOV     ?V0 + 1,?V0 + 5
   \   000386   85....       MOV     ?V0 + 2,?V0 + 6
   \   000389   85....       MOV     ?V0 + 3,?V0 + 7
    374               
    375                if(d!=1)
   \   00038C   90....       MOV     DPTR,#__Constant_3f800000
   \   00038F   78..         MOV     R0,#?V0 + 4
   \   000391   12....       LCALL   ?L_MOV_X
   \   000394   78..         MOV     R0,#?V0 + 0
   \   000396   79..         MOV     R1,#?V0 + 4
   \   000398   12....       LCALL   ?FLT_EQ
   \   00039B   7003         JNZ     $+5
   \   00039D   02....       LJMP    ??calibrationA_2 & 0xFFFF
    376                  Aresult=rssivalue_f[index-1]-10*nValue[index-1]*log10(d)+offset;
   \   0003A0   EE           MOV     A,R6
   \   0003A1   F8           MOV     R0,A
   \   0003A2   EF           MOV     A,R7
   \   0003A3   F9           MOV     R1,A
   \   0003A4   E8           MOV     A,R0
   \   0003A5   75F004       MOV     B,#0x4
   \   0003A8   A4           MUL     AB
   \   0003A9   C8           XCH     A,R0
   \   0003AA   AAF0         MOV     R2,B
   \   0003AC   75F000       MOV     B,#0x0
   \   0003AF   A4           MUL     AB
   \   0003B0   2A           ADD     A,R2
   \   0003B1   FA           MOV     R2,A
   \   0003B2   75F004       MOV     B,#0x4
   \   0003B5   E9           MOV     A,R1
   \   0003B6   A4           MUL     AB
   \   0003B7   2A           ADD     A,R2
   \   0003B8   F9           MOV     R1,A
   \   0003B9   7422         MOV     A,#0x22
   \   0003BB   12....       LCALL   ?XSTACK_DISP0_8
   \   0003BE   E0           MOVX    A,@DPTR
   \   0003BF   28           ADD     A,R0
   \   0003C0   F8           MOV     R0,A
   \   0003C1   A3           INC     DPTR
   \   0003C2   E0           MOVX    A,@DPTR
   \   0003C3   39           ADDC    A,R1
   \   0003C4   F9           MOV     R1,A
   \   0003C5   E8           MOV     A,R0
   \   0003C6   24FC         ADD     A,#-0x4
   \   0003C8   F582         MOV     DPL,A
   \   0003CA   E9           MOV     A,R1
   \   0003CB   34FF         ADDC    A,#-0x1
   \   0003CD   F583         MOV     DPH,A
   \   0003CF   78..         MOV     R0,#?V0 + 8
   \   0003D1   12....       LCALL   ?L_MOV_X
   \   0003D4   EE           MOV     A,R6
   \   0003D5   F8           MOV     R0,A
   \   0003D6   EF           MOV     A,R7
   \   0003D7   F9           MOV     R1,A
   \   0003D8   E8           MOV     A,R0
   \   0003D9   75F004       MOV     B,#0x4
   \   0003DC   A4           MUL     AB
   \   0003DD   C8           XCH     A,R0
   \   0003DE   AAF0         MOV     R2,B
   \   0003E0   75F000       MOV     B,#0x0
   \   0003E3   A4           MUL     AB
   \   0003E4   2A           ADD     A,R2
   \   0003E5   FA           MOV     R2,A
   \   0003E6   75F004       MOV     B,#0x4
   \   0003E9   E9           MOV     A,R1
   \   0003EA   A4           MUL     AB
   \   0003EB   2A           ADD     A,R2
   \   0003EC   F9           MOV     R1,A
   \   0003ED   7424         MOV     A,#0x24
   \   0003EF   12....       LCALL   ?XSTACK_DISP0_8
   \   0003F2   E0           MOVX    A,@DPTR
   \   0003F3   28           ADD     A,R0
   \   0003F4   F8           MOV     R0,A
   \   0003F5   A3           INC     DPTR
   \   0003F6   E0           MOVX    A,@DPTR
   \   0003F7   39           ADDC    A,R1
   \   0003F8   F9           MOV     R1,A
   \   0003F9   E8           MOV     A,R0
   \   0003FA   24FC         ADD     A,#-0x4
   \   0003FC   F582         MOV     DPL,A
   \   0003FE   E9           MOV     A,R1
   \   0003FF   34FF         ADDC    A,#-0x1
   \   000401   F583         MOV     DPH,A
   \   000403   78..         MOV     R0,#?V0 + 4
   \   000405   12....       LCALL   ?L_MOV_X
   \   000408   90....       MOV     DPTR,#__Constant_41200000
   \   00040B   78..         MOV     R0,#?V0 + 12
   \   00040D   12....       LCALL   ?L_MOV_X
   \   000410   78..         MOV     R0,#?V0 + 4
   \   000412   79..         MOV     R1,#?V0 + 12
   \   000414   12....       LCALL   ?FLT_MUL
   \   000417                ; Setup parameters for call to function log10
   \   000417   AA..         MOV     R2,?V0 + 0
   \   000419   AB..         MOV     R3,?V0 + 1
   \   00041B   AC..         MOV     R4,?V0 + 2
   \   00041D   AD..         MOV     R5,?V0 + 3
   \   00041F   12....       LCALL   ??log10?relay
   \   000422   8A..         MOV     ?V0 + 12,R2
   \   000424   8B..         MOV     ?V0 + 13,R3
   \   000426   8C..         MOV     ?V0 + 14,R4
   \   000428   8D..         MOV     ?V0 + 15,R5
   \   00042A   78..         MOV     R0,#?V0 + 4
   \   00042C   79..         MOV     R1,#?V0 + 12
   \   00042E   12....       LCALL   ?FLT_MUL
   \   000431   78..         MOV     R0,#?V0 + 8
   \   000433   79..         MOV     R1,#?V0 + 4
   \   000435   12....       LCALL   ?FLT_SUB
   \   000438   7406         MOV     A,#0x6
   \   00043A   12....       LCALL   ?XSTACK_DISP0_8
   \   00043D   78..         MOV     R0,#?V0 + 4
   \   00043F   12....       LCALL   ?L_MOV_X
   \   000442   78..         MOV     R0,#?V0 + 8
   \   000444   79..         MOV     R1,#?V0 + 4
   \   000446   12....       LCALL   ?FLT_ADD
   \   000449   7402         MOV     A,#0x2
   \   00044B   12....       LCALL   ?XSTACK_DISP0_8
   \   00044E   78..         MOV     R0,#?V0 + 8
   \   000450   12....       LCALL   ?L_MOV_TO_X
   \   000453   02....       LJMP    ??calibrationA_3 & 0xFFFF
    377                else
    378                  Aresult=AValue[localID-1];
   \                     ??calibrationA_2:
   \   000456   85..82       MOV     DPL,?XSP + 0
   \   000459   85..83       MOV     DPH,?XSP + 1
   \   00045C   E0           MOVX    A,@DPTR
   \   00045D   F8           MOV     R0,A
   \   00045E   A3           INC     DPTR
   \   00045F   E0           MOVX    A,@DPTR
   \   000460   F9           MOV     R1,A
   \   000461   E8           MOV     A,R0
   \   000462   75F004       MOV     B,#0x4
   \   000465   A4           MUL     AB
   \   000466   C8           XCH     A,R0
   \   000467   AAF0         MOV     R2,B
   \   000469   75F000       MOV     B,#0x0
   \   00046C   A4           MUL     AB
   \   00046D   2A           ADD     A,R2
   \   00046E   FA           MOV     R2,A
   \   00046F   75F004       MOV     B,#0x4
   \   000472   E9           MOV     A,R1
   \   000473   A4           MUL     AB
   \   000474   2A           ADD     A,R2
   \   000475   F9           MOV     R1,A
   \   000476   742C         MOV     A,#0x2c
   \   000478   12....       LCALL   ?XSTACK_DISP0_8
   \   00047B   E0           MOVX    A,@DPTR
   \   00047C   28           ADD     A,R0
   \   00047D   F8           MOV     R0,A
   \   00047E   A3           INC     DPTR
   \   00047F   E0           MOVX    A,@DPTR
   \   000480   39           ADDC    A,R1
   \   000481   F9           MOV     R1,A
   \   000482   E8           MOV     A,R0
   \   000483   24FC         ADD     A,#-0x4
   \   000485   F582         MOV     DPL,A
   \   000487   E9           MOV     A,R1
   \   000488   34FF         ADDC    A,#-0x1
   \   00048A   F583         MOV     DPH,A
   \   00048C   12....       LCALL   ?XLOAD_R2345
   \   00048F   7402         MOV     A,#0x2
   \   000491   12....       LCALL   ?XSTACK_DISP0_8
   \   000494   12....       LCALL   ?XSTORE_R2345
   \   000497   8041         SJMP    ??calibrationA_3
    379            }
    380            else
    381            {
    382              Aresult=AValue[localID-1];
   \                     ??calibrationA_1:
   \   000499   85..82       MOV     DPL,?XSP + 0
   \   00049C   85..83       MOV     DPH,?XSP + 1
   \   00049F   E0           MOVX    A,@DPTR
   \   0004A0   F8           MOV     R0,A
   \   0004A1   A3           INC     DPTR
   \   0004A2   E0           MOVX    A,@DPTR
   \   0004A3   F9           MOV     R1,A
   \   0004A4   E8           MOV     A,R0
   \   0004A5   75F004       MOV     B,#0x4
   \   0004A8   A4           MUL     AB
   \   0004A9   C8           XCH     A,R0
   \   0004AA   AAF0         MOV     R2,B
   \   0004AC   75F000       MOV     B,#0x0
   \   0004AF   A4           MUL     AB
   \   0004B0   2A           ADD     A,R2
   \   0004B1   FA           MOV     R2,A
   \   0004B2   75F004       MOV     B,#0x4
   \   0004B5   E9           MOV     A,R1
   \   0004B6   A4           MUL     AB
   \   0004B7   2A           ADD     A,R2
   \   0004B8   F9           MOV     R1,A
   \   0004B9   742C         MOV     A,#0x2c
   \   0004BB   12....       LCALL   ?XSTACK_DISP0_8
   \   0004BE   E0           MOVX    A,@DPTR
   \   0004BF   28           ADD     A,R0
   \   0004C0   F8           MOV     R0,A
   \   0004C1   A3           INC     DPTR
   \   0004C2   E0           MOVX    A,@DPTR
   \   0004C3   39           ADDC    A,R1
   \   0004C4   F9           MOV     R1,A
   \   0004C5   E8           MOV     A,R0
   \   0004C6   24FC         ADD     A,#-0x4
   \   0004C8   F582         MOV     DPL,A
   \   0004CA   E9           MOV     A,R1
   \   0004CB   34FF         ADDC    A,#-0x1
   \   0004CD   F583         MOV     DPH,A
   \   0004CF   12....       LCALL   ?XLOAD_R2345
   \   0004D2   7402         MOV     A,#0x2
   \   0004D4   12....       LCALL   ?XSTACK_DISP0_8
   \   0004D7   12....       LCALL   ?XSTORE_R2345
    383            }
    384            return Aresult;
   \                     ??calibrationA_3:
   \   0004DA   7402         MOV     A,#0x2
   \   0004DC   12....       LCALL   ?XSTACK_DISP0_8
   \   0004DF   12....       LCALL   ?XLOAD_R2345
   \   0004E2   740A         MOV     A,#0xa
   \   0004E4   12....       LCALL   ?DEALLOC_XSTACK8
   \   0004E7   7F10         MOV     R7,#0x10
   \   0004E9   02....       LJMP    ?BANKED_LEAVE_XDATA
    385          }

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??printRSSIandLQI?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    printRSSIandLQI

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_MinMax_localization?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_MinMax_localization

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_WCL_localization?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_WCL_localization

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??moving_average?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    moving_average

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??moving_average_f?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    moving_average_f

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??gaussianfilter?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    gaussianfilter

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??averagefilter?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    averagefilter

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??calibrationN?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    calibrationN

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??calibrationA?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    calibrationA

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "RSSI:">`:
   \   000000   52535349     DB "RSSI:"
   \            3A00    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "LQI:">`:
   \   000000   4C51493A     DB "LQI:"
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "\\n">`:
   \   000000   0A00         DB "\012"

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant {(0.0F)}>`:
   \   000000   00000000     DD 0H
   \   000004   00000000     DB 0, 0, 0, 0, 0, 0, 0, 0
   \            00000000
   \   00000C   00000000     DB 0, 0, 0, 0

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant {(0.0F), (0.0F), (0.0F), (0.0F)}>`:
   \   000000   00000000     DD 0H
   \   000004   00000000     DD 0H
   \   000008   00000000     DD 0H
   \   00000C   00000000     DD 0H

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant {(48.0F), (48.0F), (55.0F), (56.0F)`:
   \   000000   00004042     DD 42400000H
   \   000004   00004042     DD 42400000H
   \   000008   00005C42     DD 425C0000H
   \   00000C   00006042     DD 42600000H

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_41200000:
   \   000000   00002041     DD 41200000H

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_3f000000:
   \   000000   0000003F     DD 3F000000H

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_40000000:
   \   000000   00000040     DD 40000000H

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_3f800000:
   \   000000   0000803F     DD 3F800000H
    386          
    387          
    388          /*********************************************************************
    389          *********************************************************************/

   Maximum stack usage in bytes:

   ISTACK PSTACK XSTACK Function
   ------ ------ ------ --------
       4      0     80  SampleApp_MinMax_localization
                          0 0 64 -> pow
       2      0     88  SampleApp_WCL_localization
                          0 0 76 -> pow
       0      0     26  averagefilter
       4      0     50  calibrationA
                          0 0 34 -> log10
                          0 0 38 -> pow
       4      0     66  calibrationN
                          0 0 50 -> log10
                          0 0 54 -> pow
       2      0     42  gaussianfilter
       1      0     24  moving_average
       0      0     30  moving_average_f
       1      0     24  printRSSIandLQI
                          0 0 24 -> HalUARTWrite


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       5  ?<Constant "LQI:">
       6  ?<Constant "RSSI:">
       2  ?<Constant "\n">
      16  ?<Constant {(0.0F), (0.0F), (0.0F), (0.0F)}>
      16  ?<Constant {(0.0F)}>
      16  ?<Constant {(48.0F), (48.0F), (55.0F), (56.0F)
       6  ??SampleApp_MinMax_localization?relay
       6  ??SampleApp_WCL_localization?relay
       6  ??averagefilter?relay
       6  ??calibrationA?relay
       6  ??calibrationN?relay
       6  ??gaussianfilter?relay
       6  ??moving_average?relay
       6  ??moving_average_f?relay
       6  ??printRSSIandLQI?relay
    1780  SampleApp_MinMax_localization
    1099  SampleApp_WCL_localization
       4  __Constant_3f000000
       4  __Constant_3f800000
       4  __Constant_40000000
       4  __Constant_41200000
     181  averagefilter
    1260  calibrationA
    1286  calibrationN
     682  gaussianfilter
     279  moving_average
     331  moving_average_f
     595  printRSSIandLQI

 
 7 493 bytes in segment BANKED_CODE
    54 bytes in segment BANK_RELAYS
    77 bytes in segment XDATA_ROM_C
 
 7 547 bytes of CODE  memory
    61 bytes of CONST memory (+ 16 bytes shared)

Errors: none
Warnings: 1
